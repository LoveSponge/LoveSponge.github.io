export const allitems = [
    { id: 1, name: "- a", description: "Unary minus: zero minus a", syntax: "- a", returns: "Number", example: "- -10", game: "Operation Flashpoint", version: 1 },
    { id: 2, name: "! a", description: "Returns a negation of Boolean expression. That means true becomes false and vice versa.", syntax: "Boolean = ! a", returns: "Boolean", example: "_a = alive player; if (!_a) then {     hint 'The player is dead!'; }", game: "Operation Flashpoint", version: 1 },
    { id: 3, name: "a - b", description: "Subtracts b from a. a and b need to be of the same type, both Numbers or both Arrays. In Arma 3 it is possible to subtract nested arrays.", syntax: "a - b", returns: "b: Number or Array", example: "_sum = 10 - 7; //_sum is 3", game: "Operation Flashpoint", version: 1 },
    { id: 4, name: "a != b", description: "Returns whether one value is not equal to another.", syntax: "a != b", returns: "b: Number, Side, String, Object, Group, Structured Text, Config, Display or Control; since VBS2 1.24: Location", example: "if (_counter != 4) then {     hint 'The counter is not equal to the number 4'; }", game: "Operation Flashpoint", version: 1 },
    { id: 5, name: "a * b", description: "Returns the value of a multiplied by b.", syntax: "a * b", returns: "b: Number", example: "_percentage = 0.5 * 100", game: "Operation Flashpoint", version: 1 },
    { id: 6, name: "a / b", description: "a divided by b. Division by 0 throws 'Division by zero' error, however script doesn't stop and the result of such division is assumed to be 0.", syntax: "a / b", returns: "b: Number", example: "_res = 15 / 3; //Result _res is 5", game: "Operation Flashpoint", version: 1 },
    { id: 7, name: "a && b", description: "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).  Identical to: a and b", syntax: "a && b", returns: "b: Boolean - Test condition or variable that returns Boolean.", example: "if ((alive player) && (_enemycount == 0)) then {hint 'you win !'}", game: "Operation Flashpoint", version: 1 },
    { id: 8, name: "a % b", description: "Remainder of a divided by b.", syntax: "a % b", returns: "b: Number", example: "_rand = random 6; _num = _rand - (_rand % 1);", game: "Operation Flashpoint", version: 1 },
    { id: 9, name: "a ^ b", description: "a raised to the power of b", syntax: "a ^ b", returns: "b: Number", example: "5 ^ 2", game: "Operation Flashpoint", version: 1 },
    { id: 10, name: "a = b", description: "Assigns the result of expression on the right to the variable on the left. Technically this is not a command and it is not listed in supportInfo. This is more of a compiler instruction. Also, you cannot do this a = b = c = 4;", syntax: "#NAME?", returns: "Nothing", example: "_value = 5", game: "Operation Flashpoint", version: 1 },
    { id: 11, name: "a == b", description: "Check if one value is equal to another.  Both values need to be of the same type.", syntax: "valuea == valueb", returns: "valueb: Number, Group, Side, String, Object, Structured Text, Config, Display or Control; since VBS2 1.24: Location", example: "if (player == leader group player) then  {     hint 'You are the leader of your group.' } else {     hint 'Someone else is the boss' }", game: "Operation Flashpoint", version: 1 },
    { id: 12, name: "a greater b", description: "Returns true if a is greater than b, else returns false.", syntax: "a > b", returns: "b: Number", example: "if (fuel truck1 > 0) then {hint 'Truck1 has some fuel left.'}", game: "Operation Flashpoint", version: 1 },
    { id: 13, name: "a greater= b", description: "Returns true if a is greater than or equal to b, else returns false.", syntax: "a >= b", returns: "b: Number", example: "if (fuel truck1 >= 0.5) then {hint 'Truck1 has at least half a tank of fuel left.'}", game: "Operation Flashpoint", version: 1 },
    { id: 14, name: "a less b", description: "Returns true if a is less than b, else returns false.", syntax: "a < b", returns: "b: Number", example: "_test = 1 < 2; //true", game: "Operation Flashpoint", version: 1 },
    { id: 15, name: "a less= b", description: "Returns true if a is less than or equal to b, else returns false.", syntax: "a <= b", returns: "b: Number", example: "if (fuel truck1 <= 0) then {hint 'Truck1 has no fuel left.'}", game: "Operation Flashpoint", version: 1 },
    { id: 16, name: "a or b", description: "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).  Identical to: a or b", syntax: "a || b", returns: "b: Boolean - Test condition or variable that returns Boolean.", example: "if ((OBJ1) || (_enemycount == 0)) then {hint 'you win !'}", game: "Operation Flashpoint", version: 1 },
    { id: 17, name: "a plus b", description: "b added to a.", syntax: "a + b", returns: "b: Number", example: "Number _result = 1 + 2", game: "Operation Flashpoint", version: 1 },
    { id: 18, name: "a:b", description: "See switch do", syntax: "a : b", returns: "b: Code", example: "? (_var == _test) : hint '_var is equal to _test!';", game: "Armed Assault", version: 1 },
    { id: 19, name: "abs", description: "Absolute value of a real number", syntax: "Number = abs n", returns: "Number", example: "_n = abs -3;", game: "Operation Flashpoint", version: 1 },
    { id: 20, name: "accTime", description: "Returns the current time acceleration factor", syntax: "Number = accTime", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 21, name: "acos", description: "ArcCosine of a number, result in Degrees", syntax: "Number = acos x", returns: "Number", example: "_degrees = acos 0.5", game: "Operation Flashpoint", version: 1 },
    { id: 22, name: "action", description: "Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax.       NOTES:   While this command should be executed where unit is local, it is not always the case. Actions such as 'Eject', 'GetOut', 'GetInXXXX', 'MoveToXXXX', etc can be executed on remote units.   In SP, when user Alt+Tabs the simulation is paused and so the action will also halt until user returns to the game. For example, player action ['GetInDriver', car] executed while user is Alt+Tabbed will result in user seeing the action happening when he returns to the game screen. This doesn't happen in MP.", syntax: "unit action actionArray", returns: "actionArray: Array", example: "player action ['SitDown', player];", game: "Operation Flashpoint", version: 1 },
    { id: 23, name: "actionIDs", description: "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.", syntax: "actionIDs entity", returns: "Array - Array with user action IDs", example: "_actions = actionIDs player;", game: "Arma 3", version: 1.64 },
    { id: 24, name: "actionKeys", description: "Returns Array containing dikCodes of keys, buttons and combos assigned to the given user action. Action names could be found in config class ControllerSchemes or user action names or user profile, for example: keyWatch[]={24}; To retrieve the value, use the property name without 'key': actionKeys 'Watch'; // 24 In addition, some of the actions are also listed in here: inputAction/actions", syntax: "actionKeys userAction", returns: "Array of Numbers", example: "actionKeys 'Watch'; // 24", game: "Armed Assault", version: 1 },
    { id: 25, name: "actionKeysImages", description: "Returns a list of button images or names assigned to the given user action. A maximum of maxKeys keys is listed. You can find the action names in config class ControllerSchemes or user action names.", syntax: "Structured Text = actionKeysImages userAction", returns: "Structured Text", example: "null", game: "Armed Assault", version: 1 },
    { id: 26, name: "actionKeysNames", description: "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.", syntax: "actionKeysNames userAction", returns: "String", example: "_list = actionKeysNames 'ReloadMagazine'; //'R'", game: "Armed Assault", version: 1 },
    { id: 27, name: "actionKeysNamesArray", description: "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.", syntax: "actionKeysNamesArray userAction", returns: "Array of Strings", example: "list = actionKeysNamesArray 'ReloadMagazine';", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 28, name: "actionName", description: "Returns localized name of action.", syntax: "actionName action", returns: "String", example: "actionName 'ReloadMagazine'", game: "Arma 3", version: 0.5 },
    { id: 29, name: "actionParams", description: "Returns Array with params for given user action id (similar to addAction param array). The output array is of the following format:  [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection],  where:  title: String - action title text  script: String - script file or script expression assigned to the action  arguments: Anything or nil - arguments passed to the action  priority: Number - action priority on the action menu  showWindow: Boolean - whether the action is shown in the center of the screen too  hideOnUse: Boolean - whether the action menu should close after selecting the action   shortcut: String - action bindings to some existing engine action if any  condition: String - expression returning true or nil for action to appear on the action menu  radius: Number - max distance to entity at which action becomes available. -1 means it is engine default (~15m)  unconscious: Boolean - whether the action is available to unconscious person  textWindowBackground: String - same as textWindowBackground in setUserActionText  textWindowForeground: String - same as textWindowForeground in setUserActionText  selection: String - named selection in Geometry LOD to which the action is attached New array element selection is available since Arma 3 v1.69.140846", syntax: "entity actionParams id", returns: "id: Number - id of existing user action (returned by addAction or actionIDs)", example: "_params = player actionParams 0;", game: "Arma 3", version: 1.64 },
    { id: 30, name: "activateAddons", description: "Activates the listed addons. The list of active addons is initialized during this function.", syntax: "activateAddons [addon1, ...]", returns: "Nothing", example: "activateAddons ['BISOFP'];", game: "Armed Assault", version: 1 },
    { id: 31, name: "activatedAddons", description: "Returns a list of all activated addons.", syntax: "activatedAddons", returns: "null", example: "_addons = activatedAddons;", game: "Arma 3", version: 1.14 },
    { id: 32, name: "activateKey", description: "Activates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.  See keys, keysLimit and doneKeys in the description.ext file of the missions.", syntax: "activateKey keyname", returns: "Nothing", example: "activateKey 'Mission04Key';", game: "Armed Assault", version: 1 },
    { id: 33, name: "add3DENConnection", description: "Connect entities together.", syntax: "add3DENConnection [type, from, to]", returns: "from: Array of Eden Entities - entities which are being connected", example: "add3DENConnection ['RandomStart',get3DENSelected 'Object','marker_0']", game: "Arma 3", version: 1.56 },
    { id: 34, name: "add3DENEventHandler", description: "Add code to be run when a Eden Editor event is triggered.    See the list of all Eden Editor Event Handlers.", syntax: "add3DENEventHandler [type,code]", returns: "code: Code", example: "eh = add3DENEventHandler ['onUndo',{systemChat 'Zip...'}];", game: "Arma 3", version: 1.56 },
    { id: 35, name: "add3DENLayer", description: "Add an editing layer in Eden Editor.", syntax: "parentLayerID add3DENLayer name", returns: "name: String - layer display name", example: "_myLayer = -1 add3DENLayer 'Enemy Base'; _myLayerFort = _myLayer add3DENLayer 'Fortifications'; _myLayerPatrol = _myLayer add3DENLayer 'Patrols';", game: "Arma 3", version: 1.56 },
    { id: 36, name: "addAction", description: "This command syntax is for Arma 3 only. For TKOH and older versions see addAction TKOH  Adds an entry to the action menu of an object (scroll wheel menu). The action can only be activated when in proximity to the object (eg: building). Adding an action to the player obviously makes that action available to the player at all times. The appearance of onscreen text could be further tweaked with setUserActionText. For event handling of user interaction see inGameUISetEventHandler   This command has local effect. Created action is only available on the computer where command was executed. To make action available to all players, command must be executed on all connected clients (see remoteExec). addAction is also ignored on dedicated server, because of no user interface. In Arma 3 addAction does not work on animals. This is intended behavior.     Since Arma 3 v1.63.136787, two new params are available: radius and unconscious.  Since Arma 3 v1.69.140846, new param is available: selection.", syntax: "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection]", returns: "[title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection]: Array", example: "player addAction ['A Useless Action That Does Nothing', {}]; player addAction ['<t color='#FF0000'>This Useless Action Is RED</t>', {hint 'RED'}]; player addAction ['Hint Hello!', {hint format ['Hello %1!', _this select 3]}, name player]; player addAction ['String Exec', 'hint 'this is also compiled''];", game: "Operation Flashpoint", version: 1.1 },
    { id: 37, name: "addBackpack", description: "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit. Classname list of available backpacks : Arma 2 OA backpacks Arma 3 backpacks - objects starting with 'B_', starts with 'B_AssaultPack_khk'", syntax: "unit addBackpack packClassName", returns: "packClassName: String", example: "this addBackpack 'TK_RPG_Backpack_EP1';", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 38, name: "addBackpackCargo", description: "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here.          In Arma 3, arguments for this command must be local (). For global variant see addBackpackCargoGlobal", syntax: "vehicle addBackpackCargo [packClassName,count]", returns: "vehicle: Object - vehicle to add the backpack to", example: "this addBackpackCargo ['TK_RPG_Backpack_EP1',2];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 39, name: "addBackpackCargoGlobal", description: "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here", syntax: "vehicle addBackpackCargoGlobal  [packClassName, count]", returns: "packClassName: String,  See the topic Category:Weapons for reference about possible values.", example: "this addBackpackCargoGlobal ['TK_RPG_Backpack_EP1',2];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 40, name: "addBackpackGlobal", description: "Adds a backpack to a unit (even non-local)", syntax: "unit addBackpackGlobal backpack", returns: "backpack: String - backpack class name", example: "player addBackpackGlobal 'B_AssaultPack_khk';", game: "Arma 3", version: 1.32 },
    { id: 41, name: "addCamShake", description: "Creates the camera shaking effect, like when you are near an explosion", syntax: "addCamShake [power, duration, frequency]", returns: "duration: Number - Duration in seconds (how long the effect will last)", example: "addCamShake [10, 1, 25];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 42, name: "addCuratorAddons", description: "Allow curator use of given addon.", syntax: "curatorObj addCuratorAddons addons", returns: "addons: Array of CfgPatches classes", example: "curatorObj addCuratorAddons ['A3_Armor_F_AMV','A3_Armor_F_Panther'];", game: "Arma 3", version: 1.16 },
    { id: 43, name: "addCuratorCameraArea", description: "Adds or changes curator camera area (depends on if ID is already used).", syntax: "curatorObj addCuratorCameraArea [cameraAreaID,position,radius]", returns: "curatorObj: Object - Curator module.", example: "myCurator addCuratorCameraArea [3,position mySoldier,300];", game: "Arma 3", version: 1.16 },
    { id: 44, name: "addCuratorEditableObjects", description: "Register objects which can be edited by a curator.", syntax: "curatorObj addCuratorEditableObjects [objects,addCrew]", returns: "curatorObj: Object - Curator module.", example: "curatorModule addCuratorEditableObjects [[car],true ];", game: "Arma 3", version: 1.16 },
    { id: 45, name: "addCuratorEditingArea", description: "Adds or changes curator edit area (depends on if ID is already used).", syntax: "curatorObj addCuratorEditingArea [editAreaID,position,radius]", returns: "curatorObj: Object - Curator module.", example: "myCurator addCuratorEditingArea [4,position player,1000];", game: "Arma 3", version: 1.16 },
    { id: 46, name: "addCuratorPoints", description: "Adds or removes curator points. Points can be only in range from 0 to 1.", syntax: "curatorObj addCuratorPoints points", returns: "points: Number", example: "curatorModule addCuratorPoints 0.5", game: "Arma 3", version: 1.16 },
    { id: 47, name: "addEditorObject", description: "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional.", syntax: "map addEditorObject [type,[name1,value1,...],subtype class]", returns: "[type,[name1,value1,...],subtype class]: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 48, name: "addEventHandler", description: "Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the 'killed' EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.  For more information about event handlers and their types check the scripting topic Event handlers in this reference. You may add as many event handlers of any type as you like to every unit. For instance, if you add an event handler of type 'killed' and one already exists, the old one doesn't get overwritten. Use removeEventHandler to delete event handlers.", syntax: "object addEventHandler [type, command]", returns: "[type, command]: Array", example: "_EHkilledIdx = player addEventHandler ['killed', {_this exec 'playerKilled.sqs'}]", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 49, name: "addGoggles", description: "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter.", syntax: "unit addGoggles type", returns: "type: String", example: "player addGoggles 'G_Tactical_Clear';", game: "Arma 3", version: 0.5 },
    { id: 50, name: "addGroupIcon", description: "Add icon to a group. Returns icon ID", syntax: "group addGroupIcon properties", returns: "properties: Array - [IconClass, offset (optional)]", example: "groupName addGroupIcon ['b_inf',[offsetX,offsetY]]", game: "Arma 2", version: 1 },
    { id: 51, name: "addHandgunItem", description: "Adds weapon item to the weapon cargo space. This is used for infantry weapons.  As of Arma 3 DEV 1.37, this command also supports weapon magazines.", syntax: "unit addHandgunItem item", returns: "item: String", example: "player addHandgunItem 'muzzle_snds_L';", game: "Arma 3", version: 0.5 },
    { id: 52, name: "addHeadgear", description: "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.", syntax: "unit addHeadgear item", returns: "item: String", example: "player addHeadgear 'H_HelmetB';", game: "Arma 3", version: 0.5 },
    { id: 53, name: "addItem", description: "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.", syntax: "unit addItem item", returns: "item: String", example: "bluforUnit addItem 'NVGoggles'; bluforUnit assignItem 'NVGoggles'; opforUnit addItem 'NVGoggles_OPFOR'; opforUnit assignItem 'NVGoggles_OPFOR'; independentUnit addItem 'NVGoggles_INDEP'; independentUnit assignItem 'NVGoggles_INDEP';", game: "Arma 3", version: 0.5 },
    { id: 54, name: "addItemCargo", description: "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see addItemCargoGlobal", syntax: "box addItemCargo [item, count]", returns: "[item, count]: Array", example: "supplyBox addItemCargo ['optic_ARCO', 10];", game: "Arma 3", version: 0.5 },
    { id: 55, name: "addItemCargoGlobal", description: "Creates new items and stores them in the given container. Works with items, weapons and magazines.", syntax: "box addItemCargoGlobal [item, count]", returns: "[item, count]: Array", example: "supplyBox addItemCargoGlobal ['optic_ARCO2', 10];", game: "Arma 3", version: 0.5 },
    { id: 56, name: "addItemPool", description: "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)", syntax: "addItemPool ['itemName', count]", returns: "itemName': String - Item name", example: "addItemPool ['ItemGPS', 5];", game: "Arma 3", version: 1.04 },
    { id: 57, name: "addItemToBackpack", description: "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.", syntax: "unit addItemToBackpack item", returns: "item: String", example: "player addItemToBackpack 'arifle_MXM_Hamr_pointer_F';", game: "Arma 3", version: 1.04 },
    { id: 58, name: "addItemToUniform", description: "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.", syntax: "unit addItemToUniform item", returns: "item: String", example: "player addItemToUniform 'itemGPS';", game: "Arma 3", version: 1.04 },
    { id: 59, name: "addItemToVest", description: "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.", syntax: "unit addItemToVest item", returns: "item: String", example: "player addItemToVest 'itemGPS';", game: "Arma 3", version: 1.04 },
    { id: 60, name: "addLiveStats", description: "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)", syntax: "unit addLiveStats score", returns: "score: Number", example: "null", game: "Arma 2", version: 1 },
    { id: 61, name: "addMagazine", description: "Add a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled, any further addMagazine commands are ignored.    Note: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded.             In Arma 3, the alternative variant of this command (addMagazine ARRAY) accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.", syntax: "unitName addMagazine magazineName", returns: "magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.", example: "player addMagazine '30Rnd_556x45_STANAG';", game: "Operation Flashpoint", version: 1 },
    { id: 62, name: "addMagazine array", description: "Adds a magazine to a person with said ammunition count.  Note: When you add a new weapon via scripting commands as well as the magazines for it, the addMagazine command has to be given before the addWeapon command, otherwise the weapon won't be loaded.           In Arma 3 this command accepts global arguments , i.e. you can use it on the server to give remote unit a magazine with limited ammo.", syntax: "unitName addMagazine [magazineName, ammoCount]", returns: "magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.", example: "player addMagazine ['30Rnd_556x45_STANAG', 15];", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 63, name: "addMagazineAmmoCargo", description: "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.", syntax: "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]", returns: "[magazine, quantity, ammocount]: Array", example: "_ammobox addMagazineAmmoCargo ['30Rnd_65x39_caseless_mag', 2, 5];", game: "Arma 3", version: 1.32 },
    { id: 64, name: "addMagazineCargo", description: "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.           In Arma 3, arguments for this command must be local (). For global variant see addMagazineCargoGlobal", syntax: "vehicleName addMagazineCargo [magazineName, count]", returns: "[magazineName, count]: Array", example: "_truck addMagazineCargo ['M16', 5];", game: "Operation Flashpoint", version: 1 },
    { id: 65, name: "addMagazineCargoGlobal", description: "Add magazines to the cargo space of vehicles, which can be taken out by infantry units.  MP Synchronized", syntax: "vehicleName addMagazineCargoGlobal [magazineName, count]", returns: "[magazineName, count]: Array", example: "_truck addMagazineCargoGlobal ['M16', 5];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 66, name: "addMagazineGlobal", description: "Adds a magazine to the unit.   Note: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows. When doing so, application behaviour is undefined.          This command is broken in MP as it dupes inventory items. Use addMagazine <array> for now, it takes global argument and has global effect too.", syntax: "unit addMagazineGlobal magazineName", returns: "magazineName: String", example: "player addMagazineGlobal '30Rnd_65x39_caseless_mag';", game: "Arma 3", version: 0.76 },
    { id: 67, name: "addMagazinePool", description: "Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.", syntax: "addMagazinePool [magazineName, count]", returns: "magazineName: String - magazine name. See the topic Category:Weapons for reference about possible values.", example: "addMagazinePool ['M16', 20];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 68, name: "addMagazines", description: "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.", syntax: "unit addMagazines [magazineName, count]", returns: "[magazineName, count]: Array", example: "player addMagazines ['30Rnd_65x39_caseless_mag', 3];", game: "Arma 3", version: 0.5 },
    { id: 69, name: "addMagazineTurret", description: "Adds a magazine to the turret. Use turret path [-1] for driver's turret.  Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3  v1.55.133817 it is possible to set custom ammo count in added magazine.", syntax: "vehicle addMagazineTurret [magazineName, turretPath, ammoCount]", returns: "[magazineName, turretPath]: Array", example: "_tank addMagazineTurret ['SmokeLauncherMag',[0,0]];", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 70, name: "addMenu", description: "Adds a new menu button. Priority is optional.", syntax: "map addMenu [text,priority]", returns: "[text,priority]: Array -", example: "example", game: "Arma 2", version: 1 },
    { id: 71, name: "addMenuItem", description: "Creates a new menu item. Menu can be 'file' or 'view',index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first).", syntax: "map addMenuItem [menu or index,text,command,priority]", returns: "[menu or index,text,command,priority]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 72, name: "addMissionEventHandler", description: "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.  For the list of available mission event handlers see: Arma_3:_Event_Handlers/addMissionEventHandler", syntax: "addMissionEventHandler [type, command]", returns: "type: String", example: "// A script could be executed to stop custom scripts graciously, or save progress & stats, for example:  _id = addMissionEventHandler ['Ended',{ _this execVM 'missionEnded.sqf' }];", game: "Arma 3", version: 0.5 },
    { id: 73, name: "addMPEventHandler", description: "Adds MP event handler (EH) to the given object and returns EH handle. MP event handlers are added globally to every client on network in multiplayer and will fire on every client too upon event. If EH has some data to return upon event (e.g. the 'MPKilled' EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.   For more information see: Arma_3:_Event_Handlers#addMPEventHandler", syntax: "object addMPEventHandler [type, expression]", returns: "[type, expression]: Array", example: "_index = player addMPEventHandler ['mpkilled', {Null = _this execVM 'playerkilled.sqf';}];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 74, name: "addMusicEventHandler", description: "Adds playMusic event handler. Returns id of the handler or -1 when failed. Just like addMissionEventHandler, music EH is also attached to the mission.", syntax: "addMusicEventHandler [type, function]", returns: "type: String - 'MusicStart' or 'MusicStop'", example: "_ehID = addMusicEventHandler ['MusicStart', {hint str _this}];", game: "Arma 3", version: 0.5 },
    { id: 75, name: "addOwnedMine", description: "Sets ownership over a remotely detonatable mine to the unit.", syntax: "unti addOwnedMine mine", returns: "mine: Object - The mine object", example: "player addOwnedMine SuperMine;", game: "Arma 3", version: 1.62 },
    { id: 76, name: "addPlayerScores", description: "MP server only: Adds player score.", syntax: "unit addPlayerScores values", returns: "values: Array - killsInfantry , killsSoft, killsArmor, killsAir, killed", example: "player addPlayerScores [0, 1, 0, 0, 1];", game: "Arma 3", version: 1.62 },
    { id: 77, name: "addPrimaryWeaponItem", description: "Adds weapon item to the weapon cargo space. This is used for infantry weapons.  As of Arma 3 DEV 1.37, this command also supports weapon magazines.", syntax: "unit addPrimaryWeaponItem item", returns: "item: String", example: "player addPrimaryWeaponItem 'muzzle_snds_H';", game: "Arma 3", version: 0.5 },
    { id: 78, name: "addPublicVariableEventHandler", description: "This event handler will detect if a missionNamespace variable (it is attached to) has been broadcast over network with publicVariable, publicVariableClient or publicVariableServer commands and will execute EH code upon detection. Arguments passed to the code in _this array are:    _this select 0: String - broadcast variable name (same variable name EH is attached to)  _this select 1: Anything - broadcast variable value   _this select 2: Object, Group - target the variable got set on with setVariable  (see: alternative syntax)    Please note:  * EH works only in Multiplayer environment.  * EH will not fire on the machine that executed broadcast command, only on the machines that receive the broadcast.  * The value of broadcast variable can be exactly the same, it is the actual broadcast that triggers EH not the change in variable.           Alt syntax of this command doesn't work as intended", syntax: "varName addPublicVariableEventHandler code", returns: "code: Code - By default, the code is executed in missionNamespace", example: "publicThis' addPublicVariableEventHandler { 	hint format [ 		'%1 has been updated to: %2', 		_this select 0, 		_this select 1 	] };", game: "Armed Assault", version: 1.09 },
    { id: 79, name: "addRating", description: "Add a number to the rating of a unit - negative values can be used to reduce the rating.  This command is usually used to reward for completed mission objectives. The rating is given at the end of the mission and is automatically adjusted when killing enemies or friendlies.    When the rating gets below -2000, the unit's side switches to 'ENEMY' (sideEnemy) and the unit is attacked by everyone.(see Rating Values)    See also: Arma_3:_Event_Handlers#HandleRating", syntax: "unitName addRating rating", returns: "rating: Number", example: "player addRating 2000;", game: "Operation Flashpoint", version: 1 },
    { id: 80, name: "addResources", description: "Adds resources to a team member.", syntax: "teamMember addResources [resource1, resource2, ...]", returns: "resource1: String", example: "null", game: "Arma 2", version: 1 },
    { id: 81, name: "addScore", description: "Add a number to the score of a unit. This score is shown in multiplayer in the 'I' ('P' in Arma 3) screen. Negative values will remove from the score. Server execution only.    See also: Arma_3:_Event_Handlers#HandleScore", syntax: "unit addScore score", returns: "score: Number", example: "unit addScore 10;", game: "Operation Flashpoint", version: 1 },
    { id: 82, name: "addScoreSide", description: "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.", syntax: "side addScoreSide value", returns: "value: Number", example: "west addScoreSide 10;", game: "Arma 3", version: 1.12 },
    { id: 83, name: "addSecondaryWeaponItem", description: "Adds weapon item to the weapon cargo space. This is used for infantry weapons.  As of Arma 3 DEV 1.37, this command also supports weapon magazines.", syntax: "unit addSecondaryWeaponItem item", returns: "item: String", example: "null", game: "Arma 3", version: 0.5 },
    { id: 84, name: "addSwitchableUnit", description: "Add a unit into the list of units available for Team Switch.", syntax: "addSwitchableUnit unitName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 85, name: "addTeamMember", description: "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.     The same Team Member can be member of several different teams at the same time.", syntax: "team addTeamMember member", returns: "member: Team Member", example: "_team addTeamMember _teamMember;", game: "Arma 2", version: 1 },
    { id: 86, name: "addToRemainsCollector", description: "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext", syntax: "addToRemainsCollector remains", returns: "Nothing", example: "addToRemainsCollector [unit1, unit2, vehicle1];", game: "Arma 3", version: 1.32 },
    { id: 87, name: "addUniform", description: "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use isUniformAllowed and to force add incompatible uniform use forceAddUniform", syntax: "unit addUniform type", returns: "type: String", example: "_unit addUniform 'U_B_CombatUniform_mcam';", game: "Arma 3", version: 0.5 },
    { id: 88, name: "addVehicle", description: "Adds a specified vehicle for use by a specified AI led group taking into account vehicle's cost. The vehicle will be considered as an available vehicle for use by this group.  When vehicle is added in this way, it can appear as a target for the enemy even if the vehicle is currently free of the crew. Vehicles with crew, which are placed in the editor, get automatically added to the group. To remove vehicle from a group, use leaveVehicle.", syntax: "groupName addVehicle vehicleName", returns: "vehicleName: Object", example: "_grp addVehicle _vehicle", game: "Armed Assault", version: 1.05 },
    { id: 89, name: "addVest", description: "Create a new vest and try to link it into vest slot.", syntax: "unit addVest type", returns: "type: String", example: "player addVest 'V_TacVest_blk_POLICE';", game: "Arma 3", version: 0.5 },
    { id: 90, name: "addWaypoint", description: "Adds (or inserts when index is given) a new waypoint to a group.  The waypoint is placed randomly within a circle with the given center and radius.  The function returns a waypoint with format [group, index].", syntax: "groupName addWaypoint [center, radius, index, name]", returns: "center: Position or Object", example: "_wp =_grp addWaypoint [position player, 0];", game: "Armed Assault", version: 1 },
    { id: 91, name: "addWeapon", description: "Add a weapon to a unit. The unit must be local to the computer where command is executed. For a global version of this command see addWeaponGlobal.  Infantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.", syntax: "unit addWeapon weapon", returns: "weapon: String - weapon class name. See the topic Category:Weapons for reference about possible values.", example: "player addMagazine '30Rnd_556x45_Stanag'; player addWeapon 'BAF_L85A2_RIS_SUSAT';", game: "Operation Flashpoint", version: 1 },
    { id: 92, name: "addWeaponCargo", description: "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.          In Arma 3, arguments for this command must be local (). For global variant see addWeaponCargoGlobal", syntax: "vehicleName addWeaponCargo [weaponName, count]", returns: "[weaponName, count]: Array", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 93, name: "addWeaponCargoGlobal", description: "Add weapons to the cargo space of vehicles, which can be taken out by infantry units.   MP Synchronized", syntax: "vehicleName addWeaponCargoGlobal [weaponName, count]", returns: "[weaponName, count]: Array", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 94, name: "addWeaponGlobal", description: "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot.  To make sure the added weapon is loaded and ready, add the magazine first.          This command is broken when used on dedicated server", syntax: "unit addWeaponGlobal weapon", returns: "weapon: String - weapon class name", example: "{ 	_x addMagazineGlobal 'Laserbatteries'; 	_x addWeaponGlobal 'Laserdesignator'; } forEach allUnits;", game: "Arma 3", version: 0.76 },
    { id: 95, name: "addWeaponItem", description: "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.", syntax: "unit addWeaponItem [weaponName, itemName]", returns: "[weaponName, itemName]: Array", example: "player addWeaponItem ['arifle_MX_GL_ACO_F', '1Rnd_HE_Grenade_shell'];", game: "Arma 3", version: 1.38 },
    { id: 96, name: "addWeaponPool", description: "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.", syntax: "addWeaponPool [weaponName, count]", returns: "weaponName: String - weapon name. See the topic Category:Weapons for reference about possible values.", example: "addWeaponPool ['M16',5];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 97, name: "addWeaponTurret", description: "Adds a weapon to the turret. Use turret path [-1] for driver's turret.", syntax: "vehicle addWeaponTurret [weaponName, turretPath]", returns: "[weaponName, turretPath]: Array", example: "_tank addWeaponTurret ['LMG_M200',[0,0]];", game: "Arma 3", version: 1.32 },
    { id: 98, name: "admin", description: "This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id. Possible results are:  1 - client is admin that is voted in  2 - client is admin that is logged in In all other cases it returns 0. To self check the admin state of a local client, use BIS_fnc_admin.", syntax: "admin ownerID", returns: "Number - admin state of given client:  0 - client is not an admin  1 - client is admin that is voted in  2 - client is admin that is logged in", example: "_isLoggedInAdmin = admin 3 == 2;", game: "Arma 3", version: 1.7 },
    { id: 99, name: "agent", description: "Return a person for a given agent.", syntax: "agent teamMember", returns: "Object", example: "null", game: "Arma 2", version: 1 },
    { id: 100, name: "agents", description: "Return a list of agents in the current mission.", syntax: "agents", returns: "Posted on August 1, 2013 - 21:55 (GMT)", example: "{agent _x moveTo position player} forEach agents;", game: "Arma 2", version: 1 },
    { id: 101, name: "AGLToASL", description: "Converts position from PositionAGL to PositionASL", syntax: "AGLToASL posAGL", returns: "PositionASL", example: "_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);", game: "Arma 3", version: 1.5 },
    { id: 102, name: "aimedAtTarget", description: "Returns how good the weapon of the vehicle is aimed at the target.", syntax: "vehicle aimedAtTarget [target, weapon]", returns: "[target, weapon]: Array", example: "_aimingQuality = heli aimedAtTarget [target];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 103, name: "aimPos", description: "Returns the position of the object other units can aim to.", syntax: "aimPos object", returns: "Array - format PositionASL", example: "aimPos player", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 104, name: "airDensityRTD", description: "Returns air density in given altitude", syntax: "airDensityRTD altitude", returns: "Number", example: "_density = airDensityRTD 0;//Returns 1.22406", game: "Arma 3", version: 1.34 },
    { id: 105, name: "airplaneThrottle", description: "Returns throttle position. Works only on player's vehicle.", syntax: "airplaneThrottle airplane", returns: "Number", example: "_trottle = airplaneThrottle myPlane", game: "Arma 3", version: 1.7 },
    { id: 106, name: "airportSide", description: "Checks a side of the airport. ID is the number to identify which airport on the island you want to check.   Possible values for sara are:   0 - Paraiso  1 - Rahmadi  2 - Pita  3 - Antigua", syntax: "airportSide id", returns: "Side", example: "airportSide 0;", game: "Armed Assault", version: 1.08 },
    { id: 107, name: "AISFinishHeal", description: "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using 'HandleHeal' event handler.", syntax: "AISFinishHeal [unit, healer, healercanheal]", returns: "unit: Object - wounded", example: "AISFinishHeal [_wounded, _medic, true];", game: "Arma 2", version: 1 },
    { id: 108, name: "alive", description: "Check if given vehicle/person/building is alive (i.e. not dead or destroyed). alive objNull returns false.", syntax: "alive object", returns: "Boolean: true when alive, false when dead", example: "?!(alive player) : exit", game: "Operation Flashpoint", version: 1 },
    { id: 109, name: "all3DENEntities", description: "Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers in following format:  [objects, groups, triggers, systems, waypoints, markers, layers, comments]  objects: Array of Objects  groups: Array of Groups  triggers: Array of Objects  systems: Array of Objects  waypoints: Array of Arrays in Waypoint format  markers: Array of Strings  layers: Array of Numbers  comments: Array of Numbers", syntax: "all3DENEntities", returns: "null", example: "systemChat str all3DENEntities;", game: "Arma 3", version: 1.56 },
    { id: 110, name: "allControls", description: "Returns a list of all controls for desired existing display. Returned controls also include controls from control groups", syntax: "allControls display", returns: "Array of Controls", example: "_allCtrls = allControls findDisplay 46;", game: "Arma 3", version: 1.38 },
    { id: 111, name: "allCurators", description: "Returns list of all curators.", syntax: "allCurators", returns: "null", example: "_myVariable = allCurators;", game: "Arma 3", version: 1.16 },
    { id: 112, name: "allCutLayers", description: "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so:  _layerNum = 'myLayerName' cutFadeOut 0;.   The index of the layer name in the array corresponds to the layer number the cut effect will be displayed on. If no layers were defined, the return is [''], because 0 layer is reserved for usage in cut commands without layer param or when name of the layer given is empty ''.", syntax: "allCutLayers", returns: "null", example: "_allLayers = allCutLayers;", game: "Arma 3", version: 1.58 },
    { id: 113, name: "allDead", description: "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.", syntax: "allDead", returns: "null", example: "{ deleteVehicle _x } forEach allDead;", game: "Arma 2: Operation Arrowhead", version: 1.57 },
    { id: 114, name: "allDeadMen", description: "Return a list of dead units including agents. Dead unit might be inside vehicle.", syntax: "allDeadMen", returns: "null", example: "{ deleteVehicle _x } forEach allDeadMen;", game: "Arma 3", version: 0.5 },
    { id: 115, name: "allDisplays", description: "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via uiNamespace variable, which is updated every time display is opened or closed. For example, to access IGUI displays: uiNamespace getVariable ['IGUI_displays', []];. Other display variables:  3DENDisplays_displays  3DENDisplaysTemp_displays  GUI_displays  IGUI_displays  Loading_displays  CuratorDisplays_displays  BootcampDisplays_displays  CuratorTitles_displays  BootcampTitles_displays  KartDisplays_displays", syntax: "allDisplays", returns: "null", example: "uiNamespace getVariable ['IGUI_displays', []];", game: "Arma 3", version: 1.38 },
    { id: 116, name: "allGroups", description: "Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic.", syntax: "allGroups", returns: "null", example: "{(leader _x) sideChat 'Go ! Go ! Go !'} forEach allGroups;", game: "Arma 2", version: 1 },
    { id: 117, name: "allMapMarkers", description: "Return all markers in map including user placed markers (_USER_DEFINED #).    Since Arma 3 v1.57.134377 User defined markers have the following name format:  _USER_DEFINED #<PlayerID>/<MarkerID>/<ChannelID> where:  <PlayerID> - unique network id of the player (same as _id in onPlayerConnected)  <MarkerID> - a marker counter id  <ChannelID> - id of the chat channel on which marker was placed (see currentChannel)", syntax: "allMapMarkers", returns: "if (_someString in allMapMarkers) then {   hint (_someString + ' is a valid marker name'); };", example: "_markers = allMapMarkers;", game: "Arma 3", version: 0.5 },
    { id: 118, name: "allMines", description: "Returns an array of all mines in the mission", syntax: "allMines", returns: "null", example: "allMines", game: "Arma 3", version: 1.24 },
    { id: 119, name: "allMissionObjects", description: "Returns all mission objects (created by or during a mission) with given type (or its subtype). In some cases allMissionObjects could be substituted with entities, which would be much much faster alternative. Some of the unusual mission objects that can be detected with this command (as well as with nearestObject):  '#slop' - blood drop  '#mark' - unit footprints  '#track' - vehicle tracks  '#crater' - explosion crater on the ground  '#crateronvehicle' - bullet marks on vehicle  '#explosion' - an explosion  '#objectdestructed' - building, tree or bush destruction  '#soundonvehicle' - sound created with say3D for example", syntax: "allMissionObjects type", returns: "Array of Objects", example: "_airObjects = allMissionObjects 'Air';", game: "Arma 2: Operation Arrowhead", version: 1.57 },
    { id: 120, name: "allow3DMode", description: "Allow/dissallow 3D mode.,", syntax: "map allow3DMode bool", returns: "bool: Boolean -", example: "null", game: "Arma 2", version: 1 },
    { id: 121, name: "allowCrewInImmobile", description: "If true, units can be in a vehicle with broken tracks/wheels.", syntax: "vehicle allowCrewInImmobile bool", returns: "bool: Boolean", example: "_vehicle allowCrewInImmobile true;", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 122, name: "allowCuratorLogicIgnoreAreas", description: "Allows curator placing and working with modules outside of edit areas.", syntax: "curatorObj allowCuratorLogicIgnoreAreas allow", returns: "allow: Boolean", example: "curatorModule allowCuratorLogicIgnoreAreas true", game: "Arma 3", version: 1.16 },
    { id: 123, name: "allowDamage", description: "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage. To check if damage is allowed at current locality, see isDamageAllowed.        !   This command has to be executed where object is local and as long as object does not change locality the effect of this command will be global. If object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect", syntax: "object allowDamage allow", returns: "allow: Boolean -", example: "player allowDamage false;", game: "Arma 2", version: 1 },
    { id: 124, name: "allowDammage", description: "Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage.   The command does not prevent object from taking scripted damage such as setDamage or setHit.        !   Command has to be executed where object is local and as long as object does not change locality the effect of this command will be global. If object changes locality, the command needs to be executed again on the new owner's machine to maintain the effect.", syntax: "object allowDammage allow", returns: "allow: Boolean -", example: "player allowDammage false;", game: "Operation Flashpoint", version: 1 },
    { id: 125, name: "allowFileOperations", description: "Allow/dissallow file ops (load/save etc).", syntax: "map allowFileOperations bool", returns: "bool: Boolean -", example: "null", game: "Arma 2", version: 1 },
    { id: 126, name: "allowFleeing", description: "Sets the cowardice level (the lack of courage or bravery) of a group or unit.  The more cowardice a Group or Object has, the sooner it will start fleeing.  0 means maximum courage, while 1 means always fleeing.", syntax: "name allowFleeing cowardice", returns: "cowardice: Number", example: "_group1 allowFleeing 0;", game: "Operation Flashpoint", version: 1 },
    { id: 127, name: "allowGetIn", description: "Set if the units given in the list are allowed to enter vehicles.", syntax: "unitArray allowGetIn allow", returns: "allow: Boolean - true allows the units to enter, false denies them", example: "[_soldier1, _soldier2] allowGetIn true;", game: "Operation Flashpoint", version: 1 },
    { id: 128, name: "allowSprint", description: "Force player to run/jog if set to false.", syntax: "unit allowSprint state", returns: "state: Bool", example: "player allowSprint false", game: "Arma 3", version: 1.54 },
    { id: 129, name: "allPlayers", description: "Returns a list of all human players including dead players. The command also returns all connected headless clients. To filter headless clients out: _justPlayers = allPlayers - entities 'HeadlessClient_F';  NOTE: In player hosted game, the complete array of allPlayers may get delayed at the start. Use BIS_fnc_listPlayers if you need it earlier", syntax: "allPlayers", returns: "Find all human players if headless clients are used:_allHCs = entities 'HeadlessClient_F'; _allHPs = allPlayers - _allHCs;", example: "_justPlayers = allPlayers - entities 'HeadlessClient_F';", game: "Arma 3", version: 1.48 },
    { id: 130, name: "allSimpleObjects", description: "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.  NOTE: There is no inheritance in simple objects, so only exact class match is allowed. className is not case sensitive.", syntax: "allSimpleObjects [className1, className2,...classNameN]", returns: "className: String - simple object class name to return. Use [] to return all simple objects", example: "allSimpleObjects ['Box_NATO_Equip_F', 'Land_CampingChair_V2_F'];", game: "Arma 3", version: 1.68 },
    { id: 131, name: "allSites", description: "Return all sites in map.          This command is considered deprecated and is no longer supported", syntax: "allSites", returns: "null", example: "_allSites = allSites;", game: "Arma 3", version: 0.5 },
    { id: 132, name: "allTurrets", description: "Returns array of available turret paths.", syntax: "allTurrets vehicle", returns: "Array", example: "_turretPaths = allTurrets SlammerUP; //[[0],[0,0]] _turretPaths = allTurrets [SlammerUP, true]; //[[0],[0,0]] <- Commander turret is also FFV turret _turretPaths = allTurrets [SlammerUP, false]; //[[0]]", game: "Arma 3", version: 1.34 },
    { id: 133, name: "allUnits", description: "Return a list of all units (all persons except agents) created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. Dead units and units awaiting for respawn are also excluded.", syntax: "allUnits", returns: "null", example: "{_x setDamage 0.5; _x groupChat 'Braaains'} forEach allUnits;", game: "Arma 2", version: 1 },
    { id: 134, name: "allUnitsUAV", description: "Return a list of all UAV vehicles.", syntax: "allUnitsUAV", returns: "null", example: "hint format ['No. of UAV(s) on the map: %1', count allUnitsUAV];", game: "Arma 3", version: 0.76 },
    { id: 135, name: "allVariables", description: "Returns a list of all variables from desired namespace. Namespaces supported:   Control  Team_Member  Namespace  Object  Group  Task  Location", syntax: "allVariables namespace", returns: "Array of Strings - array of variable names. All names are in lower case (see toLower)", example: "_allVarsUINamespace = allVariables uiNamespace;", game: "Arma 3", version: 1.38 },
    { id: 136, name: "ammo", description: "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55.133505 the command also returns ammo for units in vehicles.", syntax: "unit ammo muzzle", returns: "muzzle: String - muzzle of a weapon. See the topic Category:Weapons for reference about possible values.", example: "_count = player ammo 'M16'; //returns 30 in case of a full magazine", game: "Operation Flashpoint", version: 1 },
    { id: 137, name: "ammoOnPylon", description: "Returns ammo count on given pylon. Returns false (Bool) on failure.", syntax: "vehicle ammoOnPylon (pylon name/index)", returns: "pylon name/index : String or Number", example: "_ammoCount = (vehicle player) ammoOnPylon 'pylon1';", game: "Arma 3", version: 1.7 },
    { id: 138, name: "and", description: "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).", syntax: "Boolean = a and b", returns: "b: Boolean - Test condition or variable that returns Boolean.", example: "if ((alive player) and (_enemycount == 0)) then {hint 'you win !'}", game: "Operation Flashpoint", version: 1 },
    { id: 139, name: "animate", description: "Activates given object animation. Animation is defined in CfgModels Animations class of model.cfg or another model config. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.    To animate door of the house from example below: house animate ['Door_1_rot', 1]; class Animations { 	class Door_1_rot 	{ 		type = rotation; 		source = Door_1_source; 		selection = Door_1; 		axis = Door_1_axis; 		memory = 1; 		minValue = 0.1; 		maxValue = 1; 		angle0 = 0; 		angle1 = (rad 110); 	}; 	class Door_Handle_1_rot_1 	{ 		type = rotation; 		source = Door_1_handle_source; 		selection = Door_Handle_1; 		axis = Door_Handle_1_axis; 		memory = 1; 		minValue = 0; 		maxValue = 0.1; 		angle0 = 0; 		angle1 = (rad -50); 	}; }; Since model.cfg is not always available for reference, most animation names could also be obtained from animationNames command. Class names listed in CfgVehicles AnimationSources bound to 'Proxy' controller can also be animated with animate command (see createVehicle/vehicles): offroad animate ['HideBackpacks', 0];           It is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimised for MP           Mixing animateSource command with animate command to animate the same part may produce some undefined behaviour", syntax: "objectName animate [animationName, phase, speed]", returns: "[animationName, phase, speed]: Array", example: "_building animate ['maindoor', 1];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 140, name: "animateBay", description: "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.", syntax: "vehicle animateBay [pylon name/index, anim phase]", returns: "[pylon name/index, anim phase (0-1)] : Array", example: "(vehicle player) animateBay ['pylonLeft1', 0.5];", game: "Arma 3", version: 1.7 },
    { id: 141, name: "animateDoor", description: "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles ->  AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with 'door' controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor ['Door_L', 1]; class AnimationSources { 	class CargoRamp_Open 	{ 		source = 'user'; 		animPeriod = 5; 		initPhase = 0; 	}; 	class Door_L 	{ 		source = 'door'; 		animPeriod = 1.6; 	}; }; To animate doors or other sources that have 'user' controller, use animate command, or even better, animateSource (recommended). Sources with 'hit' controller can be animated with setHitPointDamage command applied to the name contained in hitpoint property. For availability of animation sources and their controller types see: createVehicle/vehicles", syntax: "object animateDoor [doorname, phase, instant]", returns: "[doorname, phase, instant]: Array", example: "Taru animateDoor ['Door_1_source', 1];", game: "Arma 3", version: 0.5 },
    { id: 142, name: "animatePylon", description: "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released  when pylon state =1.", syntax: "vehicle animatePylon [pylon name/index, anim phase]", returns: "[pylon name/index, anim phase (0-1)] : Array", example: "(vehicle player) animatePylon [1, 0.5];", game: "Arma 3", version: 1.7 },
    { id: 143, name: "animateSource", description: "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property. This allows to use just one command on a bunch of animations related to the same source simultaneously. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.    A class with the same source name should also be present in main config in CfgVehicles AnimationSources and have to be bound to the 'user' controller for the command to work. If in order to animate door in example below using animate command it would require 2 calls:    house animate ['Door_1_rot', 1];   house animate ['Door_Handle_1_rot', 1];    With animateSource this would require only 1 (provided everything is configured correctly):    house animateSource ['Door_1_sound_source', 1];    // model.cfg .... class Animations { 	class Door_1_rot 	{ 		type = rotation; 		source = Door_1_sound_source; 		selection = Door_1; 		axis = Door_1_axis; 		memory = 1; 		minValue = 0.1; 		maxValue = 1; 		angle0 = 0; 		angle1 = (rad 110); 	}; 	class Door_Handle_1_rot 	{ 		type = rotation; 		source = Door_1_noSound_source; 		selection = Door_Handle_1; 		axis = Door_Handle_1_axis; 		memory = 1; 		minValue = 0; 		maxValue = 0.1; 		angle0 = 0; 		angle1 = (rad -50); 	}; }; ...   // config.cpp ... class AnimationSources {         class Door_1_sound_source         { 	        source = 'user'; 	        initPhase = 0; 	        animPeriod = 1; 	        sound = 'GenericDoorsSound'; 	        soundPosition = 'Door_1_trigger';         }; }; ...  If you don't know much about model config you can use this page createVehicle/vehicles for reference. Some of the AnimationSources are listed with the class names of the available assets in Arma 3. If it says 'user', the chances are it could work with animateSource (see example 2).           It is recommended that animateSource command is used instead of animate whenever is possible, as it is more efficient and optimized for MP           Mixing animateSource command with animate command to animate the same part can lead to unexpected behavior", syntax: "object animateSource [source, phase, speed]", returns: "[source, phase, speed]: Array", example: "house animateSource ['Door_1_source', 1, true];", game: "Arma 3", version: 1.58 },
    { id: 144, name: "animationNames", description: "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.", syntax: "animationNames object", returns: "Array of Strings", example: "_names = animationNames static_AT;", game: "Arma 3", version: 1.58 },
    { id: 145, name: "animationPhase", description: "Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven. Animation names for an object could be found out with animationNames command. When animation is rotation, like with 'MainTurret' for example, the output is in radians, to convert to degrees use deg command.", syntax: "object animationPhase animationName", returns: "animationName: String - name of the animation. This is the class-name of the animation defined in the addon's config.cpp.", example: "_building animate ['maindoor',1]; sleep 1; _p = _building animationPhase 'maindoor';", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 146, name: "animationSourcePhase", description: "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource.", syntax: "object animationSourcePhase source", returns: "source: String", example: "_phase = house animationSourcePhase 'Door_1_source';", game: "Arma 3", version: 1.58 },
    { id: 147, name: "animationState", description: "Returns the name of a unit's current primary animation. Seems to be forced to lower case in Arma 3.", syntax: "animationState unitName", returns: "String", example: "_state = animationState player;", game: "Armed Assault", version: 1 },
    { id: 148, name: "append", description: "Appends array2 to the back of array1 modifying array1.   NOTE: append does not return array, it modifies existing array. If you need to return a copy, use '+':  array3 = array1 + array2;", syntax: "array1 append array2", returns: "array2: Array", example: "array3 = array1 + array2;", game: "Arma 3", version: 1.4 },
    { id: 149, name: "apply", description: "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable _x.", syntax: "array apply code", returns: "code: Code - code to be executed on each element of the array. Current element value is stored in variable _x", example: "_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x % 2 == 0)}; //[1,0,1,0,1,0,1,0,1,0]", game: "Arma 3", version: 1.56 },
    { id: 150, name: "armoryPoints", description: "Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0.", syntax: "armoryPoints", returns: "null", example: "_points = armoryPoints;", game: "Arma 2", version: 1 },
    { id: 151, name: "arrayIntersect", description: "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.", syntax: "array1 arrayIntersect array2", returns: "array2: Array", example: "_arr1 = [1,2,3,4,5,2,3,4]; _arr2 = [4,5,6,1,2,3,5,6]; hint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]", game: "Arma 3", version: 1.48 },
    { id: 152, name: "asin", description: "Arcsine of a number, result in Degrees.", syntax: "Number = asin x", returns: "Number", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 153, name: "ASLToAGL", description: "Converts position from PositionASL to PositionAGL", syntax: "ASLToAGL posASL", returns: "PositionAGL", example: "_playerPosAGL = ASLToAGL getPosASL player;", game: "Arma 3", version: 1.5 },
    { id: 154, name: "ASLToATL", description: "Converts a position from PositionASL to PositionATL", syntax: "ASLToATL pos", returns: "PositionATL", example: "ASLToATL (getPosASL player) isEqualTo getPosATL player", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 155, name: "assert", description: "Tests a condition and if the condition is false, displays error on screen (if -showscripterrors enabled) and logs error into .rpt file. It does not interrupt the script execution.  If script was pre-processed with preprocessFileLineNumbers, it will also show/log the error line number and the file name.", syntax: "assert condition", returns: "Boolean - mirrors condition", example: "assert (1>2);", game: "Armed Assault", version: 1 },
    { id: 156, name: "assignAsCargo", description: "Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle.", syntax: "unitName assignAsCargo vehicleName", returns: "vehicleName: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 157, name: "assignAsCargoIndex", description: "Assigns the character to a specific cargo / passenger index of the given vehicle.", syntax: "character assignAsCargoIndex [vehicle, index]", returns: "vehicle: Object - vehicle to assign to", example: "player assignAsCargoIndex [myHelicopter, 1];", game: "Take On Helicopters", version: 1.01 },
    { id: 158, name: "assignAsCommander", description: "Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle.", syntax: "unitName assignAsCommander vehicleName", returns: "vehicleName: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 159, name: "assignAsDriver", description: "Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle.", syntax: "unitName assignAsDriver vehicleName", returns: "vehicleName: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 160, name: "assignAsGunner", description: "Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle.", syntax: "unitName assignAsGunner vehicleName", returns: "vehicleName: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 161, name: "assignAsTurret", description: "Assigns the soldier to turret.", syntax: "unit assignAsTurret [vehicle, [turretPath]]", returns: "[vehicle, turretPath]: Array", example: "null", game: "Arma 3", version: 0.5 },
    { id: 162, name: "assignCurator", description: "Assign player as curator. Two players cannot act as one curator.", syntax: "player assignCurator curatorObj", returns: "curatorObj: Object - Curator module.", example: "player assignCurator myCurator;", game: "Arma 3", version: 1.16 },
    { id: 163, name: "assignedCargo", description: "Returns the list of soldiers assigned to the given vehicle as a cargo.", syntax: "assignedCargo vehicle", returns: "Array of Objects", example: "_list = assignedCargo _vehicleName", game: "Arma 2", version: 1 },
    { id: 164, name: "assignedCommander", description: "Returns the soldier assigned to the given vehicle as a commander.", syntax: "assignedCommander vehicle", returns: "Object", example: "_commander = assignedCommander vehicleName", game: "Arma 2", version: 1 },
    { id: 165, name: "assignedDriver", description: "Returns the soldier assigned to the given vehicle as a driver.", syntax: "assignedDriver vehicle", returns: "Object", example: "_driver= assignedDriver vehicleName", game: "Arma 2", version: 1 },
    { id: 166, name: "assignedGunner", description: "Returns the soldier assigned to the given vehicle as a gunner.", syntax: "assignedGunner vehicle", returns: "Object", example: "null", game: "Arma 2", version: 1 },
    { id: 167, name: "assignedItems", description: "Get array with all assigned items.", syntax: "assignedItems unit", returns: "Array", example: "hint str assignedItems player;", game: "Arma 3", version: 0.5 },
    { id: 168, name: "assignedTarget", description: "Returns the target assigned to the vehicle/unit. To unassign the target use doWatch objNull or commandWatch objNull.", syntax: "assignedTarget vehicleName", returns: "Object", example: "_target = assignedTarget _T72", game: "Armed Assault", version: 1 },
    { id: 169, name: "assignedTeam", description: "Returns the team the unit belongs to. Possible values:   MAIN (default and white)  RED  GREEN  BLUE  YELLOW          This command will return nil if given unit is objNull, remoteControling another unit or is not local", syntax: "assignedTeam unitName", returns: "String or Nothing", example: "_team = assignedTeam player;", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 170, name: "assignedVehicle", description: "Returns the vehicle a unit is assigned to. If no vehicle is assigned objNull is returned.", syntax: "assignedVehicle unit", returns: "Object", example: "_vehicle = assignedVehicle player;", game: "Armed Assault", version: 1.05 },
    { id: 171, name: "assignedVehicleRole", description: "Return the role a unit is assigned to within its assigned vehicle.  The array which is returned contains:  [] - Not assigned to any vehicle  ['Driver'] - Assigned as driver  ['Cargo'] (or ['Cargo', [turret path]] since Arma 3 1.31.127272) - Assigned as cargo  ['Turret', [turret path]] - Assigned to a turret  If no vehicle role is assigned, an empty array is returned.", syntax: "Array = assignedVehicleRole unitName", returns: "Array", example: "_RoleArray = assignedVehicleRole player;", game: "Armed Assault", version: 1.05 },
    { id: 172, name: "assignItem", description: "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.", syntax: "unit assignItem item", returns: "item: String", example: "bluforUnit addItem 'NVGoggles'; bluforUnit assignItem 'NVGoggles'; opforUnit addItem 'NVGoggles_OPFOR'; opforUnit assignItem 'NVGoggles_OPFOR'; independentUnit addItem 'NVGoggles_INDEP'; independentUnit assignItem 'NVGoggles_INDEP';", game: "Arma 3", version: 0.5 },
    { id: 173, name: "assignTeam", description: "Assigns the unit (in case of a vehicle, its commander) to the given team. Team is an option in group control (unit management) menu that allows to split player group in teams and then give bulk order to separate teams. In order to operate properly, the command requires specific conditions:  The command requires player to be fully initialised  The unit getting assigned must be either player himself or a unit in player's group  Units in player's group as well as player himself can all have different teams assigned  The colour of the assigned team for a unit is seen on the group management UI as well as squad radar The possible team values (colours) are:   'MAIN' - (white)  'RED' - (red)  'GREEN' - (green)  'BLUE' - (blue)  'YELLOW'  - (yellow) NOTE: In older version of the game the effect of this command is local", syntax: "unit assignTeam team", returns: "team: String", example: "_soldier2 assignTeam 'RED';", game: "Armed Assault", version: 1 },
    { id: 174, name: "assignToAirport", description: "Not correctly implemented yet, currently it does the same as landAt. As the implementation may get fixed sometime, please do not use this command until then.", syntax: "plane assignToAirport id", returns: "id: Number - airport id", example: "plane1 assignToAirport 0", game: "Armed Assault", version: 1.08 },
    { id: 175, name: "atan", description: "ArcTangent of a number, result in Degrees.", syntax: "atan x", returns: "Number", example: "_degrees = atan 1; //45", game: "Operation Flashpoint", version: 1 },
    { id: 176, name: "atan2", description: "ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180.   Note that this command can handle y being 0, unlike when using atan, and will return 90", syntax: "x atan2 y", returns: "y: Number", example: "_xy = [5,3]; _degrees = (_xy select 0) atan2 (_xy select 1); //59.0362", game: "Operation Flashpoint", version: 1 },
    { id: 177, name: "atg", description: "Equivalent to atan", syntax: "atg x", returns: "Number", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 178, name: "ATLToASL", description: "Converts a position from PositionATL to PositionASL", syntax: "ATLToASL pos", returns: "PositionASL", example: "ATLToASL (getPosATL player) isEqualTo getPosASL player", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 179, name: "attachedObject", description: "Returns the object a location is attached to. If the location is unattached, then objNull is returned.", syntax: "attachedObject location", returns: "Object", example: "_locAttachedObj = attachedObject myLocation;", game: "Armed Assault", version: 1.08 },
    { id: 180, name: "attachedObjects", description: "Returns a list of attached objects.", syntax: "attachedObjects obj", returns: "Array of Objects", example: "{   detach _x; } forEach attachedObjects player;", game: "Arma 3", version: 1.14 },
    { id: 181, name: "attachedTo", description: "Returns the object it is attached to.  Returns objNull if not attached to anything.", syntax: "attachedTo object", returns: "Object - parent object", example: "if (isNull attachedTo _obj1) then {   hint '_obj1 is not attached to anything.'; };", game: "Arma 3", version: 1.14 },
    { id: 182, name: "attachObject", description: "Attaches a location to the specified object. To detach a location, attach it to objNull.", syntax: "location attachObject object", returns: "object: Object", example: "myLocation attachObject player;", game: "Armed Assault", version: 1.08 },
    { id: 183, name: "attachTo", description: "Attaches an object to another object. The offset is applied to the object center unless a memory point is provided. If no offset is specified, the offset used will be the current relative positioning of objects against each other.", syntax: "object1 attachTo [object2, offset, memPoint]", returns: "[object2, offset, memPoint]: Array", example: "player attachTo [car, [0, 0, 1] ];", game: "Arma 2", version: 1 },
    { id: 184, name: "attackEnabled", description: "Return whether a group's leader can issue attack commands to soldiers under his command.", syntax: "Boolean = attackEnabled name", returns: "Boolean", example: "if (not attackEnabled _soldier) then {_soldier setCombatMode 'Careless'}", game: "Armed Assault", version: 1 },
    { id: 185, name: "backpack", description: "Returns a class of a backpack.", syntax: "backpack unit", returns: "String", example: "_classname = backpack player;", game: "Arma 3", version: 0.5 },
    { id: 186, name: "backpackCargo", description: "Get array with backpacks from ammo box (or any general weapon holder container).", syntax: "backpackCargo box", returns: "Array - Format: ['BackpackType1','BackpackType1','BackpackType2'...]", example: "hint str backpackCargo vehicle player;", game: "Arma 3", version: 0.5 },
    { id: 187, name: "backpackContainer", description: "Returns a cargo container of a unit's backpack.", syntax: "backpackContainer unit", returns: "Object - cargo container or <NULL-object>", example: "hint str backpackContainer player; //1a5f7900# 163944: backpack_fast.p3d", game: "Arma 3", version: 1.04 },
    { id: 188, name: "backpackItems", description: "Get array with all items (of any kind, even weapons) in backpack of the given unit.", syntax: "backpackItems unit", returns: "Array", example: "backpackItems player;", game: "Arma 3", version: 0.5 },
    { id: 189, name: "backpackMagazines", description: "Get array with all magazines from backpack of the given unit.", syntax: "backpackMagazines unit", returns: "Array", example: "backpackMagazines player;", game: "Arma 3", version: 0.5 },
    { id: 190, name: "backpackSpaceFor", description: "Returns how much space is in backpack for given weapon or magazine", syntax: "result = backpack backpackSpaceFor weaponName", returns: "weaponName: String", example: "(backpack player) backpackSpaceFor 'm16'; // [weapons, magazines]", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 191, name: "behaviour", description: "Return the behaviour of a unit. For Arma 3 behaviour explanation see Arma_3_AI_Behavior", syntax: "behaviour unitName", returns: "String -   One of 'CARELESS', 'SAFE', 'AWARE', 'COMBAT' and 'STEALTH'.", example: "_soldier setBehaviour 'CARELESS'; _b = behaviour _soldier; //returns 'CARELESS'", game: "Operation Flashpoint", version: 1 },
    { id: 192, name: "benchmark", description: "Returns the value of '3D Performance' in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.", syntax: "Number = benchmark", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 193, name: "binocular", description: "Returns class name of currently used binocular weapon.", syntax: "binocular unit", returns: "String", example: "_binocs = binocular player; //Rangefinder", game: "Arma 3", version: 1.12 },
    { id: 194, name: "blufor", description: "Pre-defined variable for the blufor side.  Alias for west.", syntax: "blufor", returns: "null", example: "if (side player == blufor) then {     hint 'BLUFOR'; };", game: "Arma 3", version: 0.5 },
    { id: 195, name: "boundingBox", description: "Returns a bounding box of given object in model coordinate space. This command is rather generous on the size estimation, for more precise coordinates use boundingBoxReal", syntax: "boundingBox model", returns: "Array - An array with the extreme points of the model.  Format [[x1,y1,z1],[x2,y2,z2]]", example: "_box = boundingBox _abrams", game: "Armed Assault", version: 1 },
    { id: 196, name: "boundingBoxReal", description: "Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.", syntax: "boundingBoxReal obj", returns: "Array - An array with the extreme points of the model. Format [[x1,y1,z1],[x2,y2,z2]].", example: "_bbr = boundingBoxReal vehicle player; _p1 = _bbr select 0; _p2 = _bbr select 1; _maxWidth = abs ((_p2 select 0) - (_p1 select 0)); _maxLength = abs ((_p2 select 1) - (_p1 select 1)); _maxHeight = abs ((_p2 select 2) - (_p1 select 2));", game: "Arma 3", version: 0.5 },
    { id: 197, name: "boundingCenter", description: "Returns the position of original (loaded) center of object in model coordinates.", syntax: "boundingCenter object", returns: "Array - PositionRelative", example: "_center = boundingCenter TruckOne", game: "Arma 2", version: 1 },
    { id: 198, name: "breakOut", description: "Breaks the code execution out of scope {} named name. nil is returned. Scope name can be assigned using scopeName command.     Since Arma 3 v1.47, breakOut can be used to return a value. It is the closest SQF comes to having 'return' like operation.", syntax: "breakOut name", returns: "Nothing", example: "scopeName 'main'; while {true} do { 	scopeName 'loop1'; 	while {true} do { 		scopeName 'loop2'; 		if (condition1) then {breakTo 'main'}; // Breaks all scopes and return to 'main' 		if (condition2) then {breakOut 'loop2'}; // Breaks scope named 'loop2' 		sleep 1; 	}; 	sleep 1; };", game: "Armed Assault", version: 1 },
    { id: 199, name: "breakTo", description: "Breaks block to scope named name. Nil is returned.  Scope name can be assigned using scopeName command.", syntax: "breakTo name", returns: "Nothing", example: "scopeName 'main'; while {true} do { 	scopeName 'loop1'; 	while {true} do { 		scopeName 'loop2'; 		if (condition1) then {breakTo 'main'}; // Breaks all scopes and return to 'main' 		if (condition2) then {breakOut 'loop2'}; // Breaks scope named 'loop2' 		sleep 1; 	}; 	sleep 1; };", game: "Armed Assault", version: 1 },
    { id: 200, name: "briefingName", description: "Returns the name of the current briefing/scenario name.", syntax: "briefingName", returns: "null", example: "_name = briefingName;", game: "Arma 3", version: 1.12 },
    { id: 201, name: "buildingExit", description: "Returns the given indexed exit in a building. The returned value is in format Position.", syntax: "building buildingExit index", returns: "index: Number", example: "_building buildingExit 0", game: "Arma 2", version: 1 },
    { id: 202, name: "buildingPos", description: "Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent.    Since Arma 3 v.155.133934 if index -1 is supplied, the command will return array with all available positions.", syntax: "building buildingPos index", returns: "index: Number - index of a specific position or -1 to return available all positions", example: "_soldier setPosATL (_house1 buildingPos 2);", game: "Operation Flashpoint", version: 1 },
    { id: 203, name: "buttonAction", description: "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Dialog Control for more information about user dialogs and controls.", syntax: "buttonAction idc", returns: "String", example: "null", game: "Operation Flashpoint", version: 1.5 },
    { id: 204, name: "buttonSetAction", description: "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. Works with:  CT_BUTTON  CT_XBUTTON  CT_ACTIVETEXT  CT_SHORTCUTBUTTON          The action code is expected to be in SQS format", syntax: "buttonSetAction [idc, action]", returns: "idc: Number - control ID", example: "buttonSetAction [100, 'player exec ''reply.sqs'''];", game: "Operation Flashpoint", version: 1.5 },
    { id: 205, name: "cadetMode", description: "Returns if the player is currently playing in cadet or veteran mode.", syntax: "cadetMode", returns: "null", example: "? (cadetMode) : _AIsoldier setSkill 0.1 //sqs", game: "Operation Flashpoint", version: 1 },
    { id: 206, name: "call", description: "Executes given set of compiled instructions with an option to pass arguments to the executed Code. In OFP this command used to accept String for the code.", syntax: "call code", returns: "Anything - The last value given in the function is returned. See the topic Function for more information.", example: "call {hint str 123};", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 207, name: "callExtension", description: "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without '.dll' part (or without '_x64.dll' part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be 'myExtension'. For 64-bit extensions, the name of the extension doesn't need to change and is still 'myExtension'. The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.    This command is blocking, meaning that the game will wait for the extension to return before continuing. This may cause FPS drop if extension is not optimised. If extension takes too long, consider making asynchronous extension, where the result of the work of the extension is collected in a separate call.    Currently there is no limit how much data you can send to the extension. However there is a limit on how much data you can return from extension in one call. The limit is known to the extension and is passed in  int outputSize. The limit may or may not change in the future and is currently 10240 bytes. It is up to extension designer to handle multipart results if returned data exceeds output limit.    Since Arma 3 v1.67 it is possible to pass array of arguments to extensions. The array of arguments could be anything and all elements will be converted to strings, however you might want to only send simple types like Booleans, Strings, Numbers and Arrays of all of the above. There is currently a limit on how many arguments can be sent and it is 1024. However an argument could be an Array itself, in this case extension maker will have to provide additional methods for parsing such arguments.    Possible error codes:  101: SYNTAX_ERROR_WRONG_PARAMS_SIZE  102: SYNTAX_ERROR_WRONG_PARAMS_TYPE  201: PARAMS_ERROR_TOO_MANY_ARGS  301: EXECUTION_WARNING_TAKES_TOO_LONG Each error will have entry in .rpt file with more details.    Since Arma 3 v1.69, RVExtensionVersion interface (see source code example below) has been added, which is called by the engine on extension load and expects extension version. This interface is designed to work with both, Linux and Windows. The max buffer size is 32 bytes. The version information will then appear in .rpt file like so: 19:06:36 CallExtension loaded: test_extension (.\test_extension.dll) [1.0.0.1]   For more information see Extensions.", syntax: "extension callExtension function", returns: "function: String - data sent to the extension", example: "19:06:36 CallExtension loaded: test_extension (.\test_extension.dll) [1.0.0.1]", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 208, name: "camCommand", description: "Executes a command on the given camera / actor object. Known commands for:   All camera types - 'manual on', 'manual off'  'camera' - 'inertia on', 'inertia off'  'seagull' - 'landed', 'airborne'  When you execute camCommand 'landed' on a flying seagull, it will land and sit on the floor until you call camCommand 'airborne'. The camCommand changes are conducted immediately, the command doesn't wait for camCommit.", syntax: "camera camCommand command", returns: "command: String - one of 'manual on', 'manual off', 'inertia on', 'inertia off', 'landed' and 'airborne' corresponding to the description above.", example: "_camera camCommand 'manual on';", game: "Operation Flashpoint", version: 1 },
    { id: 209, name: "camCommit", description: "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.", syntax: "camera camCommit time", returns: "time: Number - time in seconds during which the changes shall be done", example: "; create a camera object _cam = 'camera' camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect ['internal', 'BACK'] _cam camCommit 0  ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam  ; proceed", game: "Operation Flashpoint", version: 1 },
    { id: 210, name: "camCommitPrepared", description: "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.", syntax: "camera camCommitPrepared time", returns: "time: Number - time in seconds during which the changes shall be done", example: "//create a camera object _cam = 'camera' camCreate [5600,4800,10]; _cam camPrepareTarget player; _cam cameraEffect ['internal', 'BACK']; _cam camCommitPrepared 0; //smoothly move the camera to its new position in 6 seconds. _cam camPreparePos [5680,4720,20]; _cam camCommitPrepared 6; waitUntil {camCommitted _cam}; //proceed", game: "Armed Assault", version: 1 },
    { id: 211, name: "camCommitted", description: "Checks if the conduction of the last camCommit call already finished.", syntax: "camCommitted camera", returns: "Boolean -   true if the last camCommit already finished, false if not", example: "; create a camera object _cam = 'camera' camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect ['internal', 'BACK'] _cam camCommit 0  ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam  ; proceed", game: "Operation Flashpoint", version: 1 },
    { id: 212, name: "camConstuctionSetParams", description: "Sets construction camera parameters. To work with 'camconstruct' object.", syntax: "camera camConstuctionSetParams [[x,y,z], radius, maxAboveLand]", returns: "[[x,y,z], radius, maxAboveLand]: Array", example: "_camera camConstuctionSetParams [getPos player, 50, 20];", game: "Arma 2", version: 1 },
    { id: 213, name: "camCreate", description: "Create a camera or a seagull object on the given position. Also other objects can be created this way, but vehicles created with camCreate cannot be entered. Any units created with camCreate will remain static. Differently to createVehicle, objects are created without consideration of the collision detection with surrounding objects, thus the objects are spawned exactly at the given position. camCreate is conducted immediately, the command doesn't wait for camCommit.", syntax: "type camCreate position", returns: "position: Array - format Position - position to create the object at", example: "_cam = 'camera' camCreate (position player)", game: "Operation Flashpoint", version: 1 },
    { id: 214, name: "camDestroy", description: "Destroy an object created with camCreate. camDestroy is conducted immediately, the command doesn't wait for camCommit.    NOTE: Destroying camera object does not terminate camera effect automatically.", syntax: "camDestroy object", returns: "Nothing", example: "camDestroy _cam;", game: "Operation Flashpoint", version: 1 },
    { id: 215, name: "cameraEffect", description: "Switch to the given camera or object with the given effect. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type 'Terminate' is used to exit the current camera view and switch back to the player's view. Does not need camCommit.", syntax: "camera cameraEffect [name, position, rtt]", returns: "[name, position, rtt]: Array", example: "_cam cameraEffect ['internal', 'BACK'];", game: "Operation Flashpoint", version: 1 },
    { id: 216, name: "cameraEffectEnableHUD", description: "Enable / disable showing of in-game UI during currently active camera effect.", syntax: "cameraEffectEnableHUD enable", returns: "Nothing", example: "cameraEffectEnableHUD true;", game: "Arma 2", version: 1 },
    { id: 217, name: "cameraInterest", description: "Return camera interest for given entity, as set by setCameraInterest, or as autodetected.", syntax: "Number = cameraInterest entity", returns: "Number", example: "camInterest = cameraInterest myUnit;", game: "Armed Assault", version: 1 },
    { id: 218, name: "cameraOn", description: "Returns the vehicle to which the camera is attached.", syntax: "Object = cameraOn", returns: "null", example: "_MyScreenPos = getPos cameraOn; <code> This would getPos for the current player or vehicle that the client's camera is attached to.  <code> _CameraOnSetPos = cameraOn setPos _pos; <code> This would do setPos for the current player or vehicle that the client's camera is attached to. </dd> </dl>", game: "Armed Assault", version: 1 },
    { id: 219, name: "cameraView", description: "Returns mode of active camera view. Mode is one of:   'INTERNAL' (1st person)  'EXTERNAL' (3rd person)  'GUNNER' (optics / sights)  'GROUP' (commander view)", syntax: "cameraView", returns: "null", example: "if (cameraOn == _vehicle && cameraView == 'External') then {   _vehicle switchCamera 'Internal'; };", game: "Arma 2", version: 1 },
    { id: 220, name: "campaignConfigFile", description: "Return root of campaign description.ext entries hierarchy.", syntax: "Config = campaignConfigFile", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 221, name: "camPreload", description: "Preload the scene for the prepared camera. Time gives timeout, zero means no (infinite) timeout.", syntax: "camera camPreload time", returns: "time: Number", example: "_camera camPreload 5", game: "Armed Assault", version: 1 },
    { id: 222, name: "camPreloaded", description: "Checks whether the camera has finished preloading.", syntax: "Boolean = camPreloaded camera", returns: "Boolean", example: "?(camPreloaded _camera) : exit", game: "Armed Assault", version: 1 },
    { id: 223, name: "camPrepareBank", description: "Prepares the camera bank angle.", syntax: "camera camPrepareBank bank", returns: "bank: Number", example: "_camera camPrepareBank -0.1", game: "Armed Assault", version: 1 },
    { id: 224, name: "camPrepareDir", description: "Prepares the camera heading.", syntax: "camera camPrepareDir direction", returns: "direction: Number", example: "_camera camPrepareDir 150", game: "Armed Assault", version: 1 },
    { id: 225, name: "camPrepareDive", description: "Prepares the camera dive angle.", syntax: "camera camPrepareDive dive", returns: "dive: Number", example: "_camera camPrepareDive -0.1", game: "Armed Assault", version: 1 },
    { id: 226, name: "camPrepareFocus", description: "focusRange is in format [distance,blur]. Prepares the camera focus blur.  [-1,1] will reset default values (auto focusing), [-1,-1] will disable postprocessing (all is focused).", syntax: "camera camPrepareFocus focusRange", returns: "focusRange: Array", example: "_camera camPrepareFocus [50, 1]", game: "Armed Assault", version: 1 },
    { id: 227, name: "camPrepareFov", description: "Prepares the camera field of view (zoom). The default zoom level is 0.75, 0.01 is the nearest and 2 the furthest zoom value. The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio. Needs the call of camCommitPrepared to be conducted.", syntax: "camera camPrepareFov fieldOfView", returns: "fieldOfView: Number", example: "_camera camPrepareFov 0.1", game: "Armed Assault", version: 1 },
    { id: 228, name: "camPrepareFovRange", description: "Prepares the camera field of view range for auto zooming.", syntax: "camera camPrepareFovRange fovRange", returns: "fovRange: Array", example: "_camera camPrepareFovRange [0.1, 0.5]", game: "Armed Assault", version: 1 },
    { id: 229, name: "camPreparePos", description: "Prepares the camera position (format Position).", syntax: "camera camPreparePos position", returns: "position: Array - format Position", example: "_camera camPreparePos getPos player", game: "Armed Assault", version: 1 },
    { id: 230, name: "camPrepareRelPos", description: "Prepares the camera position relative to the current position of the currect target (see camPrepareTarget).", syntax: "camera camPrepareRelPos position", returns: "position: Array - format (PositionRelative)", example: "_camera camPrepareRelPos [10,5,-2]", game: "Armed Assault", version: 1 },
    { id: 231, name: "camPrepareTarget", description: "Prepares the camera target to a position or to a target.", syntax: "camera camPrepareTarget position", returns: "position: Array - format Position,  target location", example: "_camera camPrepareTarget getPos player", game: "Armed Assault", version: 1 },
    { id: 232, name: "camSetBank", description: "Set camera bank angle.  Does not commit changes.", syntax: "camera camSetBank bank", returns: "bank: Number", example: "_camera camSetBank -0.1", game: "Operation Flashpoint", version: 1 },
    { id: 233, name: "camSetDir", description: "Sets the orientation of the given camera in the direction of the given vector. Needs camCommit.", syntax: "camera camSetDir direction", returns: "direction: Array in format [x,y,z] - direction of camera. Must be a valid vector.", example: "pos1 = player modelToWorld [0,5,5]; cam = 'camera' camCreate pos1; cam cameraEffect ['INTERNAL', 'BACK']; pos2 = player modelToWorld [0,50,50]; cam camSetPos pos2;  cam camSetDir (pos2 vectorFromTo pos1); cam camCommit 5; 0 = [] spawn  { 	waitUntil {camCommitted cam}; 	cam camSetPos pos1;  	cam camCommit 5; };", game: "Operation Flashpoint", version: 1 },
    { id: 234, name: "camSetDive", description: "Set camera dive angle.  Does not commit changes.", syntax: "camera camSetDive dive", returns: "dive: Number", example: "_camera camSetDive -0.1", game: "Operation Flashpoint", version: 1 },
    { id: 235, name: "camSetFocus", description: "Sets camera focus range in format [distance, blur]. blur param - sets the camera focus blur. It does not automatically commit changes (see camCommit). Use [-1, -1] to disable focus completely.", syntax: "camera camSetFocus focusRange", returns: "focusRange: Array", example: "_camera camSetFocus [50, 1];", game: "Armed Assault", version: 1 },
    { id: 236, name: "camSetFov", description: "Set the zoom level (Field Of View) of the given camera.   The zoom level is from 0.01 for the nearest and 2 for the furthest zoom value, with a default zoom level of 0.75   The angle of the field of view is atan(FOV)*2 radians when in 4:3 aspect ratio.", syntax: "camera camSetFov level", returns: "level: Number - zoom level, range 0.01 to 2 (see description above)", example: "_cam camSetFov 0.75;", game: "Operation Flashpoint", version: 1 },
    { id: 237, name: "camSetFovRange", description: "Set the zoom level (Field Of View) start and end values for automatical zooming.    The default zoom level is 0.7 where 0 is the nearest and 1 is the most far zoom value.", syntax: "camera camSetFovRange fovRange", returns: "fovRange: Array - zoom level, range 0 to 1 (see description above)", example: "_cam camSetFovRange [0.1, 0.7];", game: "Operation Flashpoint", version: 1 },
    { id: 238, name: "camSetPos", description: "Sets the position of the given camera or seagull (see camCreate). It is worth mentioning that camera position can also be set with setPos, in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with camCommit, which is required in this case.", syntax: "camera camSetPos position", returns: "position: Array - Position to set the object to", example: "_cam camSetPos [2300,1000,130]; _cam camCommit 10;", game: "Operation Flashpoint", version: 1 },
    { id: 239, name: "camSetRelPos", description: "Set the position of the given camera relative to its target set with camSetTarget.Needs the call of camCommit to be conducted.", syntax: "camera camSetRelPos position", returns: "position: Array - format PositionRelative", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 240, name: "camSetTarget", description: "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted.", syntax: "camera camSetTarget target", returns: "target: Object - target location", example: "_camera camSetTarget player;", game: "Operation Flashpoint", version: 1 },
    { id: 241, name: "camTarget", description: "Returns camera's target.", syntax: "camTarget camera", returns: "Object", example: "null", game: "Arma 2", version: 1 },
    { id: 242, name: "camUseNVG", description: "Set / clear using of night vision during cutscenes. This command only works with camCreate created camera that is currently the main camera for the player (see example).", syntax: "camUseNVG set", returns: "Nothing", example: "camUseNVG true;", game: "Armed Assault", version: 1 },
    { id: 243, name: "canAdd", description: "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.", syntax: "object canAdd item", returns: "item: String - Config class", example: "if (player canAdd 'FirstAidKit') then {    player addItem 'FirstAidKit'; } else {    hint 'Not enough space'; };", game: "Arma 3", version: 0.7 },
    { id: 244, name: "canAddItemToBackpack", description: "Checks if given object can be stored into soldier's backpack.", syntax: "unit canAddItemToBackpack item", returns: "item: String", example: "_item = 'HandGrenade'; _fits = player canAddItemToBackpack _item; if (_fits) then { 	player addItemToBackpack _item; } else { 	hint 'no room!'; };", game: "Arma 3", version: 1.04 },
    { id: 245, name: "canAddItemToUniform", description: "Checks if given object can be stored into soldier's uniform.", syntax: "unit canAddItemToUniform item", returns: "item: String", example: "_item = 'HandGrenade'; _fits = player canAddItemToUniform _item; if (_fits) then { 	player addItemToUniform _item; } else { 	hint 'no room!'; };", game: "Arma 3", version: 1.04 },
    { id: 246, name: "canAddItemToVest", description: "Checks if given object can be stored into soldier's vest.", syntax: "unit canAddItemToVest item", returns: "item: String", example: "_item = 'HandGrenade'; _fits = player canAddItemToVest _item; if (_fits) then { 	player addItemToVest _item; } else { 	hint 'no room!'; };", game: "Arma 3", version: 1.04 },
    { id: 247, name: "cancelSimpleTaskDestination", description: "Cancels a simple task destination.", syntax: "cancelSimpleTaskDestination task", returns: "Nothing", example: "cancelSimpleTaskDestination myTask;", game: "Arma 3", version: 0.5 },
    { id: 248, name: "canFire", description: "Returns true if the given vehicle is still able to fire. For the command to return true, vehicle must be alive, have weapon operator and the weapon cannot be damaged >= 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or setVehicleAmmo 0 command is executed on the vehicle, then canFire will always report false for it.", syntax: "canFire unitName", returns: "Boolean - true if able to fire", example: "?!(canFire _tank) : player sideChat 'Tank disabled!'", game: "Operation Flashpoint", version: 1 },
    { id: 249, name: "canMove", description: "Returns if the given vehicle is still able to move. This command checks only the damage value, not the amount of fuel!", syntax: "Boolean = canMove unitName", returns: "Boolean -   true if the vehicle is still able to move, false if not", example: "?!(canMove _tank) : player sideChat 'He's nailed on the ground! Now hurry!'", game: "Operation Flashpoint", version: 1 },
    { id: 250, name: "canSlingLoad", description: "Returns true if it is possible to sling load cargo", syntax: "vehicle canSlingLoad cargo", returns: "cargo: Object", example: "_slingable = veh1 canSlingLoad veh2;", game: "Arma 3", version: 1.34 },
    { id: 251, name: "canStand", description: "Returns if the given soldier is able to stand up.", syntax: "Boolean = canStand unitName", returns: "Boolean -   true if he's still able to stand up, false if not. Automatically return false if unit is vehicle.", example: "?!(canStand player) : player groupChat 'My legs! They hit my legs!'", game: "Operation Flashpoint", version: 1 },
    { id: 252, name: "canSuspend", description: "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: 'Suspending not allowed in this context'. Using canSuspend command allows to detect the correct environment for the code.    Note: The definition of scheduled and unscheduled environment is not the same as whether or not the script execution can or cannot be suspended. For example while .sqs and .fsm scripts are scheduled (i.e. added to the scheduler: diag_activeSQSScripts, diag_activeMissionFSMs), they cannot use sleep or be suspended like execVM or spawn scripts can, therefore canSuspend for these types of scripts will return false.", syntax: "canSuspend", returns: "null", example: "onEachFrame  { 	systemChat str canSuspend; //false 	[] spawn {hint str canSuspend}; //true 	onEachFrame {}; };", game: "Arma 3", version: 1.58 },
    { id: 253, name: "canTriggerDynamicSimulation", description: "A getter for triggerDynamicSimulation", syntax: "canTriggerDynamicSimulation unit", returns: "Boolean", example: "hint str canTriggerDynamicSimulation player;", game: "Arma 3", version: 1.68 },
    { id: 254, name: "canUnloadInCombat", description: "Check if cargo of this vehicle want to get out when in combat.", syntax: "canUnloadInCombat vehicle", returns: "Boolean", example: "if (canUnloadInCombat _vehicle) then {...};", game: "Arma 2", version: 1 },
    { id: 255, name: "canVehicleCargo", description: "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle", syntax: "vehicle canVehicleCargo cargo", returns: "cargo: Object", example: "_result = blackfish canVehicleCargo offroad; //[true, true]", game: "Arma 3", version: 1.62 },
    { id: 256, name: "captive", description: "Returns if the given unit is captive. 'captive' means that enemies will not shoot at the unit.", syntax: "captive object", returns: "Boolean -  true if the unit is captive, false if not", example: "if (!captive _general) then {_general setCaptive true};", game: "Operation Flashpoint", version: 1 },
    { id: 257, name: "captiveNum", description: "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead.  If a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).", syntax: "captiveNum unit", returns: "Number - anything from 0 to value set by setCaptive alt syntax. A non zero value means captive.", example: "_captivity = captiveNum _unit;", game: "Arma 2", version: 1 },
    { id: 258, name: "case", description: "This command is used inside a switch do construct.  Although the syntax below states that this operator takes only one argument, that is most likely not true. It seems like it needs two arguments of which the left one is some sort of hidden variable that gets defined inside a switch do construct. That is the reason why this operator can not be used outside a switch do construct. (see https://foxhound.international/arma-3-sqf-grammar.html for further explaination)  Also note that it is not possible to store the returned Switch Type in a variable and use that variable in another switch do construct. It will never lead to an execution of the corresponding code block.", syntax: "case b", returns: "Switch Type", example: "switch (_condition) do {     case 1: { hint '1' };     case 2: { hint '2' };     default { hint 'default' }; };", game: "Armed Assault", version: 1 },
    { id: 259, name: "catch", description: "Processes code when an exception is thrown in a try block. The exception caught can be found in the _exception variable.", syntax: "try-block catch code", returns: "code: Code", example: "null", game: "Armed Assault", version: 1 },
    { id: 260, name: "cbChecked", description: "Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).", syntax: "cbChecked control", returns: "Boolean", example: "_checked = cbChecked _myCheckBox;", game: "Arma 3", version: 1.12 },
    { id: 261, name: "cbSetChecked", description: "Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).", syntax: "control cbSetChecked state", returns: "state : Boolean", example: "_myCheckBox cbSetChecked true;", game: "Arma 3", version: 1.12 },
    { id: 262, name: "ceil", description: "The ceil value of x.", syntax: "Number = ceil x", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 263, name: "channelEnabled", description: "Returns true or false depending on whether the given channel is enabled or disabled. For more information about enabling/disabling of chat channels see enableChannel. Channel / Number correspondence:   0 = Global  1 = Side  2 = Command  3 = Group  4 = Vehicle  5 = Direct  6-15 = Custom Radio (Is not supported by channelEnabled)         Please note that since Arma 3 v1.59.135661 the output of this command was changed from Boolean to Array in format [Boolean, Boolean]", syntax: "channelEnabled channel", returns: "Array - in format [chat, VoN], where  chat: Boolean - true if text chat is enabled  VoN: Boolean - true if voice chat is enabled", example: "_isGlobalChatEnabled = (channelEnabled 0) select 0; // Check if user can use text on global channel", game: "Arma 3", version: 1.42 },
    { id: 264, name: "cheatsEnabled", description: "Checks whether cheats are enabled (whether the designers' version is running).", syntax: "Boolean = cheatsEnabled", returns: "null", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 265, name: "checkAIFeature", description: "Check if given AI feature is currently enabled. Feature may be one of:  'AwareFormationSoft', 'CombatFormationSoft'.", syntax: "checkAIFeature feature", returns: "Boolean", example: "_featureUsed = checkAIFeature 'AwareFormationSoft'", game: "Arma 2", version: 1.05 },
    { id: 266, name: "checkVisibility", description: "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.", syntax: "[ignore, LOD, ignore2] checkVisibility [beg, end]", returns: "ignore: Object - object to exclude from calculations", example: "_cansee = [objNull, 'VIEW'] checkVisibility [eyePos player, eyePos unit1];", game: "Arma 3", version: 1.56 },
    { id: 267, name: "civilian", description: "Pre-defined variable for the civilian side.   When used in a format statement (hint format['%1',civilian]), the string returned is 'CIV'.", syntax: "civilian", returns: "null", example: "?((side _unit) == civilian) : hint 'This is a civilian unit!'", game: "Operation Flashpoint", version: 1 },
    { id: 268, name: "className", description: "Returns short name of location.", syntax: "className loc", returns: "String", example: "null", game: "Arma 3", version: 0.5 },
    { id: 269, name: "clearAllItemsFromBackpack", description: "Removes all items from the backpack.", syntax: "clearAllItemsFromBackpack unit", returns: "Nothing", example: "null", game: "Arma 3", version: 0.5 },
    { id: 270, name: "clearBackpackCargo", description: "Removes all backpacks from ammo box (or any general weapon holder container).", syntax: "clearBackpackCargo box", returns: "Nothing", example: "clearBackpackCargo myBox;", game: "Arma 3", version: 0.5 },
    { id: 271, name: "clearBackpackCargoGlobal", description: "Removes all backpacks from the vehicle cargo space. MP synchronized.", syntax: "clearBackpackCargoGlobal unit", returns: "Nothing", example: "clearBackpackCargoGlobal jeepOne;", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 272, name: "clearGroupIcons", description: "Removes all icon from group.", syntax: "clearGroupIcons group", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 273, name: "clearItemCargo", description: "Removes all items from ammo box (or any general weapon holder container).", syntax: "clearItemCargo box", returns: "Nothing", example: "clearItemCargo myBox;", game: "Arma 3", version: 0.5 },
    { id: 274, name: "clearItemCargoGlobal", description: "Removes all items from ammo box (or any general weapon holder container).", syntax: "clearItemCargoGlobal box", returns: "Nothing", example: "null", game: "Arma 3", version: 0.5 },
    { id: 275, name: "clearItemPool", description: "Removes all items from ammo box (or any general weapon holder container)", syntax: "clearItemPool box", returns: "Nothing", example: "clearItemPool jeepOne", game: "Arma 3", version: 1 },
    { id: 276, name: "clearMagazineCargo", description: "Remove all magazines from the given vehicle's magazine cargo space.", syntax: "clearMagazineCargo vehicleName", returns: "Nothing", example: "clearMagazineCargo _truck;", game: "Operation Flashpoint", version: 1 },
    { id: 277, name: "clearMagazineCargoGlobal", description: "Removes all magazines from the vehicle cargo space. MP synchronized.", syntax: "clearMagazineCargoGlobal unit", returns: "Nothing", example: "clearMagazineCargoGlobal jeepOne;", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 278, name: "clearMagazinePool", description: "Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.", syntax: "clearMagazinePool", returns: "null", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 279, name: "clearOverlay", description: "Clear the current overlay.", syntax: "clearOverlay map", returns: "Nothing", example: "clearOverlay _map,", game: "Arma 2", version: 1 },
    { id: 280, name: "clearRadio", description: "Clean up the content of radio protocol history.", syntax: "clearRadio", returns: "null", example: "enableRadio false;", game: "Armed Assault", version: 1 },
    { id: 281, name: "clearWeaponCargo", description: "Remove all weapons from the given vehicle's weapon cargo space.", syntax: "clearWeaponCargo vehicleName", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 282, name: "clearWeaponCargoGlobal", description: "Removes all weapons from the vehicle cargo space. MP synchronized.", syntax: "clearWeaponCargoGlobal unit", returns: "Nothing", example: "clearWeaponCargoGlobal jeepOne;", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 283, name: "clearWeaponPool", description: "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.", syntax: "clearWeaponPool", returns: "null", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 284, name: "clientOwner", description: "Returns the client's owner id", syntax: "clientOwner", returns: "null", example: "_id = clientOwner;", game: "Arma 3", version: 1.56 },
    { id: 285, name: "closeDialog", description: "Close the currently active user dialog with exit code. Most common exit codes are: #define IDC_OK            1 //emulate 'Ok' button #define IDC_CANCEL        2 //emulate 'Cancel' button", syntax: "closeDialog idc", returns: "Nothing", example: "#define IDC_OK            1 //emulate 'Ok' button", game: "Operation Flashpoint", version: 1.5 },
    { id: 286, name: "closeDisplay", description: "Close given display with exit code. Most common exit codes are: #define IDC_OK            1 //emulate 'Ok' button #define IDC_CANCEL        2 //emulate 'Cancel' button", syntax: "display closeDisplay exitcode", returns: "exitcode: Number", example: "#define IDC_OK            1 //emulate 'Ok' button", game: "Armed Assault", version: 1 },
    { id: 287, name: "closeOverlay", description: "Closes the current overlay without committing.", syntax: "closeOverlay map", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 288, name: "collapseObjectTree", description: "Collapse the object tree.", syntax: "collapseObjectTree map", returns: "Nothing", example: "collapseObjectTree _map,", game: "Arma 2", version: 1 },
    { id: 289, name: "collect3DENHistory", description: "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.", syntax: "collect3DENHistory code", returns: "Nothing", example: "collect3DENHistory { 	_logic = create3DENEntity ['Logic', 'Logic', position player]; 	add3DENConnection ['Sync', [_logic], player ]; };", game: "Arma 3", version: 1.56 },
    { id: 290, name: "combatMode", description: "Returns the combat mode of the given unit. See setCombatMode for more information about combat modes.", syntax: "String = combatMode grp", returns: "String -   One of 'BLUE', 'GREEN', 'WHITE', 'YELLOW' and 'RED' or 'ERROR'", example: "if ((combatMode _grp1) == 'BLUE') then {_grp1 setCombatMode 'GREEN'};", game: "Operation Flashpoint", version: 1 },
    { id: 291, name: "commandArtilleryFire", description: "Orders a unit to reload defined magazine commence fire burst on the given position (via the radio).", syntax: "unit commandArtilleryFire [position, type, rounds]", returns: "[position, type, rounds]: Array", example: "mortar1 commandArtilleryFire [[3000, 120, 1000], '8Rnd_82mm_Mo_shells', 3];", game: "Arma 3", version: 0.5 },
    { id: 292, name: "commandChat", description: "Types text to the command radio channel. Must have assigned 'ItemRadio' to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", syntax: "unitName commandChat chatText", returns: "chatText: String - message to transmit", example: "_soldierOne commandChat 'Show this text';", game: "Arma 2", version: 1 },
    { id: 293, name: "commander", description: "In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander.", syntax: "commander vehicleName", returns: "Object -  The unit sitting in the commander place is returned. If vehicle is not a vehicle but a person, the person is returned.", example: "moveOut commander _tank;", game: "Operation Flashpoint", version: 1 },
    { id: 294, name: "commandFire", description: "Order the given unit to fire on the given target (via the radio). If the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget).", syntax: "unitName commandFire target", returns: "target: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 295, name: "commandFollow", description: "Order the given unit to follow the given other unit (via the radio).", syntax: "unitName commandFollow followedunit", returns: "followedunit: Object", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 296, name: "commandFSM", description: "Orders a unit to process command defined by FSM file (via the radio).", syntax: "unitName commandFSM [fsm name, position, target]", returns: "[fsm name, position, target]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 297, name: "commandGetOut", description: "Orders the unit to get out from the vehicle (via the radio).", syntax: "commandGetOut unitName", returns: "Nothing", example: "commandGetOut _unitOne", game: "Armed Assault", version: 1 },
    { id: 298, name: "commandingMenu", description: "Return the name of the player actual topmost commanding menu.", syntax: "commandingMenu", returns: "null", example: "waitUntil {commandingMenu == 'RscStatus'}; hint 'Press 4, I'm bleeding !';", game: "Arma 2", version: 1 },
    { id: 299, name: "commandMove", description: "Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message.", syntax: "unitName commandMove position", returns: "position: Array - format Position", example: "_soldier1 commandMove (getMarkerPos 'Marker1')", game: "Operation Flashpoint", version: 1 },
    { id: 300, name: "commandRadio", description: "Sends the audio message to the command radio channel. Must have assigned 'ItemRadio' to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).   Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit commandRadio radioName", returns: "radioName: String - class name from CfgRadio", example: "_soldierOne commandRadio 'messageOne';", game: "Arma 2", version: 1 },
    { id: 301, name: "commandStop", description: "Order the given unit(s) to stop (via the radio).  A stop command will never finish, the unit will never be ready.", syntax: "commandStop unitName", returns: "Nothing", example: "commandStop _soldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 302, name: "commandSuppressiveFire", description: "Order the given unit to suppress a given position or target (via the radio).", syntax: "unitName commandSuppressiveFire target", returns: "target: Object or Array (Position)", example: "_soldier commandSuppressiveFire [1869.508,5760.962,0.000]", game: "Arma 3", version: 1.6 },
    { id: 303, name: "commandTarget", description: "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.", syntax: "unitName commandTarget target", returns: "target: Object", example: "_ESoldier1 commandTarget _WSoldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 304, name: "commandWatch", description: "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target", syntax: "unitName(s) commandWatch position", returns: "position: Array - format Position", example: "_soldierOne commandWatch markerPos 'MarkerMoveOne'", game: "Operation Flashpoint", version: 1 },
    { id: 305, name: "comment", description: "Define a comment.   Mainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script.", syntax: "comment commentMsg", returns: "Nothing", example: "comment 'This is a commented line'", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 306, name: "commitOverlay", description: "Commit the current overlay.", syntax: "commitOverlay map", returns: "Nothing", example: "commitOverlay _map,", game: "Arma 2", version: 1 },
    { id: 307, name: "compile", description: "Compile expression.", syntax: "compile expression", returns: "Code", example: "_string = 'a = a + 1'; _code = compile _string;  call _code;", game: "Armed Assault", version: 1 },
    { id: 308, name: "compileFinal", description: "Compile expression and makes it final, preventing it from:  repeated compile or compileFinal  removal by nil  remote rewrite using publicVariable, publicVariableClient and publicVariableServer", syntax: "Code = compileFinal expression", returns: "Code", example: "myCode = compileFinal 'a = a + 1';  call myCode;   //--- Repeated compile won't have any effect myCode = compileFinal 'a = a + 2';  //--- Duplicate code will be final as well myDuplicateCode = myCode;", game: "Arma 3", version: 0.56 },
    { id: 309, name: "completedFSM", description: "Check whether the given FSM completes.  The FSM handle is the number returned by the execFSM command.", syntax: "completedFSM fsmHandle", returns: "Boolean", example: "_completed = completedFSM _fsmHandle;", game: "Arma 2", version: 1 },
    { id: 310, name: "composeText", description: "Creates a structured text by joining the given structured or plain texts.", syntax: "composeText [text1, text2, ...]", returns: "Structured Text", example: "_txt = composeText ['First line', image 'data\isniper.paa', lineBreak, 'Second line'];", game: "Armed Assault", version: 1 },
    { id: 311, name: "config / name", description: "Returns subentry of config entry with given name, (alias for >>).", syntax: "config / name", returns: "name: String", example: "configFile / 'CfgVehicles';", game: "Armed Assault", version: 1 },
    { id: 312, name: "config greater greater name", description: "Returns subentry of config entry with given name. Identical to config/name.", syntax: "config >> name", returns: "name: String", example: "configFile >> 'CfgVehicles';", game: "Armed Assault", version: 1 },
    { id: 313, name: "configClasses", description: "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. Slightly faster than configProperties, but doesn't account for config properties or inherited entries.            The condition code passed to configClasses should only be used for simple filter expressions and nothing more", syntax: "condition configClasses config", returns: "config: Config", example: "_configs = 'true' configClasses (configFile >> 'CfgVehicles');", game: "Arma 3", version: 1.24 },
    { id: 314, name: "configFile", description: "Return root of config entries hierarchy.  See AllInOne Config for a full config extract as example.", syntax: "Config = configFile", returns: "null", example: "_isMyClassActive = isClass (configFile / 'CfgPatches' / 'MyClass');", game: "Armed Assault", version: 1 },
    { id: 315, name: "configHierarchy", description: "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported", syntax: "configHierarchy configClass", returns: "Array - array of parent configs", example: "_hierarchy = configHierarchy (configFile >> 'CfgVehicles' >> 'Car'); //[bin\config.bin,bin\config.bin/CfgVehicles,bin\config.bin/CfgVehicles/Car]", game: "Arma 3", version: 1.48 },
    { id: 316, name: "configName", description: "Returns name of config entry.", syntax: "String = configName config", returns: "String", example: "_name = configName (configFile >> 'CfgVehicles');", game: "Armed Assault", version: 1 },
    { id: 317, name: "configNull", description: "A non-existing Config.  configNull == configNull; // true  isNull configNull; // true  configNull isEqualTo configNull; // true", syntax: "configNull", returns: "null", example: "_config = missionNamespace getVariable ['myConfig', configNull];", game: "Arma 3", version: 1.56 },
    { id: 318, name: "configProperties", description: "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entires.            The condition code passed to configProperties should only be used for simple filter expressions and nothing more", syntax: "configProperties [config, condition, inherit]", returns: "config: Config - config entry to search", example: "_configs = configProperties [configFile >> 'CfgVehicles' >> 'O_Truck_02_box_F'];", game: "Arma 3", version: 1.36 },
    { id: 319, name: "configSourceAddonList", description: "Returns an array of addons (CfgPatches) in which the given config class is defined.", syntax: "configSourceAddonList config", returns: "Array of Strings", example: "_addons = configSourceAddonList (configFile >> 'CfgVehicles' >> 'Man'); hint str _addons; // ['A3_Data_F','A3_Characters_F','A3_Data_F_Curator','A3_Air_F_Heli']", game: "Arma 3", version: 1.58 },
    { id: 320, name: "configSourceMod", description: "Returns modDir of the mod that given config class was loaded from.", syntax: "configSourceMod config", returns: "String", example: "configSourceMod (configFile >> 'CfgVehicles' >> 'Heli_Transport_04_base_F'); //Returns 'heli'", game: "Arma 3", version: 1.38 },
    { id: 321, name: "configSourceModList", description: "Returns an array of mods (CfgMods) in which the given config class is defined.", syntax: "configSourceModList config", returns: "Array of Strings", example: "_mods = configSourceModList (configFile >> 'CfgVehicles' >> 'Man'); hint str _mods; // ['A3','curator','heli']", game: "Arma 3", version: 1.4 },
    { id: 322, name: "confirmSensorTarget", description: "Sets for which Side the entity becomes a 'confirmed hostile' target - a target that becomes highlighted red on the sensors display.", syntax: "vehicle confirmSensorTarget [side, isConfirmed]", returns: "[side, isConfirmed]: Array", example: "(vehicle player) confirmSensorTarget [west, true];", game: "Arma 3", version: 1.7 },
    { id: 323, name: "connectTerminalToUAV", description: "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.", syntax: "person connectTerminalToUAV uav", returns: "uav: Object", example: "bool = player connectTerminalToUAV uav1;", game: "Arma 3", version: 0.76 },
    { id: 324, name: "controlNull", description: "A non-existing Control. To compare non-existent objects use isNull or isEqualTo:  controlNull == controlNull; // false  isNull controlNull; // true  controlNull isEqualTo controlNull; // true", syntax: "controlNull", returns: "null", example: "!isNull controlNull; // false", game: "Armed Assault", version: 1 },
    { id: 325, name: "controlsGroupCtrl", description: "Returns a child control with specified idc from a controls group", syntax: "ctrlgrp controlsGroupCtrl idc", returns: "idc: Number", example: "_control = _controlsGroup controlsGroupCtrl 101;", game: "Arma 3", version: 1.42 },
    { id: 326, name: "copyFromClipboard", description: "Return the content of the (text) clipboard.          Disabled in Multiplayer for security reasons", syntax: "copyFromClipboard", returns: "null", example: "hint copyFromClipboard;", game: "Arma 2", version: 1 },
    { id: 327, name: "copyToClipboard", description: "Copy text string to the clipboard.          In MP available only on the client that is server", syntax: "copyToClipboard text", returns: "Nothing", example: "copyToClipboard str _data;", game: "Arma 2", version: 1 },
    { id: 328, name: "copyWaypoints", description: "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.", syntax: "groupTo copyWaypoints groupFrom", returns: "groupFrom: Group", example: "group1 copyWaypoints group2;", game: "Arma 2", version: 1 },
    { id: 329, name: "cos", description: "Cosine of a number, argument in degrees.", syntax: "cos x", returns: "Number", example: "cos 60;//returns 0.5", game: "Operation Flashpoint", version: 1 },
    { id: 330, name: "count", description: "Can be used to count:  the number of elements in array  the number of elements in array with condition  the number of sub-entries in a config object  the number of characters in a string (since ['Arma 3','Arma3',127,126674,'Development'])", syntax: "count array", returns: "Number", example: "_cnt = count [0,0,1,2]; // returns 4 _cnt = count units group player; // returns number of units in player group", game: "Operation Flashpoint", version: 1 },
    { id: 331, name: "countEnemy", description: "Count how many units in the array are considered enemy to the given unit.", syntax: "unitName countEnemy arrayName", returns: "arrayName: Array", example: "_num = player countEnemy list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 332, name: "countFriendly", description: "Count how many units in the array are considered friendly to the given unit.", syntax: "unitName countFriendly arrayName", returns: "arrayName: Array", example: "_num = player countFriendly list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 333, name: "countSide", description: "Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted.", syntax: "side countSide arrayName", returns: "arrayName: Array of Objects and/or Groups", example: "_num = west countSide list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 334, name: "countType", description: "Count how many objects in the array are of given type. This command also works with parent classes like 'Air', 'Tank', and 'Car'. For a full class reference see Classes.", syntax: "type countType objects", returns: "objects: Array - array of Objects", example: "_count = 'Tank' countType list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 335, name: "countUnknown", description: "Count how many units in the array are unknown to the given unit.", syntax: "unitName countUnknown arrayName", returns: "arrayName: Array", example: "_num = player countUnknown list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 336, name: "create3DENComposition", description: "Create new Composition. To create individual entities, use create3DENEntity.", syntax: "create3DENComposition [configPath,  position]", returns: "position: Array in format Position", example: "myComposition = create3DENComposition [ 	configFile >> 'CfgGroups' >> 'West' >> 'BLU_F' >> 'Infantry' >> 'BUS_InfSquad', 	screenToWorld [0.5,0.5] ];", game: "Arma 3", version: 1.56 },
    { id: 337, name: "create3DENEntity", description: "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.    This is the only way how to add new editable entities to Eden Editor scenario. Other 'create' commands like createVehicle or createUnit will still work, but the resulting entity won't be editable.", syntax: "create3DENEntity [mode, class, position, (isEmpty)]", returns: "class: String - entity class, defined in one of the following classes:  CfgVehicles - objects and logic entities  CfgNonAIVehicles - triggers  CfgWaypoint - waypoints  CfgMarkers - markers", example: "dude1 = create3DENEntity ['Object','B_Soldier_F',screenToWorld [0.5,0.5]];", game: "Arma 3", version: 1.56 },
    { id: 338, name: "createAgent", description: "Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). An agent does not have a group or leader or the standard soldier FSM associated with it -- for instance, an enemy soldier spawned as an agent has limited AI and will stand stupidly when fired upon -- which can be useful to limit the amount of AI processing being done in a mission with very large numbers of 'AI'. If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.    Players assigned to an agent using setPlayable will be able to control the agent, operate weapons and other actions, but will not be able to access their inventory using the gear screen.  Special properties can be: 'NONE', 'CAN_COLLIDE' and 'FORM'.", syntax: "createAgent [type, position, markers, placement, special]", returns: "type: String - class from CfgVehicles", example: "agent = createAgent ['SoldierWB', position player, [], 0, 'FORM'];", game: "Arma 2", version: 1 },
    { id: 339, name: "createCenter", description: "In a nutshell, this command creates game Side. Without side it is not possible to create Groups. So if center for particular side is undefined, no groups can be created for this side. A Unit needs a group to be able to spawn in. So if no center for particular side exists, no groups for this side can be created and therefore no units for this side can be spawned. In Arma 3, the centers for all sides are created for you. An attempt to create center for existing side is ignored. Center can only be created for: east, west, resistance, civilian and sideLogic. These are the only sides groups can be created for.     Old description: Creates a new AI HQ for the given side. An 'HQ ' is something each side needs to have to be able to communicate. By default, all centers for units which are present in the mission are created before the mission is started. This command can be used to initialize a side which has no units present in the Mission.sqm, so that you can spawn groups and units for it.  For the available sides see Side.", syntax: "createCenter side", returns: "Side", example: "_SideHQ = createCenter east", game: "Armed Assault", version: 1 },
    { id: 340, name: "createDialog", description: "Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.", syntax: "createDialog dialogName", returns: "Boolean -   true when the dialog was created successfully", example: "_ok = createDialog 'RscDisplayGame'; if (!_ok) then {hint 'Dialog couldn't be opened!'};", game: "Operation Flashpoint", version: 1.5 },
    { id: 341, name: "createDiaryLink", description: "Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit).", syntax: "createDiaryLink [subject,object,text]", returns: "String", example: "_link = createDiarySubject ['Group',player,'Player']", game: "Arma 2", version: 1 },
    { id: 342, name: "createDiaryRecord", description: "creates a diary entry.  Supported tags and their parameters:  <All>  image: String - path to image. When present, any element with it will be displayed as image.  width: Number - image width in pixels.  height: Number - image height in pixels.  font  color: String - HTML color in format #aarrggbb or #rrggbb  size: Number - font height in pixels.  face: String - font type (class from CfgFontFamilies)  br  marker  name: String - marker name  execute  expression: String - executed code  executeClose  expression: String - executed code, diary is closed afterwards  log  subject: String - subject name.  record: String - record name (e.g. 'Record6' or 'Unit1059524')  gear  unit: Number - unit ID  teamSwitch  unit: Number - unit ID  kick  id: Number - player ID  ban  id: Number - player ID  mute  id: Number - player ID  currentTask  id: Number - task ID", syntax: "unitName createDiaryRecord [subject, text, task, state]", returns: "[subject, text, task, state]: Array", example: "player createDiaryRecord ['Diary', ['Intel', 'Enemy base is on grid <marker name='enemyBase'>161170</marker>']]", game: "Arma 2", version: 1 },
    { id: 343, name: "createDiarySubject", description: "Create a new subject page in a log.", syntax: "person createDiarySubject [subject, displayName, picture]", returns: "[subject, displayName, picture]: Array", example: "_index =player createDiarySubject ['myPage','My page'];", game: "Arma 2", version: 1 },
    { id: 344, name: "createDisplay", description: "Creates child display of given display and loads from 'resourceName'. The notable difference between createDisplay and createDialog is that with createDisplay the player would be able to move whilst having control of the mouse pointer.   Since Arma 3 v1.49.131653 createDisplay returns Display and will first look in description.ext for resourceName config, if not found, it will then look in main config.   Displays created with both createDisplay and createDialog will take control of the mouse pointer and will close when user presses Esc.  _emptyDisplay = findDisplay 46 createDisplay 'RscDisplayEmpty'; If display is needed which exists independently, it can be created in IGUI layer with cutRsc command.  'someLayer' cutRsc ['RscTitleDisplayEmpty', 'PLAIN']; _emptyDisplay = uiNamespace getVariable 'RscTitleDisplayEmpty'; Such display can be closed with closeDisplay command or by overwriting the same cut layer with another output. Note that 'Unload' EH for some reason does not work with such display.", syntax: "parent createDisplay resourceName", returns: "resourceName: String - custom display class defined in description.ext or existing display class from main config", example: "_emptyDisplay = findDisplay 46 createDisplay 'RscDisplayEmpty';", game: "Armed Assault", version: 1 },
    { id: 345, name: "createGearDialog", description: "Opens gear dialog for given unit. Alternatively use action command: player action ['Gear', player];", syntax: "createGearDialog [unit, resource]", returns: "unit: Object", example: "player action ['Gear', player];", game: "Arma 2", version: 1 },
    { id: 346, name: "createGroup", description: "Creates a new Group for the given Side. An HQ (center) for that side must already be in the Mission.sqm or have been initialized with createCenter. For the available sides see Side.     NOTES   The default limit of groups created per side was 144. Since Arma 3 v1.67 it is increased to 288.  Since Arma 3 v 1.67 it is possible to mark created group for automatic deletion when the group becomes empty (see Alt Syntax). When group is set to be automatically deleted when empty, when group becomes empty it may take up to a minute for it to get deleted.          In Arma 3 when last unit leaves its group, the group usually gets immediately auto deleted, regardless of whether or not if it was set for auto deletion manually", syntax: "createGroup side", returns: "Group", example: "_group = createGroup east", game: "Armed Assault", version: 1 },
    { id: 347, name: "createGuardedPoint", description: "Adds a point guarded by the given side (scripted way of adding equivalent of 'GUARDED BY' trigger in Editor). A closest AI group in the given side with assigned 'GUARD' waypoint will attempt to secure this guard point. The actual guarded position is determined via the following rules:  Given 'position' is always considered. It could be Object, Group, Position2D or Position3D. In every case, z coordinate will be ignored and point will be placed on nearest surface.  If 'objectMapID' is not negative, the position of the object with the given ID is used (Overrides 'position'). -1 to ignore this argument. z of the object position will be intact.  If the given 'vehicle' is valid, the position of the vehicle is extracted and guarded (Overrides both 'position' and 'objectMapID'). objNull to ignore. z of the vehicle position will be intact. For use with 'GUARD' waypoint. How does 'GUARD' waypoint work: Waypoint:Guard", syntax: "createGuardedPoint [side, position, objectMapID, vehicle]", returns: "side: Side - The side which will be guarding", example: "createGuardedPoint [east, [0,0], -1, vehicle player];", game: "Armed Assault", version: 1 },
    { id: 348, name: "createLocation", description: "Creates a location of the specified class and dimensions at the specified position. Classes are defined in CfgLocationTypes.", syntax: "createLocation [className, position, sizeX, sizeY]", returns: "className: String - see Location Types", example: "_location = createLocation [ 'NameVillage' , [4035,2151,10], 100, 100];", game: "Armed Assault", version: 1.08 },
    { id: 349, name: "createMarker", description: "Creates a new marker at the given position. The marker name has to be unique.", syntax: "createMarker [name, position]", returns: "name: String", example: "_marker1 = createMarker ['Marker1', position player];", game: "Armed Assault", version: 1 },
    { id: 350, name: "createMarkerLocal", description: "Creates a local marker at the given position. Marker exists only on PC that created it. The marker name has to be unique.    NOTE: Local markers have own set of local commands 'XXXXLocal' to work with. If you use global marker command on a local marker, the local marker will become global marker.", syntax: "createMarkerLocal [name, position]", returns: "name: String", example: "_marker = createMarkerLocal ['Marker1', position player];", game: "Armed Assault", version: 1.04 },
    { id: 351, name: "createMenu", description: "Creates a previously added menu.", syntax: "map createMenu index", returns: "index: Number -", example: "null", game: "Arma 2", version: 1 },
    { id: 352, name: "createMine", description: "Creates a mine of the given type (type is the name of the subclass of CfgVehicles). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The mine is placed inside a circle with this position as its center and placement as its radius.", syntax: "createMine [type, position, markers, placement]", returns: "type: String", example: "_mine = createMine ['MineMine', position player, [], 0];", game: "Armed Assault", version: 1 },
    { id: 353, name: "createMissionDisplay", description: "Create single missions display as a child of given display. The mission dialog will be set to the directory given as an argument 'root'.", syntax: "Display = display createMissionDisplay string", returns: "string: String", example: "_ChildDisplay = _Rootdisplay createMissionDisplay 'Tutorial';", game: "Armed Assault", version: 1.08 },
    { id: 354, name: "createMPCampaignDisplay", description: "Create a MP campaign display. The class name must be a mission collection declared in the configs; in example, configFile/'CfgMissions'/'MPMissions'/'Apex'/  If the class doesn't exist or isn't a mission collection, the display will be created empty.", syntax: "display createMPCampaignDisplay class", returns: "class: String - Mission collection class name", example: "findDisplay 46 createMPCampaignDisplay 'Apex';", game: "Arma 3", version: 1.62 },
    { id: 355, name: "createSimpleObject", description: "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.    Given the simulation limitations, global decorative objects can be created with very little network traffic. Objects that could be exclusively created with this command are: trees, bushes, rocks, bridges, roads, vehicle wrecks, custom models in mission, and other objects without a class in config. The height of the placement position might need to be adjusted experimentally. Some of the model examples could be found here: createSimpleObject/objects        One cannot attach actions to a simple object via addAction.  NOTES:    Objects created with Syntax 1 cannot be textured. Some objects may also have inverted default direction.   Objects created with Syntax 2 can be textured. The default direction should match the direction of the object if it was created with createVehicle. Since Arma 3 v1.67 simple objects support setVariable and getVariable", syntax: "createSimpleObject [shapeName, positionWorld]", returns: "shapeName: String - Path to the 3d model (can be obtained with getModelInfo command)", example: "_pos = player getRelPos [10, 0]; _tank = createSimpleObject ['a3\armor_f_beta\apc_tracked_01\apc_tracked_01_rcws_f.p3d', _pos]; _tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0])));  _tank hideSelection ['zasleh', true]; _tank hideSelection ['zasleh2', true]; _tank hideSelection ['clan', true];   _tank animate ['Wheel_podkoloL3', 0.5, true]; _tank animate ['Wheel_podkoloL6', 0.5, true];", game: "Arma 3", version: 1.58 },
    { id: 356, name: "createSimpleTask", description: "Creates a new Task. The task effect is local, it will only exist on PC it was added.", syntax: "person createSimpleTask [name, parentTask]", returns: "[name, parentTask]: Array", example: "_currentTask = player createSimpleTask ['NewTask'];", game: "Arma 2", version: 1 },
    { id: 357, name: "createSite", description: "Create a new site.           This command is considered deprecated and is no longer supported", syntax: "type createSite pos", returns: "pos: Position", example: "null", game: "Arma 3", version: 0.5 },
    { id: 358, name: "createSoundSource", description: "Creates a sound source of the given type (type is the name of the subclass of CfgVehicles which is pointing to the sound defined in CfgSFX). If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The sound source is placed inside a circle with this position as its center and placement as its radius. Some of the vanilla classes pre-configured in Arma 3:  'Sound_Alarm'  'Sound_Alarm2'  'Sound_BattlefieldExplosions'  'Sound_BattlefieldFirefight'  'Sound_Fire'  'Sound_SmokeWreck1'  'Sound_SparklesWreck1'  'Sound_SparklesWreck2'  'Sound_Stream' Since Arma 3 v1.69.141183 it is possible to define sounds for use with createSoundSource in mission config. As mentioned earlier, the sounds needed for this command should be defined inside CfgVehicles class, which itself references CfgSFX class. If given class searched in main config and is not found, the search will continue in description.ext. Here is an example of suitable mission config definition:  // description.ext   class CfgSFX { 	class MyOwl 	{ 		sound0[] = {'@A3\Sounds_F\environment\animals\birds\owl1', db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound 		sound1[] = {'@A3\Sounds_F\environment\animals\birds\owl2', db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound 		sound2[] = {'@A3\Sounds_F\environment\animals\birds\owl3', db-10, 1.0, 1000, 0.2, 0, 15, 30};  // path to addon sound 		sounds[] = {sound0, sound1, sound2}; 		empty[] = {'', 0, 0, 0, 0, 0, 0, 0}; 	}; };   class CfgVehicles { 	class MyOwlSound // class name to be used with createSoundSource 	{ 		sound = 'MyOwl'; // reference to CfgSFX class 	}; }; _owl = createSoundSource ['MyOwlSound', position player, [], 0]; Note that the sound created by createSoundSource will always be looping. Also when CfgSFX sound definition contains more than 1 sound, there is no guarantee that the sound played will be the same on every PC in Multiplayer.", syntax: "createSoundSource [type, position, markers, placement]", returns: "type: String - CfgVehicles class", example: "_owl = createSoundSource ['MyOwlSound', position player, [], 0];", game: "Armed Assault", version: 1 },
    { id: 359, name: "createTask", description: "Create a new AI task (subtask of parentTask). Type is name of registered task type.", syntax: "teamMember createTask  [[type, parentTask], priority, name1, value1...nameN, valueN]", returns: "[[type, parentTask], priority, name1, value1...nameN, valueN]: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 360, name: "createTeam", description: "Create a team and name it.", syntax: "createTeam [type, name]", returns: "type: String", example: "_team = createTeam ['USMC_Team', 'Fire Team Red'];", game: "Arma 2", version: 1 },
    { id: 361, name: "createTrigger", description: "Creates a sensor (trigger) of the given type and at the given position. The type must be a class name in CfgNonAIVehicles or CfgVehicles with simulation = detector. An array containing all units that have activated the trigger is available via list triggerobj. Created triggers can be deleted using deleteVehicle.    NOTE1: Since Arma 3 v1.43.129935 triggers can be created locally on clients setting optional param makeGlobal to false  NOTE2: Since Arma 3 v1.53.132440 triggers can be disabled/enabled using enableSimulation command    Triggers are created with default params, which are:  a: 50.0  b: 50.0  c: -1  angle: 0  rectangular: false  activationBy: None  activationType: Present  repeating: false  timeoutMin: 0  timeoutMid: 0  timeoutMax: 0  interruptable: true  type: None  text: ''  name: ''  expCond: 'this'  expActiv: ''  expDesactiv: ''", syntax: "createTrigger [type, position, makeGlobal]", returns: "type: String - usually 'EmptyDetector'", example: "_trg = createTrigger ['EmptyDetector', getPos player]; _trg setTriggerArea [5, 5, 0, false]; _trg setTriggerActivation ['CIV', 'PRESENT', true]; _trg setTriggerStatements ['this', 'hint 'Civilian near player'', 'hint 'no civilian near''];", game: "Armed Assault", version: 1 },
    { id: 362, name: "createUnit", description: "Create unit of a class that's defined in CfgVehicles.  The Group parameter MUST be an existing group or the unit won't be created.", syntax: "group createUnit [type, position, markers, placement, special]", returns: "[type, position, markers, placement, special]: Array", example: "_hasCargo = _veh emptyPositions 'CARGO' > 0;", game: "Operation Flashpoint", version: 1.34 },
    { id: 363, name: "createVehicle", description: "Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles)  For a class reference from older games see Classes.   Some special 'Scripted' vehicle classes:  DemoCharge_Remote_Ammo_Scripted - same as DemoCharge_Remote_Ammo but will explode when destroyed or setDamage 1;  SatchelCharge_Remote_Ammo_Scripted - same as SatchelCharge_Remote_Ammo but will explode when destroyed or setDamage 1;  ClaymoreDirectionalMine_Remote_Ammo_Scripted -  same as ClaymoreDirectionalMine_Remote_Ammo but will explode when destroyed or setDamage 1;  GroundWeaponHolder_Scripted - same as GroundWeaponHolder but will not be auto-deleted when empty  WeaponHolderSimulated_Scripted - same as WeaponHolderSimulated but will not be auto-deleted when empty   Randomization:  In Arma 3 many vehicles will get randomized in appearance by default in order to add some variety to the game. It is possible to override this default behavior by setting BIS_enableRandomization variable to false in the vehicle namespace: _veh = 'C_Offroad_01_F' createVehicle position player; _veh setVariable ['BIS_enableRandomization', false]; or this setVariable ['BIS_enableRandomization', false]; if done in mission editor init field.", syntax: "type createVehicle position", returns: "position: Position - Desired placement position. If the exact position is occupied, nearest empty position is used.", example: "_veh = 'C_Offroad_01_F' createVehicle position player; _veh setVariable ['BIS_enableRandomization', false];", game: "Operation Flashpoint", version: 1.34 },
    { id: 364, name: "createVehicleCrew", description: "Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction. This command does not addVehicle to the created crew in the same way this normally happens when crewed vehicle created in the editor.", syntax: "createVehicleCrew vehicle", returns: "Nothing", example: "// Spawn a flying UAV with crew.   myUAV = [getPos player, 0, 'B_UAV_02_F', west] call BIS_fnc_spawnVehicle; createVehicleCrew (myUAV select 0);", game: "Arma 3", version: 0.76 },
    { id: 365, name: "createVehicleLocal", description: "Creates an object of the given type. Created object is not transferred through network in MP games.", syntax: "type createVehicleLocal position", returns: "position: Position", example: "_lightsource = '#lightpoint' createVehicleLocal _pos;", game: "Armed Assault", version: 1 },
    { id: 366, name: "crew", description: "Returns the crew (both dead and alive) of the given vehicle.", syntax: "crew vehicleName", returns: "Array -  An array with all units in the vehicle is returned.", example: "player in (crew _tank);", game: "Operation Flashpoint", version: 1 },
    { id: 367, name: "ctAddHeader", description: "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in a format [<headerIndex>, [<control0>, <control1>...<control n>]].   Note that rows and headers are indexed separately.", syntax: "Array = ctAddHeader Control", returns: "Array", example: "_array = ctAddHeader _control;", game: "Arma 3", version: 1.7 },
    { id: 368, name: "ctAddRow", description: "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].   Note that rows and headers are indexed separately.", syntax: "Array = ctAddRow Control", returns: "Array", example: "_array = ctAddRow _control;", game: "Arma 3", version: 1.7 },
    { id: 369, name: "ctClear", description: "Removes all the lines from the RscControlsTable. Returns Nothing.", syntax: "Nothing = ctClear Control", returns: "Nothing", example: "ctClear _control;", game: "Arma 3", version: 1.7 },
    { id: 370, name: "ctCurSel", description: "Returns index of the selected row. Will take only rows, but not headers into account.", syntax: "Number = ctCurSel Control", returns: "Number", example: "_curSel = ctCurSel _control;", game: "Arma 3", version: 1.7 },
    { id: 371, name: "ctData", description: "Returns metadata (string) associated with a particular row of RscControlsTable.", syntax: "ctData Control", returns: "String", example: "ctData _control;", game: "Arma 3", version: 1.7 },
    { id: 372, name: "ctFindHeaderRows", description: "Takes index of a header as a parameter. Returns array of indices of rows under this header.", syntax: "Control ctFindHeaderRows Number", returns: "index: Number", example: "_array = _control ctFindHeaderRows 0;", game: "Arma 3", version: 1.7 },
    { id: 373, name: "ctFindRowHeader", description: "Takes index of a row as a parameter. Returns index of the closest header above this row.", syntax: "Control ctFindRowHeader Number", returns: "Number", example: "_index = _control ctFindRowHeader 0;", game: "Arma 3", version: 1.7 },
    { id: 374, name: "ctHeaderControls", description: "Returns array of controls on the header with the given index.", syntax: "Array = Control ctHeaderControls Number", returns: "Array", example: "_array = _control ctHeaderControls 0;", game: "Arma 3", version: 1.7 },
    { id: 375, name: "ctHeaderCount", description: "Returns number of headers (rows not included) in the RscControlsTable.", syntax: "Number = ctHeaderCount Control", returns: "Number", example: "ctHeaderCount _control;", game: "Arma 3", version: 1.7 },
    { id: 376, name: "ctRemoveHeaders", description: "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.", syntax: "Control ctRemoveHeaders Array", returns: "indices: Array", example: "_control ctRemoveHeaders [0, 1, 2];", game: "Arma 3", version: 1.7 },
    { id: 377, name: "ctRemoveRows", description: "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.", syntax: "Control ctRemoveRows Array", returns: "indices: Number", example: "_control ctRemoveRows [0, 1, 2];", game: "Arma 3", version: 1.7 },
    { id: 378, name: "ctrlActivate", description: "Launch actions attached to given (button based) control.", syntax: "ctrlActivate controlName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 379, name: "ctrlAddEventHandler", description: "Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed.   NOTE: Control EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.", syntax: "control ctrlAddEventHandler [handler,function]", returns: "[handler,function]: Array", example: "_map ctrlAddEventHandler ['draw','_this call BIS_fnc_strategicMapOpen_draw'];", game: "Arma 2", version: 1 },
    { id: 380, name: "ctrlAngle", description: "Gets rotation info of an ST_PICTURE control.", syntax: "ctrlAngle control", returns: "Array - format [angle, centerX, centerY]", example: "ctrlAngle _control;", game: "Arma 3", version: 1.52 },
    { id: 381, name: "ctrlAutoScrollDelay", description: "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present.     Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "ctrlAutoScrollDelay control", returns: "Number", example: "_ctrlDelay = ctrlAutoScrollDelay _ctrlGroup;", game: "Arma 2", version: 1 },
    { id: 382, name: "ctrlAutoScrollRewind", description: "Returns true if auto-scroll should move back to start after it reaches the end.    Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "ctrlAutoScrollRewind control", returns: "Boolean", example: "_ctrlRewind = ctrlAutoScrollRewind _ctrlGroup;", game: "Arma 2", version: 1 },
    { id: 383, name: "ctrlAutoScrollSpeed", description: "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present.     Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "ctrlAutoScrollSpeed control", returns: "Number", example: "_ctrlSpeed =  ctrlAutoScrollSpeed _ctrlGroup;", game: "Arma 2", version: 1 },
    { id: 384, name: "ctrlChecked", description: "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes.    Note: The 'onCheckBoxesSelChanged' control EH returns the control, index of changed checkbox and its current checked state. The checked state however is not a Boolean but Number 0 or 1. To convert ctrlChecked command output into number as well, use parseNumber command.", syntax: "ctrlChecked control", returns: "Boolean - true checked, false unchecked", example: "ctrlChecked _control;", game: "Arma 3", version: 0.5 },
    { id: 385, name: "ctrlClassName", description: "Returns the class name of a control as it defined in config.", syntax: "ctrlClassName control", returns: "String - class name", example: "_ctrls = ''; for '_i' from -1 to 10000 do {	 	with uiNamespace do { 		_ctrl = findDisplay 46 displayCtrl _i; 		if (!isNull _ctrl) then { 			_ctrls = _ctrls + format ['IDC: %1, Class Name: %2\n', _i, ctrlClassName _ctrl]; 		}; 	}; }; hint _ctrls;", game: "Arma 3", version: 1.26 },
    { id: 386, name: "ctrlCommit", description: "Commit control animation.", syntax: "controlName ctrlCommit time", returns: "time: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 387, name: "ctrlCommitted", description: "Check if the control animation is finished.", syntax: "Boolean = ctrlCommitted controlName", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 388, name: "ctrlCreate", description: "Creates new control in given display. Some of the common controls that can be used with this command:  RscText - simple text box  RscTextMulti - simple multiline text box  RscPicture - simple picture box  RscPictureKeepAspect - picture box that doesn't stretch picture  RscEdit - input box  RscEditMulti - multiline input box  RscTree - tree view control  RscTreeSearch - searchable tree view control (see Example 4)  RscVideo - picture control with autostart for video texture (see BIS_fnc_playVideo)  RscVideoKeepAspect - picture control for video to keep original video aspect ratio  NOTE: Since Arma 3 v1.69.141213 ctrlCreate will also search for control class in mission config, if search in the main config failed. This means one can now define classes in mission config and use them with ctrlCreate", syntax: "display ctrlCreate [class, idc, controlsGroup]", returns: "[class, idc, controlsGroup]: Array", example: "_display ctrlCreate ['RscText', 1234];", game: "Arma 3", version: 1.26 },
    { id: 389, name: "ctrlDelete", description: "Deletes given control.  Returns whether the deletion was successful.", syntax: "ctrlDelete control", returns: "Boolean", example: "ctrlDelete ((findDisplay 20000) displayCtrl 20001);", game: "Arma 3", version: 1.26 },
    { id: 390, name: "ctrlEnable", description: "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto.  Read Dialog Control for more information about user dialogs and controls.", syntax: "ctrlEnable [idc, enable]", returns: "idc: Number - control ID", example: "_ctrl ctrlEnable false", game: "Operation Flashpoint", version: 1.5 },
    { id: 391, name: "ctrlEnabled", description: "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused.  Read Dialog Control for more information about user dialogs and controls.", syntax: "Boolean =  ctrlEnabled idc", returns: "Boolean -   true if the control is enabled, false if not.", example: "null", game: "Operation Flashpoint", version: 1.5 },
    { id: 392, name: "ctrlFade", description: "Returns the current fade factor of control.", syntax: "Number = ctrlFade controlName", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 393, name: "ctrlHTMLLoaded", description: "Returns true when HTML content was successfully loaded.", syntax: "ctrlHTMLLoaded control", returns: "Boolean", example: "_control htmlLoad 'test.html'; if (!ctrlHTMLLoaded _control) then {     hint 'Loading test.html failed!'; };", game: "Arma 3", version: 0.5 },
    { id: 394, name: "ctrlIDC", description: "Returns control IDC.", syntax: "ctrlIDC control", returns: "Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 395, name: "ctrlIDD", description: "Returns display IDD.", syntax: "ctrlIDD display", returns: "Number", example: "ctrlIDD findDisplay 46; //46", game: "Arma 3", version: 0.5 },
    { id: 396, name: "ctrlMapAnimAdd", description: "Adds the next frame to the map animation.", syntax: "map ctrlMapAnimAdd [time, zoom, position]", returns: "[time, zoom, position]: Array", example: "_map ctrlMapAnimAdd [1, 0.1, getMarkerPos 'anim1']; ctrlMapAnimCommit _map;", game: "Armed Assault", version: 1 },
    { id: 397, name: "ctrlMapAnimClear", description: "Clears the map animation.", syntax: "ctrlMapAnimClear controlName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 398, name: "ctrlMapAnimCommit", description: "Plays the map animation.", syntax: "ctrlMapAnimCommit controlName", returns: "Nothing", example: "_ctrl ctrlMapAnimAdd [0, 0.05, player]; ctrlMapAnimCommit _ctrl;", game: "Armed Assault", version: 1 },
    { id: 399, name: "ctrlMapAnimDone", description: "Checks whether the map animation has finished.", syntax: "Boolean = ctrlMapAnimDone controlName", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 400, name: "ctrlMapCursor", description: "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. The cursor is the name of a config entry from CfgWrapperUI / Cursors. This command has the following specifics:  When used on Main Map (findDisplay 12 displayCtrl 51) it is possible to override multiple default cursors. For example, while leaving default 'Arrow' intact, it is possible to just override 'Scroll' with lets say 'Wait' (Example 3)  When used on a custom map, for example user made Mini Map, there is only one single cursor '' for everything, therefore only this cursor can be overridden (see Example 4 on how to override it) Some possible class names (for the whole list see ctrlMapCursor/cursors):  Arrow  Track  Move  Scroll  Rotate  Track3D  Move3D  Rotate3D  Raise3D  Wait  HC_move  HC_overFriendly  HC_overEnemy  HC_overMission  HC_unsel NOTE1: Cursor names are case sensitive.", syntax: "control ctrlMapCursor [defaultCursor, newCursor]", returns: "defaultCursor: String - Cursor class name", example: "_map ctrlMapCursor ['Track', 'Arrow'];", game: "Arma 2", version: 1 },
    { id: 401, name: "ctrlMapMouseOver", description: "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.", syntax: "ctrlMapMouseOver control", returns: "Array - Possible values:  ['unit', Object]  ['vehicle', Object]  ['vehicleGroup', Object]  ['object', Object]  ['waypoint', Waypoint]  ['trigger', Object]  ['marker', String]  ['task', Task]  ['customMark']", example: "(uiNamespace getVariable '_map') ctrlMapCursor ['Track','HC_overFriendly'];  _mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable '_map')) > 0) then { 	ctrlMapMouseOver (uiNamespace getVariable '_map') } else { 	[''] };  if (_mouseover select 0 == 'task' && str(_logic getVariable 'onTaskAssigned') != str{}) then { 	//--- Task 	(uiNamespace getVariable '_map') ctrlMapCursor ['Track','HC_overMission']; } else { 	//--- Waypoint 	(uiNamespace getVariable '_map') ctrlMapCursor ['Track','HC_move']; };", game: "Arma 2", version: 1 },
    { id: 402, name: "ctrlMapScale", description: "Returns the current scale of given map control.", syntax: "ctrlMapScale ctrl", returns: "Number", example: "_control = (findDisplay 12) displayCtrl 51; //Arma 3 _scale = ctrlMapScale _control; //returns number from 1 to 0.001", game: "Armed Assault", version: 1 },
    { id: 403, name: "ctrlMapScreenToWorld", description: "Convert screen coordinates in map to world coordinates.", syntax: "map ctrlMapScreenToWorld [x, y]", returns: "[x, y]: Array", example: "null", game: "Armed Assault", version: 1.05 },
    { id: 404, name: "ctrlMapWorldToScreen", description: "Transfers a map control world position to screen coordinates.", syntax: "control ctrlMapWorldToScreen position", returns: "position: Position", example: "_screenCoord = _control ctrlMapWorldToScreen _worldCoord;", game: "Armed Assault", version: 1.05 },
    { id: 405, name: "ctrlModel", description: "Returns model used in 3D Dialog Control.", syntax: "ctrlModel control", returns: "String - model path", example: "_model = ctrlModel _control3D;", game: "Arma 3", version: 1.32 },
    { id: 406, name: "ctrlModelDirAndUp", description: "Returns vectorDir and vectorUp of the model used in 3D Dialog Control.", syntax: "ctrlModelDirAndUp control", returns: "Array - format [vectorDir, vectorUp]", example: "_vectorDirAndUp = ctrlModelDirAndUp _control3D;", game: "Arma 3", version: 1.32 },
    { id: 407, name: "ctrlModelScale", description: "Returns 3D control model scale", syntax: "ctrlModelScale control", returns: "Number", example: "_currentScale = ctrlModelScale _ctrl3D;", game: "Arma 3", version: 1.32 },
    { id: 408, name: "ctrlParent", description: "Returns container of the given control.", syntax: "Display = ctrlParent controlName", returns: "Display", example: "null", game: "Armed Assault", version: 1 },
    { id: 409, name: "ctrlParentControlsGroup", description: "Returns the parent control of a given child control", syntax: "ctrlParentControlsGroup ctrl", returns: "Control", example: "_ctrlCombo = _ctrl controlsGroupCtrl 100;//Control ctrlParentControlsGroup _ctrlCombo;//Parent control group (_ctrl)", game: "Arma 3", version: 1.58 },
    { id: 410, name: "ctrlPosition", description: "Returns the current position of 2D control as [x, y, w, h] array. For 3D control it returns relative [x,y,z].", syntax: "ctrlPosition controlName", returns: "Array", example: "_pos = ctrlPosition _control;", game: "Armed Assault", version: 1 },
    { id: 411, name: "ctrlRemoveAllEventHandlers", description: "Remove all event handlers from the given control.", syntax: "control ctrlRemoveAllEventHandlers handlerName", returns: "handlerName: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 412, name: "ctrlRemoveEventHandler", description: "Remove a given event handler from the given control.", syntax: "control ctrlRemoveEventHandler [handler name,id]", returns: "[handler name,id]: Array -", example: "_map ctrlRemoveEventHandler ['Draw', _id];", game: "Arma 2", version: 1 },
    { id: 413, name: "ctrlScale", description: "Returns the current scale of the control.", syntax: "Number = ctrlScale controlName", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 414, name: "ctrlSetActiveColor", description: "Sets text color of given control when control is selected.", syntax: "display ctrlSetActiveColor color", returns: "color: Array (format Color)", example: "null", game: "Armed Assault", version: 1 },
    { id: 415, name: "ctrlSetAngle", description: "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.", syntax: "control ctrlSetAngle [angle, centerX, centerY]", returns: "[angle, centerX, centerY]: Array", example: "_control ctrlSetAngle [25, 0.5, 0.5];", game: "Arma 3", version: 1.62 },
    { id: 416, name: "ctrlSetAutoScrollDelay", description: "Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay.    Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "control ctrlSetAutoScrollDelay delay", returns: "delay: Number - seconds to wait before scroll and/or rewind", example: "_ctrlGroup ctrlSetAutoScrollDelay 5;", game: "Arma 2", version: 1 },
    { id: 417, name: "ctrlSetAutoScrollRewind", description: "Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind.    Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "control ctrlSetAutoScrollRewind set", returns: "set: Boolean - true to enable rewind", example: "_ctrlGroup ctrlSetAutoScrollRewind true;", game: "Arma 2", version: 1 },
    { id: 418, name: "ctrlSetAutoScrollSpeed", description: "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed.    Autorscroll is available for CT_LISTBOX and CT_CONTROLS_GROUP types of controls only. Autoscroll will wait ctrlAutoScrollDelay seconds (must be  > 0) and then will scroll the scroll bar down to the bottom. ctrlAutoScrollSpeed defines the speed with which scrollbar is scrolled. If ctrlAutoScrollRewind is true, the control will fade out, immediately rewind to the top, then fade in, wait ctrlAutoScrollDelay seconds and then repeat the scrolling in a loop. If user focuses on the control, autoscrolling is interrupted.", syntax: "control ctrlSetAutoScrollSpeed speed", returns: "speed: Number - seconds to autoscroll to the next line", example: "_ctrlGroup ctrlSetAutoScrollSpeed 0.1;", game: "Arma 2", version: 1 },
    { id: 419, name: "ctrlSetBackgroundColor", description: "Sets background color of given control.", syntax: "control ctrlSetBackgroundColor color", returns: "color: Array (format Color)", example: "null", game: "Armed Assault", version: 1 },
    { id: 420, name: "ctrlSetChecked", description: "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES, type = 7;). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.", syntax: "control ctrlSetChecked checked", returns: "checked: Boolean - true to check, false to uncheck the checkbox", example: "_control ctrlSetChecked true;", game: "Arma 3", version: 0.5 },
    { id: 421, name: "ctrlSetEventHandler", description: "Sets given event handler of given control.  The provided function should return true/false indicating that the event has handled this event fully or not and whether the engine should execute it's default code or not afterwards.   See User Interface Event Handlers for the full list of handler names.  If applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.", syntax: "controlName ctrlSetEventHandler [handlerName, function]", returns: "[handlerName, function]: Array", example: "_control ctrlSetEventHandler ['OnLBSelChanged', '']; // WRONG", game: "Armed Assault", version: 1 },
    { id: 422, name: "ctrlSetFade", description: "Sets wanted transparency for control animation. Requires ctrlCommit to commit changes.", syntax: "controlName ctrlSetFade fade", returns: "fade: Number", example: "_control ctrlSetFade 1; _control ctrlCommit 5;", game: "Armed Assault", version: 1 },
    { id: 423, name: "ctrlSetFocus", description: "Set the input focus on given control.", syntax: "ctrlSetFocus controlName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 424, name: "ctrlSetFont", description: "Sets the font of given control.", syntax: "controlName ctrlSetFont fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 425, name: "ctrlSetFontH1", description: "Sets H1 font of given HTML control.", syntax: "controlName ctrlSetFontH1 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 426, name: "ctrlSetFontH1B", description: "Sets H1 bold font of given HTML control.", syntax: "controlName ctrlSetFontH1B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 427, name: "ctrlSetFontH2", description: "Sets H2 font of given HTML control", syntax: "controlName ctrlSetFontH2 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 428, name: "ctrlSetFontH2B", description: "Sets H2 bold font of given HTML control.", syntax: "controlName ctrlSetFontH2B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 429, name: "ctrlSetFontH3", description: "Sets H3 font of given HTML control.", syntax: "controlName ctrlSetFontH3 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 430, name: "ctrlSetFontH3B", description: "Sets H3 bold font of given HTML control.", syntax: "controlName ctrlSetFontH3B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 431, name: "ctrlSetFontH4", description: "Sets H4 font of given HTML control.", syntax: "controlName ctrlSetFontH4 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 432, name: "ctrlSetFontH4B", description: "Sets H4 bold font of given HTML control.", syntax: "controlName ctrlSetFontH4B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 433, name: "ctrlSetFontH5", description: "Sets H5 font of given HTML control.", syntax: "controlName ctrlSetFontH5 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 434, name: "ctrlSetFontH5B", description: "Sets H5 bold font of given HTML control.", syntax: "controlName ctrlSetFontH5B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 435, name: "ctrlSetFontH6", description: "Sets H6 font of given HTML control.", syntax: "controlName ctrlSetFontH6 fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 436, name: "ctrlSetFontH6B", description: "Sets H6 bold font of given HTML control.", syntax: "controlName ctrlSetFontH6B fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 437, name: "ctrlSetFontHeight", description: "Sets the font size of given control.", syntax: "controlName ctrlSetFontHeight height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 438, name: "ctrlSetFontHeightH1", description: "Sets H1 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH1 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 439, name: "ctrlSetFontHeightH2", description: "Sets H2 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH2 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 440, name: "ctrlSetFontHeightH3", description: "Sets H3 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH3 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 441, name: "ctrlSetFontHeightH4", description: "Sets H3 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH4 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 442, name: "ctrlSetFontHeightH5", description: "Sets H5 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH5 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 443, name: "ctrlSetFontHeightH6", description: "Sets H6 font size of given HTML control.", syntax: "controlName ctrlSetFontHeightH6 height", returns: "height: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 444, name: "ctrlSetFontHeightSecondary", description: "Sets the font size of the secondary text of given control.", syntax: "ctrl ctrlSetFontHeightSecondary value", returns: "value: Number", example: "null", game: "Arma 3", version: 1.62 },
    { id: 445, name: "ctrlSetFontP", description: "Sets P font of given HTML control or its size.", syntax: "control ctrlSetFontP fontOrSize", returns: "fontOrSize: String or Number", example: "_control ctrlSetFontP 'TahomaB'", game: "Armed Assault", version: 1 },
    { id: 446, name: "ctrlSetFontPB", description: "Sets P bold font of given HTML control.", syntax: "controlName ctrlSetFontPB fontName", returns: "fontName: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 447, name: "ctrlSetFontSecondary", description: "Sets the font size of the secondary text of given control.", syntax: "ctrl ctrlSetFontSecondary fontClass", returns: "fontClass: String - Font class", example: "null", game: "Arma 3", version: 1.62 },
    { id: 448, name: "ctrlSetForegroundColor", description: "Sets foreground color of given control. Color is in format Color.", syntax: "control ctrlSetForegroundColor color", returns: "color: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 449, name: "ctrlSetModel", description: "Sets model for 3D Dialog Control.", syntax: "control ctrlSetModel model", returns: "model : String - model path", example: "_control3D ctrlSetModel '\a3\Ui_f\objects\Compass.p3d';", game: "Arma 3", version: 1.32 },
    { id: 450, name: "ctrlSetModelDirAndUp", description: "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.", syntax: "control ctrlSetModelDirAndUp [dir, up]", returns: "[dir, up] : Array - format ctrlModelDirAndUp", example: "_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation", game: "Arma 3", version: 1.32 },
    { id: 451, name: "ctrlSetModelScale", description: "Sets 3D control model scale", syntax: "control ctrlSetModelScale scale", returns: "scale : Number", example: "_ctrl3D ctrlSetModelScale 1.5;", game: "Arma 3", version: 1.32 },
    { id: 452, name: "ctrlSetPosition", description: "Sets wanted position and size for 2D control animation. Width and height are optional. ctrlCommit is required to complete the operation. For 3D control, param is relative [x,y,z] and no ctrlCommit is required as it cannot be animated.", syntax: "controlName ctrlSetPosition [x, y]", returns: "[x, y]: Array", example: "_control2D ctrlSetPosition [0, 0]; _control2D ctrlCommit 0;", game: "Armed Assault", version: 1 },
    { id: 453, name: "ctrlSetScale", description: "Sets wanted scale for control animation. Top left corner remains same. This command requires ctrlCommit.", syntax: "control ctrlSetScale scale", returns: "scale: Number", example: "_control ctrlSetScale 0.5; _control ctrlCommit 0;", game: "Armed Assault", version: 1 },
    { id: 454, name: "ctrlSetStructuredText", description: "Set the structured text which will be displayed in structured text control.", syntax: "control ctrlSetStructuredText structuredText", returns: "structuredText: Structured Text", example: "_control ctrlSetStructuredText parseText 'First line<img image=data\isniper.paa /><br />Second line'", game: "Armed Assault", version: 1 },
    { id: 455, name: "ctrlSetText", description: "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path.  Read Dialog Control for more information about user dialogs and controls.", syntax: "ctrlSetText [idc, text]", returns: "idc: Integer - control ID", example: "null", game: "Operation Flashpoint", version: 1.5 },
    { id: 456, name: "ctrlSetTextColor", description: "Sets text color of given control. Color is in format Color. As of Arma 3 v1.40 this command could also be used to change fill colour or the DialogControls-ProgressBar.", syntax: "display ctrlSetTextColor color", returns: "color: Array", example: "_control ctrlSetTextColor [1, 0, 0, 1]", game: "Armed Assault", version: 1 },
    { id: 457, name: "ctrlSetTooltip", description: "Sets tooltip text of given control.", syntax: "control ctrlSetTooltip text", returns: "text: String", example: "_control ctrlSetTooltip 'tooltip';", game: "Armed Assault", version: 1 },
    { id: 458, name: "ctrlSetTooltipColorBox", description: "Sets tooltip border color of given control. Color is in format Color.", syntax: "control ctrlSetTooltipColorBox color", returns: "color: Array", example: "_control ctrlSetTooltipColorBox [1, 0, 0, 1];", game: "Armed Assault", version: 1 },
    { id: 459, name: "ctrlSetTooltipColorShade", description: "Sets tooltip background color of given control. Color is in format Color.", syntax: "control ctrlSetTooltipColorShade color", returns: "color: Array", example: "_control ctrlSetTooltipColorShade [1, 0, 0, 1];", game: "Armed Assault", version: 1 },
    { id: 460, name: "ctrlSetTooltipColorText", description: "Sets tooltip text color of given control. Color is in format Color.", syntax: "display ctrlSetTooltipColorText color", returns: "color: Array", example: "_control ctrlSetTooltipColorText [1, 0, 0, 1]", game: "Armed Assault", version: 1 },
    { id: 461, name: "ctrlShow", description: "Set if a control of the currently active user dialog is shown or not.  Read Dialog Control for more information about user dialogs and controls.", syntax: "ctrlShow [idc, show]", returns: "idc: Integer - control ID", example: "ctrlShow [100, false ];", game: "Operation Flashpoint", version: 1.5 },
    { id: 462, name: "ctrlShown", description: "Returns whether given control is shown.", syntax: "Boolean = ctrlShown controlName", returns: "Boolean", example: "_bool = ctrlShown _ctrl;", game: "Armed Assault", version: 1 },
    { id: 463, name: "ctrlText", description: "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path.  Read Dialog Control for more information about user dialogs and controls.", syntax: "String =  ctrlText idc", returns: "String - The text or image path is returned, dependent on the control type.", example: "null", game: "Operation Flashpoint", version: 1.5 },
    { id: 464, name: "ctrlTextHeight", description: "Returns the control text height. Supported control types are:  CT_STATIC 0  CT_EDIT 2        (Since Arma 3 v1.57.135040)  CT_STRUCTURED_TEXT 13", syntax: "ctrlTextHeight control", returns: "Number", example: "_h = ctrlTextHeight _ctrl;", game: "Arma 3", version: 0.5 },
    { id: 465, name: "ctrlType", description: "Returns number representing the type of control, which is also defined by type property in config. For more information see Dialog Control", syntax: "ctrlType control", returns: "Number", example: "_type = ctrlType _rscEdit; // 2", game: "Armed Assault", version: 1 },
    { id: 466, name: "ctrlVisible", description: "Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.", syntax: "Boolean = ctrlVisible idc", returns: "Boolean - true if the control is shown, false if not", example: "_bool = ctrlVisible 100;", game: "Operation Flashpoint", version: 1.5 },
    { id: 467, name: "ctRowControls", description: "Returns array of controls on the row with the given index.", syntax: "Array = Control ctRowControls Number", returns: "Array", example: "_array = _control ctRowControls 0;", game: "Arma 3", version: 1.7 },
    { id: 468, name: "ctRowCount", description: "Returns number of rows (headers not included) in the RscControlsTable.", syntax: "Number = ctRowCount Control", returns: "Number", example: "ctRowCount _control;", game: "Arma 3", version: 1.7 },
    { id: 469, name: "ctSetCurSel", description: "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.", syntax: "Control ctSetCurSel Number", returns: "index: Number", example: "_control ctSetCurSel 0;", game: "Arma 3", version: 1.7 },
    { id: 470, name: "ctSetData", description: "Associates metadata (string) with the row determined by the index. Returns Nothing.", syntax: "Control ctSetData [[[Number]], String]", returns: "data: String", example: "_control ctSetData [0, 'Test'];", game: "Arma 3", version: 1.7 },
    { id: 471, name: "ctSetHeaderTemplate", description: "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.", syntax: "Control ctSetHeaderTemplate Config", returns: "config: Config", example: "_control ctSetHeaderTemplate _configPath;", game: "Arma 3", version: 1.7 },
    { id: 472, name: "ctSetRowTemplate", description: "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).", syntax: "Control ctSetRowTemplate Config", returns: "config: Config", example: "_control ctSetRowTemplate _configPath;", game: "Arma 3", version: 1.7 },
    { id: 473, name: "ctSetValue", description: "Associates metadata (number) with the row determined by the index. Returns Nothing.", syntax: "Control ctSetValue Number", returns: "index: Number", example: "_control ctSetValue 0;", game: "Arma 3", version: 1.7 },
    { id: 474, name: "ctValue", description: "Returns metadata (number) associated with a particular row of RscControlsTable.", syntax: "Number = ctValue Control", returns: "Number", example: "_number = ctValue _control;", game: "Arma 3", version: 1.7 },
    { id: 475, name: "curatorAddons", description: "Returns list of addons allowed to given curator.", syntax: "curatorAddons curatorObj", returns: "Array", example: "_addons = curatorAddons myCurator;", game: "Arma 3", version: 1.16 },
    { id: 476, name: "curatorCamera", description: "Returns curator camera object.", syntax: "curatorCamera", returns: "null", example: "null", game: "Arma 3", version: 1.16 },
    { id: 477, name: "curatorCameraArea", description: "Returns all curator camera areas.", syntax: "curatorCameraArea curatorObj", returns: "Array", example: "_camArea = curatorCameraArea myCurator;", game: "Arma 3", version: 1.16 },
    { id: 478, name: "curatorCameraAreaCeiling", description: "Returns ceiling height for curator camera.", syntax: "curatorCameraAreaCeiling curatorObj", returns: "Number", example: "curatorCameraAreCeiling BIS_curatorUnit;", game: "Arma 3", version: 1.16 },
    { id: 479, name: "curatorCoef", description: "Returns current coeficient setting.", syntax: "curatorObj curatorCoef action", returns: "action: String", example: "curatorModule curatorCoef 'Place'", game: "Arma 3", version: 1.16 },
    { id: 480, name: "curatorEditableObjects", description: "Returns all editable objects which belong to a curator.", syntax: "curatorEditableObjects curatorObj", returns: "Array", example: "_objects = curatorEditableObjects myCurator;", game: "Arma 3", version: 1.16 },
    { id: 481, name: "curatorEditingArea", description: "Returns all curator editing areas.", syntax: "curatorEditingArea curatorObj", returns: "Array", example: "_editingArea = curatorEditingArea myCurator;", game: "Arma 3", version: 1.16 },
    { id: 482, name: "curatorEditingAreaType", description: "Returns type of edit areas assigned to curator (blacklist/whitelist).", syntax: "curatorEditingAreaType obj", returns: "Boolean", example: "null", game: "Arma 3", version: 1.16 },
    { id: 483, name: "curatorMouseOver", description: "Returns Curator Editable Object under curator mouse pointer in form of array:   [] - when not in curator mode   [''] - if no curator editable object under the pointer in curator mode   [typeName, Curator Editable Object] - if there is curator editable object under the pointer in curator mode", syntax: "curatorMouseOver", returns: "null", example: "_mouseOver = curatorMouseOver;", game: "Arma 3", version: 1.16 },
    { id: 484, name: "curatorPoints", description: "Returns number of points that curator have. Points can be only in range from 0 to 1.", syntax: "curatorPoints curatorObj", returns: "Number", example: "_points = curatorPoints myCurator;", game: "Arma 3", version: 1.16 },
    { id: 485, name: "curatorRegisteredObjects", description: "Returns array with all objects that has curator registered and their settings.", syntax: "curatorRegisteredObjects curatorObj", returns: "Array", example: "null", game: "Arma 3", version: 1.16 },
    { id: 486, name: "curatorSelected", description: "Returns list of all curator selected items.", syntax: "curatorSelected", returns: "null", example: "selectedItems = curatorSelected;", game: "Arma 3", version: 1.16 },
    { id: 487, name: "curatorWaypointCost", description: "Return current price for placing waypoints (curator specific).", syntax: "curatorWaypointCost curatorObj", returns: "Number", example: "null", game: "Arma 3", version: 1.16 },
    { id: 488, name: "current3DENOperation", description: "Returns the currently performed editing operation in Eden Editor.", syntax: "current3DENOperation", returns: "null", example: "if (current3DENOperation == 'Move') then {hint 'Moving';};", game: "Arma 3", version: 1.56 },
    { id: 489, name: "currentChannel", description: "Returns currently selected user chat channel on the UI (selected with < and > in MP). Correspondence between channel and number:  0 = Global  1 = Side  2 = Command  3 = Group  4 = Vehicle  5 = Direct  6-15 = Custom Radio (see radioChannelCreate)", syntax: "currentChannel", returns: "null", example: "_selected = currentChannel; // 3 - for example for the Group", game: "Arma 3", version: 1.42 },
    { id: 490, name: "currentCommand", description: "Return the current command type (empty string when no command) for the commander of given vehicle (or for a given soldier). Value returned can be one of:  'WAIT', 'ATTACK', 'HIDE', 'MOVE', 'HEAL', 'REPAIR', 'REFUEL', 'REARM', 'SUPPORT', 'JOIN', 'GET IN', 'FIRE', 'GET OUT', 'STOP', 'EXPECT', 'ACTION', 'ATTACKFIRE',", syntax: "String = currentCommand vehicleName", returns: "String", example: "null", game: "Armed Assault", version: 1 },
    { id: 491, name: "currentMagazine", description: "Returns class name of currently loaded vehicle's magazine.", syntax: "currentMagazine vehicle", returns: "String", example: "_magazineClass = currentMagazine player;//Example: '30Rnd_545x39_AK'", game: "Arma 2", version: 1 },
    { id: 492, name: "currentMagazineDetail", description: "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.", syntax: "currentMagazineDetail vehicle", returns: "String", example: "_currentMagazineDetail = currentMagazineDetail player; //'6.5mm 30Rnd STANAG Mag(30/30)[id:0]'", game: "Arma 3", version: 0.5 },
    { id: 493, name: "currentMagazineDetailTurret", description: "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return ''.", syntax: "vehicle currentMagazineDetailTurret [turret path]", returns: "[turret path]: Array", example: "_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];", game: "Arma 3", version: 1.12 },
    { id: 494, name: "currentMagazineTurret", description: "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return ''.", syntax: "vehicle currentMagazineTurret [turret path]", returns: "[turret path]: Array", example: "_magazine = MBT_Kuma currentMagazineTurret [0];", game: "Arma 3", version: 1.12 },
    { id: 495, name: "currentMuzzle", description: "Returns current muzzle of unit's weapon.          This command will return 0 Number if given object is a vehicle instead of a person.", syntax: "currentMuzzle gunner", returns: "String - current muzzle", example: "_muzzle = currentMuzzle player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 496, name: "currentNamespace", description: "Returns current global namespace the script runs in.", syntax: "currentNamespace", returns: "null", example: "if (currentNamespace isEqualTo uiNamespace) then {hint 'This is uiNamespace'};", game: "Arma 3", version: 1.48 },
    { id: 497, name: "currentTask", description: "Return current task of given person.", syntax: "currentTask person", returns: "Task", example: "null", game: "Arma 2", version: 1 },
    { id: 498, name: "currentTasks", description: "List all uncompleted tasks.", syntax: "currentTasks member", returns: "Array", example: "_playerTasks = currentTasks teamMember player", game: "Arma 2", version: 1 },
    { id: 499, name: "currentThrowable", description: "Returns currently selected throwable, which will be launched if user presses 'G'.   Please note: The weapon/magazine id system is W.I.P. and may change without notice.", syntax: "currentThrowable player", returns: "Array in format [<magazineClassName>, <muzzleClassName>, [<magazineId>, <creatorId>]]", example: "currentThrowable player; //['SmokeShellGreen','SmokeShellGreenMuzzle',[1.00002e+007,0]]", game: "Arma 3", version: 1.48 },
    { id: 500, name: "currentVisionMode", description: "Returns current vision mode of unit's weapon.   0 - daytime  1 - night vision  2 - thermal vision", syntax: "currentVisionMode unit", returns: "Number", example: "_currMode = currentVisionMode gunner _tank", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 501, name: "currentWaypoint", description: "Return the index of the current waypoint.  To determine the validity of the index, compare it to the waypoints count.  If all waypoints are 'completed', then the index is 1 greater than the last valid index.  If there are no waypoints, then the index is 0.  By default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.", syntax: "currentWaypoint groupName", returns: "Number", example: "_index = currentWaypoint group player;", game: "Arma 2", version: 1 },
    { id: 502, name: "currentWeapon", description: "Return the name of the currently selected weapon (on the primary turret for vehicles).", syntax: "currentWeapon vehicle", returns: "String", example: "null", game: "Arma 2", version: 1 },
    { id: 503, name: "currentWeaponMode", description: "Returns current weapon mode of unit's weapon. Result can be: 'Single', 'Burst', 'FullAuto', 'manual', 'player'          This command will return 0 Number if given object is a vehicle instead of a person.", syntax: "currentWeaponMode gunner", returns: "String", example: "_weaponMode = currentWeaponMode player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 504, name: "currentWeaponTurret", description: "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.", syntax: "vehicle currentWeaponTurret [turret path]", returns: "[turret path]: Array", example: "_weapon = MBT_Kuma currentWeaponTurret [0];", game: "Arma 3", version: 1.12 },
    { id: 505, name: "currentZeroing", description: "Returns zeroing of unit's weapon.", syntax: "currentZeroing gunner", returns: "Number", example: "_zeroing = currentZeroing player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 506, name: "cursorObject", description: "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.", syntax: "cursorObject", returns: "null", example: "hint str [getModelInfo cursorObject, typeOf cursorObject];", game: "Arma 3", version: 1.56 },
    { id: 507, name: "cursorTarget", description: "Returns the target pointed at by the player (usually with cross-hairs). The target has to be known to the player to some degree (knowsAbout > 0). If target is completely unknown, command returns objNull.   A valid target could belong to an enemy or a friendly side. Buildings are normally known to player and so are valid targets. Try nearTargets to see what else is considered a target. While friendly targets are usually known to the player, enemy targets can be totally unknown, especially if 'auto-spotting' (or sometimes called 'auto-reporting') is switched off. To check if auto-spotting is enabled:difficultyEnabled 'autospot'   cursorTarget also returns locked target for the duration of the lock even if there is another target under the cursor. As soon as missile is fired, cursorTarget switches to current known target under cursor or objNull. Targeting (currently 'T' in Arma 3) works regardless of the state of 'auto-spotting'.   Adding a target to the known list could be done with reveal command. When auto-spotting is enabled, zooming on the enemy target with cross-hairs usually reveals the target. As friendly targets are always known, zooming on friendly target could improve knowsAbout value.   Side relations can also influence target knowledge. For example east target is unknown target for civilian, but making them friends with setFriend instantly improves civilian knowledge of the east.", syntax: "cursorTarget", returns: "Posted on 11 March 2011", example: "alive cursorTarget;", game: "Arma 2", version: 1 },
    { id: 508, name: "customChat", description: "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.", syntax: "unit customChat [channel, message]", returns: "[channel, message]: Array", example: "_unit customChat [1, 'Hi, I am a custom chat message'];", game: "Arma 3", version: 0.5 },
    { id: 509, name: "customRadio", description: "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.", syntax: "unit customRadio [channel, message]", returns: "[channel, message]: Array", example: "_soldierOne customRadio [1, 'WordEnemy'];", game: "Arma 3", version: 0.5 },
    { id: 510, name: "cutFadeOut", description: "Terminates the effect in the given layer by fading it out according to the given duration. If named layer used and it doesn't exist, it will be allocated.           For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673", syntax: "layer cutFadeOut duration", returns: "duration: Number", example: "0 cutFadeOut 2;", game: "Armed Assault", version: 1.05 },
    { id: 511, name: "cutObj", description: "Displays an object defined in the global config in CfgTitles.           For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673", syntax: "cutObj [class, type, speed, showOnMap]", returns: "class: String - the className of the object", example: "cutObj ['TVSet', 'PLAIN']; cutObj ['TVSet', 'PLAIN', 2]", game: "Operation Flashpoint", version: 1 },
    { id: 512, name: "cutRsc", description: "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.           For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673", syntax: "cutRsc [class, type, speed, showOnMap]", returns: "class: String - the class name of the resource. ('Default' will remove the current resource.)", example: "cutRsc ['binocular', 'PLAIN']; cutRsc ['binocular', 'PLAIN', 2]; cutRsc ['binocular', 'PLAIN', 2, false];", game: "Operation Flashpoint", version: 1 },
    { id: 513, name: "cutText", description: "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using '\n' new line characters: cutText ['line1\nline2\nline3', 'PLAIN'];           For greater efficiency and ease of modability it is recommended to use named layers available with alternative syntax since Arma 3 v1.57.134673", syntax: "cutText [text, type, speed, showOnMap]", returns: "text: String - text to be displayed", example: "cutText ['','BLACK OUT']; cutText ['Hello World!','PLAIN',2];", game: "Operation Flashpoint", version: 1 },
    { id: 514, name: "damage", description: "Return the damage value of an object.", syntax: "Number = damage object", returns: "Number -   The returned number is in range 0 (healthy) to 1 (dead).", example: "? ((damage player)>0.1) : player groupChat 'I'm hurt! Medic!'", game: "Operation Flashpoint", version: 1.5 },
    { id: 515, name: "date", description: "Return the actual mission date and time as an array [year, month, day, hour, minute]. Month is a full number between 1 and 12, day is between 1 and 31, hour is between 0 and 23 and minute is between 0 and 59.", syntax: "date", returns: "null", example: "[year, month, day, hour, minute]", game: "Armed Assault", version: 1 },
    { id: 516, name: "dateToNumber", description: "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st  23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274    This is how this command works. The 365 days of the year are presented in range 0...1. So each day will be:  1 / 365 =  0.00273973   In a leap year there are 366 days, so the range will increase by 1 day:  1 / 365  *  366 = 1.00274  In short, in a normal year the command returns in range 0...1 in a leap year it will return in range 0...1.00274", syntax: "dateToNumber date", returns: "Number", example: "_float = dateToNumber [2035,7,6,12,0]; //0.510959", game: "Arma 2", version: 1 },
    { id: 517, name: "daytime", description: "Returns the current ingame time in hours.", syntax: "Number = daytime", returns: "null", example: "//daytime = 1.66046 _hour = floor daytime; _minute = floor ((daytime - _hour) * 60); _second = floor (((((daytime) - (_hour))*60) - _minute)*60); _time24 = text format ['%1:%2:%3',_hour,_minute,_second]; //_time24 = 1:39:37", game: "Operation Flashpoint", version: 1 },
    { id: 518, name: "deActivateKey", description: "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns.  See keys, keysLimit and doneKeys in the description.ext file of the missions.", syntax: "deActivateKey keyname", returns: "Nothing", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 519, name: "debriefingText", description: "Returns debriefing text.", syntax: "debriefingText end", returns: "String", example: "_deathText = debriefingText 'endDeath';", game: "Arma 3", version: 0.5 },
    { id: 520, name: "debugFSM", description: "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.         Non functional in retail", syntax: "FSMhandle debugFSM true", returns: "true: Boolean", example: "null", game: "Arma 2", version: 1.05 },
    { id: 521, name: "debugLog", description: "Dump argument type and value to debugging output.           This command is non-functional in the retail version", syntax: "debugLog anything", returns: "Nothing", example: "debugLog player", game: "Operation Flashpoint", version: 1 },
    { id: 522, name: "default", description: "See switch do.", syntax: "default a", returns: "Nothing", example: "switch (_condition) do {     case 1: { hint '1' };     case 2: { hint '2' };     default { hint 'default' }; };", game: "Armed Assault", version: 1 },
    { id: 523, name: "deg", description: "Convert a number from Radians to Degrees.", syntax: "Number = deg x", returns: "Number", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 524, name: "delete3DENEntities", description: "Delete given entities in Eden Editor, including anything that can be placed in editor.", syntax: "delete3DENEntities entities", returns: "Nothing", example: "delete3DENEntities (all3DENEntities select 0); // removes all objects", game: "Arma 3", version: 1.56 },
    { id: 525, name: "deleteAt", description: "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find command (see Example 2)", syntax: "array deleteAt index", returns: "index: Number", example: "_arr = [1,2,3]; _rem = _arr deleteAt 1; hint str [_rem, _arr]; //[2,[1,3]]", game: "Arma 3", version: 1.32 },
    { id: 526, name: "deleteCenter", description: "In a nutshell, this command removes gaming Side (see createCenter). If a side has >0 Groups it cannot be deleted. Center can only be created for: east, west, resistance, civilian and sideLogic, therefore only centers from the mentioned sides can be deleted.   Old description: Destroys the AI center of the given side.", syntax: "deleteCenter side", returns: "Nothing", example: "deleteCenter east", game: "Armed Assault", version: 1 },
    { id: 527, name: "deleteCollection", description: "Delete a collection. As example, used with a soldier, it'll hide the ingame model.  When targetting ArmA 2 1.06 or newer, use hideObject instead. This function is a relic from dynamic building destruction development. It is left only for compatibility with scripts created before ArmA 2 1.06, and its functionality may be changed or removed in the future.", syntax: "deleteCollection object", returns: "Nothing", example: "deleteCollection unitName;", game: "Armed Assault", version: 1 },
    { id: 528, name: "deleteEditorObject", description: "Delete the editor object. Requires all editor object links to be removed prior.", syntax: "map deleteEditorObject object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 529, name: "deleteGroup", description: "Destroys the given group. Group must be empty and local to the machine executing command.   NOTE: In Arma 3 you can find out locality of the group with local command, unlike with previous games. However owner and setOwner dont work with groups anywhere. The group will always be local to the client that created it, until the client disconnects, then the group becomes local to the server.          In Arma 3 when last unit leaves a group, the group gets auto deleted. Manually deleting all units from a group however, does not auto delete the empty group. To force the group to get auto-deleted when empty use deleteGroupWhenEmpty", syntax: "deleteGroup group", returns: "Nothing", example: "deleteGroup _groupname", game: "Armed Assault", version: 1 },
    { id: 530, name: "deleteGroupWhenEmpty", description: "Marks given group for auto-deletion when group is empty. true will mark the group for auto-deletion, however false will only unmark the group that was marked previously. There are other engine group auto-deletion mechanisms in place, which are not affected by this.   NOTE: It might take up to a minute for the groups marked for auto-deletion when empty to get deleted when they become empty.", syntax: "group deleteGroupWhenEmpty delete", returns: "delete: Boolean - true to mark for auto-deletion", example: "_group deleteGroupWhenEmpty true;", game: "Arma 3", version: 1.68 },
    { id: 531, name: "deleteIdentity", description: "Delete an identity (created with saveIdentity) from the campaign's progress file.", syntax: "Boolean = deleteIdentity identityName", returns: "Boolean -   true if the identy was deleted successfully, false if not", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 532, name: "deleteLocation", description: "Delete a location.", syntax: "deleteLocation location", returns: "Nothing", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 533, name: "deleteMarker", description: "Destroys the given marker.", syntax: "deleteMarker name", returns: "Nothing", example: "deleteMarker 'Marker1'", game: "Armed Assault", version: 1 },
    { id: 534, name: "deleteMarkerLocal", description: "Destroys the given marker.", syntax: "deleteMarkerLocal markerName", returns: "Nothing", example: "deleteMarkerLocal 'Marker1'", game: "Armed Assault", version: 1.04 },
    { id: 535, name: "deleteRange", description: "Removes a range of array elements from the given array (modifies the original array, just like resize or set).", syntax: "array deleteRange [from, count]", returns: "[from, count]: Array", example: "_arr = [1,2,3,4,5,6]; _arr deleteRange [1,4]; hint str _arr; //[1,6]", game: "Arma 3", version: 1.32 },
    { id: 536, name: "deleteResources", description: "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.", syntax: "teamMember deleteResources [resource1, resource2,...]", returns: "resource1: String", example: "teamMember _agent deleteResources ['Legs'];", game: "Arma 2", version: 1 },
    { id: 537, name: "deleteSite", description: "Removes the site.          This command is considered deprecated and is no longer supported", syntax: "deleteSite site", returns: "Nothing", example: "null", game: "Arma 3", version: 0.5 },
    { id: 538, name: "deleteStatus", description: "Delete a status (created with saveStatus) from the campaign's progress file.", syntax: "Boolean = deleteStatus statusName", returns: "Boolean -   true if the status was deleted successfully, false if not", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 539, name: "deleteTeam", description: "Destroy given team.", syntax: "deleteTeam team", returns: "Nothing", example: "deleteTeam _team;", game: "Arma 2", version: 1 },
    { id: 540, name: "deleteVehicle", description: "Deletes an object. Only units inserted in the mission editor and units created during the game's progress can be deleted by this command. Island objects and player units cannot be removed. Deleting a vehicle, which is still being accessed by a running script, can result in a CTD.   NOTE: Actual object deletion, when object becomes objNull, happens on the next frame after command execution, but there are some object modifications that happen immediately. For example if the object is unit in a group, it immediately becomes groupless isNull group _unit; //true", syntax: "deleteVehicle object", returns: "Nothing", example: "deleteVehicle _house1;", game: "Operation Flashpoint", version: 1.34 },
    { id: 541, name: "deleteVehicleCrew", description: "Deletes a member of the crew of a vehicle. Human players cannot be deleted.", syntax: "vehicle deleteVehicleCrew unit", returns: "unit: Object", example: "heli deleteVehicleCrew driver heli;", game: "Arma 3", version: 1.32 },
    { id: 542, name: "deleteWaypoint", description: "Removes the specified waypoint.", syntax: "deleteWaypoint [group, index]", returns: "group: Group", example: "deleteWaypoint [_grp, 2]", game: "Armed Assault", version: 1 },
    { id: 543, name: "detach", description: "Detaches previously attached with attachTo object.", syntax: "detach object", returns: "Nothing", example: "obj1 attachTo [player]; detach obj1;", game: "Arma 2", version: 1 },
    { id: 544, name: "detectedMines", description: "Returns an array of all mines detected by a given side", syntax: "detectedMines side", returns: "Array", example: "detectedMines west;", game: "Arma 3", version: 1.24 },
    { id: 545, name: "diag_activeMissionFSMs", description: "Returns array with active Mission FSMs.", syntax: "diag_activeMissionFSMs", returns: "null", example: "{systemChat str _x} forEach diag_activeMissionFSMs;", game: "Arma 3", version: 1.44 },
    { id: 546, name: "diag_activeScripts", description: "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]", syntax: "diag_activeScripts", returns: "null", example: "hint str diag_activeScripts; //[0,0,0,1]", game: "Arma 3", version: 1.64 },
    { id: 547, name: "diag_activeSQFScripts", description: "Returns an array with active SQFs.", syntax: "diag_activeSQFScripts", returns: "null", example: "{systemChat str _x} forEach diag_activeSQFScripts;", game: "Arma 3", version: 1.44 },
    { id: 548, name: "diag_activeSQSScripts", description: "Returns array with active SQSs.", syntax: "diag_activeSQSScripts", returns: "null", example: "{systemChat str _x} forEach diag_activeSQSScripts;", game: "Arma 3", version: 1.44 },
    { id: 549, name: "diag_captureFrame", description: "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.  This can also be executed on a dedicated Server and because a Server has no UI it will behave like diag_captureFrameToFile.  Special: BattlEye's RCON variant of this command is #captureFrame   Note: Only available in specific builds. See Performance Profiling for details.", syntax: "diag_captureFrame frame", returns: "Nothing", example: "diag_captureFrame 1; //capture the first frame after command execution", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 550, name: "diag_captureFrameToFile", description: "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and  written to a log file in the same directory as the .rpt file.  The full Path to the log file is logged to simultaneously.  The data in the log file can be copied and pasted into the diag_captureFrame UI dialog to get a visualisation later on.  Note: Only available in specific builds. See Performance Profiling for details.", syntax: "diag_captureFrameToFile frame", returns: "Nothing", example: "diag_captureFrameToFile 1; //capture the first frame after command execution", game: "Arma 3", version: 1.16 },
    { id: 551, name: "diag_captureSlowFrame", description: "Opens 'capture frame' dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections: Render   - bgD3D  Main Thread   - total   - memAl  Visualize   - visul  Mjob   - Mjob Note: Only available in specific builds. See Performance Profiling for details.", syntax: "diag_captureSlowFrame [section, threshold]", returns: "threshold: Number - Duration of the section in seconds", example: "diag_captureSlowFrame ['total',0.003];", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 552, name: "diag_codePerformance", description: "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance   NOTE: For security purposes, this command will only run for 1 cycle in MP, unless in-game debug console is available via description.ext option or Eden attribute setting.", syntax: "diag_codePerformance [code, arguments, cycles]", returns: "code: Code - code to compare performance", example: "_result = diag_codePerformance [{private _a = 123;}, 0, 10000];", game: "Arma 3", version: 1.58 },
    { id: 553, name: "diag_drawMode", description: "Activates specific debug visualization.         Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.", syntax: "diag_drawMode type", returns: "Nothing", example: "diag_drawMode 'normal'", game: "Arma 3 Development Branch", version: 1 },
    { id: 554, name: "diag_enable", description: "Used to enable/disabled various diagnostics.      Only available in the Arma 3 Diagnostic exe", syntax: "diag_mode diag_enable state", returns: "Boolean: state: true to enable diag mode, false to disable it", example: "All' diag_enable true", game: "Arma 3", version: 1 },
    { id: 555, name: "diag_enabled", description: "Checks whether specific diagnostic mode is activated.      Only available in the Arma 3 Diagnostic exe", syntax: "diag_enabled diag_mode", returns: "Boolean - true when enabled, false when disabled", example: "Animation' diag_enable true; diag_enabled 'Animation';//returns true", game: "Arma 3", version: 1 },
    { id: 556, name: "diag_fps", description: "Returns average framerate calculated over last 16 frames.", syntax: "diag_fps", returns: "null", example: "diag_log diag_fps;", game: "Arma 2", version: 1 },
    { id: 557, name: "diag_fpsMin", description: "Returns minimal framerate. Calculated from the longest frame over last 16 frames.", syntax: "diag_fpsMin", returns: "null", example: "_minfps = diag_fpsMin;", game: "Arma 2", version: 1 },
    { id: 558, name: "diag_frameNo", description: "Returns number of frame currently displayed.", syntax: "diag_frameNo", returns: "null", example: "_currFrameNo = diag_frameNo;", game: "Arma 2", version: 1 },
    { id: 559, name: "diag_list", description: "Returns an array of all diag modes available in the game.         Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.", syntax: "diag_list <toggle/drawMode>", returns: "Array - [listOfAllToggleDiagModes]", example: "diag_list 'toggle';", game: "Arma 3 Development Branch", version: 1 },
    { id: 560, name: "diag_log", description: "Dumps the argument's value to the report file. Each call creates a new line in the file.", syntax: "diag_log anything", returns: "Nothing", example: "diag_log time;", game: "Arma 2", version: 1 },
    { id: 561, name: "diag_logSlowFrame", description: "Log all frames, where section takes longer than the threshold (in seconds).   Note: Only available in specific builds. See Performance Profiling for details.", syntax: "diag_logSlowFrame [section, threshold]", returns: "threshold: Number - Duration of frame in seconds", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 562, name: "diag_mergeConfigFile", description: "Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory). Location is relative to the Userdir (default) or mission directory depending on the the value of UserDir [FileName,UserDir].  Doesn't work with cfgAmmo & few other classes. (Since 1.69, cfgAmmo should be mergeable!) Merging config file means also that you can't delete parameters through diag_mergeConfigFile. Changes applied by diag_mergeConfigFile are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick.         Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.", syntax: "diag_mergeConfigFile ['PathToConfigOnDrive']", returns: "Nothing", example: "diag_mergeConfigFile ['O:\Arma3\A3\Stuff_F\config.cpp']", game: "Arma 3 Development Branch", version: 1 },
    { id: 563, name: "diag_recordTurretLimits", description: "Start recording tool for creating turret aiming limits.         Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.", syntax: "diag_recordTurretLimits true/false", returns: "Nothing", example: "diag_recordTurretLimits true;", game: "Arma 3 Development Branch", version: 1.63 },
    { id: 564, name: "diag_resetShapes", description: "Reload models on-the-fly without the need of restarting the game. Changes applied by diag_resetShapes are applied to all new entities so restart of mission is not necessarily  required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with '-FilePatching' in combination with local data. Command will reload only models present in local data.     Limitation - you can't reload cfgSkeletons (Which is inside model.cfg)         Command is only available when using Arma 3 Diagnostics Exe on Dev-Branch.", syntax: "diag_resetShapes", returns: "null", example: "diag_resetShapes", game: "Arma 3 Development Branch", version: 1.69 },
    { id: 565, name: "diag_tickTime", description: "Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms.", syntax: "diag_tickTime", returns: "Posted on 25 Jan, 2014", example: "_start = diag_tickTime; //code _stop = diag_tickTime; diag_log format ['%1',_stop - _start];", game: "Arma 2", version: 1 },
    { id: 566, name: "diag_toggle", description: "Used to enable/disabled various diagnostics.      Only available in the Arma 3 Diagnostic exe", syntax: "diag_toggle diag_mode", returns: "Nothing", example: "diag_toggle 'Animation';//enable diag_toggle 'Animation';//disable", game: "Arma 3", version: 1 },
    { id: 567, name: "dialog", description: "Tests whether any user dialog is open.", syntax: "Boolean = dialog", returns: "null", example: "if (!dialog) then {createDialog 'Dialog1';};", game: "Operation Flashpoint: Resistance", version: 1.78 },
    { id: 568, name: "diarySubjectExists", description: "Checks whether given subject is present in the diary of given person.", syntax: "person diarySubjectExists name", returns: "name: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 569, name: "didJIP", description: "Checks if the current client Joined In Progress.", syntax: "didJIP", returns: "null", example: "clientDidJIP = didJIP;", game: "Arma 3", version: 1.5 },
    { id: 570, name: "didJIPOwner", description: "Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false.", syntax: "didJIPOwner object", returns: "Boolean", example: "ownerDidJip = didJIPOwner tank;", game: "Arma 3", version: 1.5 },
    { id: 571, name: "difficulty", description: "Returns high-level selected difficulty mode.     Returned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)", syntax: "difficulty", returns: "null", example: "value = difficulty;", game: "Arma 3", version: 0.56 },
    { id: 572, name: "difficultyEnabled", description: "This command is deprecated since Arma 3 1.58. Since this version it always returns false. Use difficultyOption instead. See Arma 3 Difficulty Overhaul for further details.    Former functionality: Checks specific difficulty settings of the current user. Difficulty flag names can be found in the ArmA profile file under class Difficulties/xxx/Flags (xxx being regular or veteran).    Note: stress damage for some reason is a separate difficulty so difficultyEnabled 'stressDamageEnabled' might not return correct set value. There are however 2 dedicated commands for it:  enableStressDamage  isStressDamageEnabled   Note: auto trim is also for some reason a separate difficulty so difficultyEnabled 'autoTrimEnabled' might not return correct set value. There are also 2 dedicated commands for it:  enableAutoTrimRTD  isAutoTrimOnRTD", syntax: "difficultyEnabled flagName", returns: "Boolean", example: "hint str (difficultyEnabled 'armor');", game: "Armed Assault", version: 1.05 },
    { id: 573, name: "difficultyEnabledRTD", description: "Returns true if rotorlib simulation is enabled. Forcing by mission is included", syntax: "difficultyEnabledRTD", returns: "null", example: "_rtdOn = difficultyEnabledRTD", game: "Arma 3", version: 1.34 },
    { id: 574, name: "difficultyOption", description: "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in  ArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran).   This command replaces difficultyEnabled.", syntax: "difficultyOption optionName", returns: "Number", example: "hint str (difficultyOption 'friendlyTags');", game: "Arma 3", version: 1.58 },
    { id: 575, name: "direction", description: "Returns the direction an object or a location is facing (differs from getDir in that this also works with locations).", syntax: "direction object", returns: "Number -   Direction in degrees, range 0 to 360", example: "player setDir 90; _d = direction player;//returns 90", game: "Operation Flashpoint", version: 1 },
    { id: 576, name: "directSay", description: "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of fadeRadio. The message is defined in CfgRadio in the description.ext file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).    Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit directSay radioName", returns: "radioName: String - class name from CfgRadio", example: "player directSay configName selectRandom ('true' configClasses (configFile >> 'CfgRadio'));", game: "Arma 2", version: 1 },
    { id: 577, name: "disableAI", description: "Disable parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local. If unit changes locality, it might need to be executed again at the new locality to maintain effect.  Possible values are: 'TARGET' - stop the unit to watch the assigned target / group commander may not assign targets 'AUTOTARGET' - prevent the unit from assigning a target independently and watching unknown objects / no automatic target selection 'MOVE' - disable the AI's movement / do not move 'ANIM' - disable ability of AI to change animation. Available only since ArmA: Cold War Assault (OFP 1.99). 'TEAMSWITCH' - AI disabled because of Team Switch 'FSM' - disable the execution of AI behavior scripts. Available only since Operation Arrowhead v1.60. 'AIMINGERROR' - prevents AI's aiming from being distracted by its shooting, moving, turning, reloading, hit, injury, fatigue, suppression or concealed/lost target  Available only since Arma 3 v1.42. 'SUPPRESSION' - prevents AI from being suppressed  Available only since Arma 3 v1.42. 'CHECKVISIBLE' - disables visibility raycasts  Available only since Arma 3 v1.54. 'COVER' - disables usage of cover positions by the AI  Available only since Arma 3 v1.56. 'AUTOCOMBAT' - disables autonomous switching to COMBAT when in danger Available only since Arma 3 v1.56. 'PATH' - stops the AI’s movement but not the target alignment Available only since Arma 3 v1.61. 'ALL' - all of the above Available since Arma 3 v1.65  Note: In OFP is no way to undo this command.", syntax: "unitName disableAI section", returns: "section: String", example: "_soldier1 disableAI 'AUTOTARGET';", game: "Operation Flashpoint", version: 1 },
    { id: 578, name: "disableCollisionWith", description: "Disable collision between vehicles. This commmand doesn't disable collision between PhysX objects.        !   Command has to be executed where objects are local, and as long as they don't change locality, the effect of this command will be global. If the 2 objects are not local to the same computer, then it has to be executed on both computers to achieve the desired effect. If one or both objects change locality, the command needs to be executed again on the new owner's machine(s) to maintain the effect.", syntax: "vehicle disableCollisionWith vehicle", returns: "vehicle: Object", example: "//name of unit in editor such as player1 //name of object in editor such as barrel1  barrel1 disableCollisionWith player1;  //to make the barrel solid again, do this as vice versa if you know what your doing!  barrel1 enableCollisionWith player1", game: "Arma 3", version: 0.5 },
    { id: 579, name: "disableConversation", description: "Disable the ability to talk to other people.", syntax: "unitName disableConversation disable", returns: "disable: Boolean", example: "player disableConversation true", game: "Arma 2", version: 1 },
    { id: 580, name: "disableDebriefingStats", description: "Disable debrifing score table.", syntax: "disableDebriefingStats", returns: "null", example: "disableDebriefingStats;", game: "Arma 3", version: 1 },
    { id: 581, name: "disableNVGEquipment", description: "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.", syntax: "vehicle disableNVGEquipment state", returns: "state: Boolean", example: "myTank disableNVGEquipment true;", game: "Arma 3", version: 1.52 },
    { id: 582, name: "disableRemoteSensors", description: "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. If a group contains a single local entity then calculations will still be performed for the entire group.    These raycasts are used to determine what other entities an entity can see, and they take a lot of CPU time. This is of course a bit of a trick, because rather than a true optimization, it disables part of the simulation. However, there are certainly types of scenarios where these raycasts are not needed. An example is a fully Player-versus-Player scenario, where the visibility between every combination of player entity is not needed. So why not disable this by default? There are cases where you do require these raycasts, for example in stealth scenarios. Without them, commands like knowsAbout, nearTargets and targetKnowledge will only function for local units! The commands themselves are local, can be used on servers and clients, and the state is reset when the scenario ends. So, carefully consider whether your scenario can benefit from this method.", syntax: "disableRemoteSensors state", returns: "Nothing", example: "disableRemoteSensors false;", game: "Arma 3", version: 1.52 },
    { id: 583, name: "disableSerialization", description: "Disable saving of script containing this command. After this script can work with the data types which do not support serialization (UI types).    NOTE: When using spawn command, if the argument passed to it is Display or Control, an error will show asking to consider to disable serialization because of use of _this variable. What's more neither disableSerialization no use of uiNamespace will solve this. Passing Display or Control as part of an array however, will do the job:    findDisplay 46 spawn {hint str _this}; // serialization error  [findDisplay 46] spawn {hint str (_this select 0)}; // OK", syntax: "disableSerialization", returns: "Posted on 23 October, 2013", example: "findDisplay 46 spawn {hint str _this}; // serialization error  [findDisplay 46] spawn {hint str (_this select 0)}; // OK", game: "Arma 2", version: 1 },
    { id: 584, name: "disableTIEquipment", description: "Disables TI (Thermal Imaging) equipment for given vehicle. In older versions of Arma this command would also disable NV (Night Vision), but since Arma 3 v1.52.132676 this command disables only TI. Use disableNVGEquipment to disable NV.", syntax: "vehicle disableTIEquipment state", returns: "state: Boolean - true to turn TI off, false to turn TI on", example: "vehicle player disableTIEquipment true;", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 585, name: "disableUAVConnectability", description: "Disables unit's AV terminal(s) connecting to UAV.", syntax: "object disableUAVConnectability [uav, checkAllItems]", returns: "[uav, checkAllItems]: Array", example: "unit disableUAVConnectability [uav,true];", game: "Arma 3", version: 1.24 },
    { id: 586, name: "disableUserInput", description: "Disable and enable the keyboard and mouse input, usually used during cutscenes.    Be careful with the usage of this command, always remember to enable the user input again, as once the user input is disabled, you can only shut down OFP but not exit the mission with escape.", syntax: "disableUserInput state", returns: "Nothing", example: "disableUserInput true; //do something disableUserInput false; disableUserInput true; disableUserInput false;", game: "Operation Flashpoint", version: 1 },
    { id: 587, name: "displayAddEventHandler", description: "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.   Returning true in EH code will override default engine handling for keyboard events.   See User Interface Event Handlers for the full list of event names.   If applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.   NOTE: Display EHs are processed in reversed order, i.e. last added: first, first added: last. So if you have an override it should be set up in the 1st added EH.", syntax: "display displayAddEventHandler [eventName, code]", returns: "[eventName, code]: Array", example: "moduleName_keyDownEHId = (findDisplay 46) displayAddEventHandler ['KeyDown', 'hint str _this;'];", game: "Arma 2", version: 1 },
    { id: 588, name: "displayCtrl", description: "Return child control with specified idc.", syntax: "Control = display displayCtrl idc", returns: "idc: Number", example: "_ChildControl = _ParentDisplay displayCtrl 101;", game: "Armed Assault", version: 1 },
    { id: 589, name: "displayNull", description: "A non-existing Display. To compare non-existent displays use isNull or isEqualTo:  displayNull == displayNull; // false  isNull displayNull; // true  displayNull  isEqualTo displayNull; // true", syntax: "displayNull", returns: "null", example: "!isNull displayNull; // false", game: "Armed Assault", version: 1 },
    { id: 590, name: "displayParent", description: "Returns parent display of the given display.", syntax: "displayParent display", returns: "Display", example: "_display = displayParent findDisplay 49; // Display #46", game: "Arma 3", version: 1.58 },
    { id: 591, name: "displayRemoveAllEventHandlers", description: "Remove all even handlers from the given display.", syntax: "display displayRemoveAllEventHandlers handlerName", returns: "handlerName: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 592, name: "displayRemoveEventHandler", description: "Remove a given event handler from the given display.", syntax: "display displayRemoveEventHandler [handler name,id]", returns: "[handler name,id]: Array -", example: "_myEH = (findDisplay 46) displayAddEventHandler ['KeyDown', 'hint str _this'];", game: "Arma 2", version: 1 },
    { id: 593, name: "displaySetEventHandler", description: "Sets given event handler of given display.  The return code of the provided function should indicate whether this event was handled correctly. This implies telling the engine whether it's default code should be executed.   See User Interface Event Handlers for the full list of handler names.  If applicable, see DIK_KeyCodes for a list of key code constants, which are relevant to key related user interface events like: KeyDown & KeyUp.", syntax: "display displaySetEventHandler [handlerName, function]", returns: "[handlerName, function]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 594, name: "dissolveTeam", description: "Dissolves the given team. All members become members of the main team. Possible team values are: 'RED', 'GREEN', 'BLUE' or 'YELLOW'.", syntax: "dissolveTeam teamColor", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 595, name: "distance", description: "Returns a distance in meters between Objects, Positions or Locations.    NOTE: If positions are supplied as arguments, the coordinates are treated as PositionATL if over the land and as PositionASLW if over the sea. If 2D position is supplied, z is assumed 0.", syntax: "param1 distance param2", returns: "param2: Object or Array in format PositionAGL or Position2D", example: "_meters = player distance _object;", game: "Operation Flashpoint", version: 1 },
    { id: 596, name: "distance2D", description: "Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position.", syntax: "param1 distance2D param2", returns: "param2: Object or Array in format Position or Position2D", example: "_meters = player distance2D heli;", game: "Arma 3", version: 1.5 },
    { id: 597, name: "distanceSqr", description: "Computes the squared distance between two objects or positions.", syntax: "var1 distanceSqr var2", returns: "var2: Object or Position", example: "player distanceSqr (leader player)", game: "Arma 3", version: 0.5 },
    { id: 598, name: "distributionRegion", description: "Returns the numerical index for the distribution region of this copy of ArmA.   1 - US  2 - Rest of the world", syntax: "Number = distributionRegion", returns: "null", example: "null", game: "Armed Assault", version: 1.05 },
    { id: 599, name: "do", description: "Executes code. Used as part of construct, such as while, with, for and switch. The code is always executed in missionNamespace unless do is used with with as an argument.", syntax: "construct do code", returns: "code: Code", example: "while {b > a} do {a = a + 1};", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 600, name: "do3DENAction", description: "Performs given Eden Editor action.    See the list of all actions.", syntax: "do3DENAction action", returns: "Nothing", example: "do3DENAction 'MissionSave';// saves the scenario", game: "Arma 3", version: 1.56 },
    { id: 601, name: "doArtilleryFire", description: "Orders a unit to reload defined magazine commence fire burst on the given position (silently).", syntax: "unit doArtilleryFire [position, type, rounds]", returns: "[position, type, rounds]: Array", example: "mortar1 doArtilleryFire [[3000, 120, 1000], '8Rnd_82mm_Mo_shells', 3];", game: "Arma 3", version: 0.5 },
    { id: 602, name: "doFire", description: "Order the given unit(s) to fire on the given target (without radio messages).  The target is set with doTarget or commandTarget.  The target can be a unit or a vehicle, but not an object.", syntax: "unitName doFire target", returns: "target: Object", example: "_ESoldier1 doFire _WSoldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 603, name: "doFollow", description: "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after doStop, just doFollow leader even if it is the leader himself you want to resume (see Example 2).", syntax: "unitName doFollow unitName2", returns: "unitName2: Object", example: "_soldier1 doFollow _soldier2", game: "Operation Flashpoint", version: 1 },
    { id: 604, name: "doFSM", description: "Orders a unit to process command defined by FSM file (silently).   Unlike with execFSM where _this is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:   _leader  leader of subgroup with this command   _destination  command destination/position  _target  command target   _units  list of all persons in subgroup", syntax: "unit doFSM [fsmName, position, target]", returns: "command target", example: "_soldierOne doFSM ['move.fsm', position player, player];", game: "Armed Assault", version: 1 },
    { id: 605, name: "doGetOut", description: "Orders a unit or units to get out from the vehicle (silently).", syntax: "doGetOut unit(s)", returns: "Nothing", example: "doGetOut _unitOne", game: "Armed Assault", version: 1 },
    { id: 606, name: "doMove", description: "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use doStop to stop units returning to formation.", syntax: "unit(s) doMove position", returns: "position: Array - format Position", example: "_soldier1 doMove (position _officer);", game: "Operation Flashpoint", version: 1 },
    { id: 607, name: "doorPhase", description: "Return animation phase of door on vehicle.", syntax: "object doorPhase door", returns: "door: String", example: "_phase = heli doorPhase 'door_L';", game: "Arma 3", version: 0.5 },
    { id: 608, name: "doStop", description: "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit.   The units will still respond to orders from their group leader (like engage, rearm, board a vehicle), but all of their actions will be separate from the group formation. To resume group default behaviour, use doFollow command. For example: units _group doFollow leader _group;", syntax: "doStop unit(s)", returns: "Nothing", example: "doStop _soldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 609, name: "doSuppressiveFire", description: "Order the given unit to suppress a given position or target (without radio messages).", syntax: "unitName doSuppressiveFire target", returns: "target: Object or Array (Position)", example: "_soldier doSuppressiveFire [1869.508,5760.962,0.000]", game: "Arma 3", version: 1.6 },
    { id: 610, name: "doTarget", description: "Order the given unit(s) to target the given target (without radio messages).", syntax: "unit doTarget target", returns: "target: Object", example: "_ESoldier1 doTarget _WSoldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 611, name: "doWatch", description: "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.", syntax: "unit(s) doWatch position", returns: "position: Array - format Position", example: "_soldierOne doWatch markerPos 'MarkerMoveOne'", game: "Operation Flashpoint", version: 1 },
    { id: 612, name: "drawArrow", description: "Draws a single line arrow on the map.", syntax: "map drawArrow [from, to, color]", returns: "[from, to, color]: Array", example: "findDisplay 12 displayCtrl 51 ctrlAddEventHandler ['Draw',  { 	_this select 0 drawArrow [ 		player, player getRelPos [100, 0], [1,0,0,1] 	]; }];", game: "Armed Assault", version: 1 },
    { id: 613, name: "drawEllipse", description: "Draws an ellipse on the map. Just like with marker or trigger area, negative a and b will result in hexagon.", syntax: "map drawEllipse [c, a, b, angle, color, fill]", returns: "[c, a, b, angle, color, fill]: Array", example: "findDisplay 12 displayCtrl 51 ctrlAddEventHandler ['Draw',  { 	_this select 0 drawEllipse [ 		player, 10, 10, 0, [1, 0, 0, 1], '' 	]; 	_this select 0 drawEllipse [ 		player, -10, -10, 0, [1, 1, 1, 1], '#(rgb,8,8,3)color(1,0.6,0,1)' 	]; 	_this select 0 drawEllipse [ 		player, -10, -10, 90, [0, 0, 1, 1], '' 	]; }];", game: "Armed Assault", version: 1 },
    { id: 614, name: "drawIcon", description: "Draw an icon on the map. The command needs to be called every frame, preferably with 'Draw' control event handler ctrlAddEventHandler.", syntax: "map drawIcon [texture, color, position, width, height, angle, text, shadow, textSize, font, align]", returns: "texture: String", example: "findDisplay 12 displayCtrl 51 ctrlAddEventHandler ['Draw', ' 	_this select 0 drawIcon [ 		'iconStaticMG', 		[1,0,0,1], 		getPos player, 		24, 		24, 		getDir player, 		'Player Vehicle', 		1, 		0.03, 		'TahomaB', 		'right' 	] '];", game: "Armed Assault", version: 1 },
    { id: 615, name: "drawIcon3D", description: "Draws an ingame icon at a given position. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler 'Draw3D'", syntax: "drawIcon3D [texture, color, pos, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows]", returns: "texture: String", example: "onEachFrame { 	drawIcon3D ['targetIcon.paa', [1,1,1,1], getPos cursorTarget, 1, 1, 45, 'Target', 1, 0.05, 'TahomaB']; };", game: "Arma 3", version: 0.5 },
    { id: 616, name: "drawLine", description: "Draw a line on the map.", syntax: "map drawLine [position1, position2, color]", returns: "[position1, position2, color]: Array", example: "(findDisplay 12 displayCtrl 51) ctrlAddEventHandler ['Draw',' 	(_this select 0) drawLine [ 		getPos player, 		[0,0,0], 		[0,0,1,1] 	]; '];", game: "Armed Assault", version: 1 },
    { id: 617, name: "drawLine3D", description: "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler 'Draw3D'.", syntax: "drawLine3D [start, end, color]", returns: "start: PositionAGL", example: "onEachFrame { 	drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]]; };", game: "Arma 3", version: 0.5 },
    { id: 618, name: "drawLink", description: "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW.", syntax: "map drawLink [from,to,param type,line type,color]", returns: "[from,to,param type,line type,color]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 619, name: "drawLocation", description: "Unknown effect.", syntax: "control drawLocation location", returns: "location: Location", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 620, name: "drawPolygon", description: "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points.", syntax: "map drawPolygon [polygon, color]", returns: "[polygon, color]: Array", example: "test_polygon = []; for '_i' from 1 to 12 do  { 	test_polygon pushBack (player getPos [10 + random 100, 360/_i]); }; findDisplay 12 displayCtrl 51 ctrlAddEventHandler ['Draw',  { 	_this select 0 drawPolygon [test_polygon, [0,0,1,1]]; }];", game: "Arma 3", version: 1.58 },
    { id: 621, name: "drawRectangle", description: "Draws a rectangle on the map.", syntax: "map drawRectangle [c, a, b, angle, color, fill]", returns: "[c, a, b, angle, color, fill]: Array", example: "_ctrl drawRectangle [ 	getPos player, 	20, 	20, 	getDir player, 	[0,0,1,1], 	'' ];", game: "Armed Assault", version: 1 },
    { id: 622, name: "driver", description: "Returns the driver of a vehicle.", syntax: "Object = driver vehicle", returns: "Object -   The unit sitting in the driver place is returned. If vehicle is not a vehicle but a person, the person is returned.", example: "(driver _tank) action ['getout', _tank];", game: "Operation Flashpoint", version: 1 },
    { id: 623, name: "drop", description: "Creates a particle effect.  This command is used to create smoke, fire and similar effects.  The particles are single polygons with single textures that always face the player.  They can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind.", syntax: "drop array", returns: "Nothing", example: "drop ['cl_basic', '', 'Billboard', 1, 1, [-3.5*(sin(direction xural)), -3.5*(cos(direction xural)),0], [ random 0.1,random 0.1,random 0.5], 1, 0.005, 0.0042,  0.7, [0.3,3], [[0.5,0.5,0.5,0],[0.7,0.7,0.7,0.5],[0.9,0.9,0.9,0]], [0,1,0,1,0,1],  0.2, 0.2, '', '', xural]", game: "Operation Flashpoint", version: 1.5 },
    { id: 624, name: "dynamicSimulationDistance", description: "A getter for setDynamicSimulationDistance", syntax: "dynamicSimulationDistance category", returns: "Number - activation distance", example: "hint str dynamicSimulationDistance 'Prop';", game: "Arma 3", version: 1.68 },
    { id: 625, name: "dynamicSimulationDistanceCoef", description: "A getter for setDynamicSimulationDistanceCoef", syntax: "dynamicSimulationDistanceCoef class", returns: "Number", example: "hint str dynamicSimulationDistanceCoef 'IsMoving';", game: "Arma 3", version: 1.68 },
    { id: 626, name: "dynamicSimulationEnabled", description: "A getter for enableDynamicSimulation", syntax: "dynamicSimulationEnabled object", returns: "Boolean", example: "hint str dynamicSimulationEnabled _myObject;", game: "Arma 3", version: 1.68 },
    { id: 627, name: "dynamicSimulationSystemEnabled", description: "A getter for enableDynamicSimulationSystem", syntax: "dynamicSimulationSystemEnabled", returns: "null", example: "hint str dynamicSimulationSystemEnabled;", game: "Arma 3", version: 1.68 },
    { id: 628, name: "east", description: "Pre-defined variable for the eastern side.", syntax: "east", returns: "null", example: "?((side _unit) == east) : hint 'This is a eastern unit!'", game: "Operation Flashpoint", version: 1 },
    { id: 629, name: "echo", description: "Sends any text into the debugger console or the logfile. Present in internal version only, not working in the retail version.", syntax: "echo text", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 630, name: "edit3DENMissionAttributes", description: "Open a window with scenario attribute in given section.", syntax: "edit3DENMissionAttributes section", returns: "Nothing", example: "edit3DENMissionAttributes 'Multiplayer';", game: "Arma 3", version: 1.56 },
    { id: 631, name: "editObject", description: "Show the edit object dialog for the given object.", syntax: "map editObject object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 632, name: "editorSetEventHandler", description: "Sets given event handler of given editor.", syntax: "map editorSetEventHandler [handler name,function]", returns: "[handler name,function]: Array -", example: "_map editorSetEventHandler ['SelectObject','']", game: "Arma 2", version: 1 },
    { id: 633, name: "effectiveCommander", description: "Returns the effective commander of the vehicle. Effective commander is the player whom driver AI will listen to. So if in a tank there is a gunner and a commander and AI driver, if the effectiveCommander is gunner, then gunner pressing WASD will give AI orders to move. If gunner jumps out and then enters tank again, the effectiveCommander role most likely has changed to commander that remained in tank. Also the assignment seems to work on first come first served basis.", syntax: "effectiveCommander vehicle", returns: "Object - commander unit", example: "_commander = effectiveCommander tank;", game: "Armed Assault", version: 1 },
    { id: 634, name: "else", description: "Executes else code when if condition returns false", syntax: "ifCode else elseCode", returns: "elseCode: Code", example: "if (a > b) then { c = 0 } else { c = 1 };", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 635, name: "emptyPositions", description: "Returns the number of given positions in the vehicle.  Positions can be 'Commander', 'Driver', 'Gunner' or 'Cargo'", syntax: "Number = vehicle emptyPositions  position", returns: "position: String", example: "_freeCargoPositions = vehicle player emptyPositions 'cargo';", game: "Armed Assault", version: 1 },
    { id: 636, name: "enableAI", description: "Enables parts of the AI behavior that was disabled by disableAI.", syntax: "unit enableAI skilltype", returns: "skilltype: String - See disableAI for possible values.", example: "null", game: "Armed Assault", version: 1 },
    { id: 637, name: "enableAIFeature", description: "Enable/disable given AI feature. Feature may be one of:  'AwareFormationSoft', 'CombatFormationSoft'.", syntax: "feature enableAIFeature enabled", returns: "enabled: Boolean", example: "AwareFormationSoft' enableAIFeature true", game: "Arma 2", version: 1.05 },
    { id: 638, name: "enableAimPrecision", description: "Set whether animation's aim precision affects weapon sway.", syntax: "unit enableAimPrecision enable", returns: "enable: Bool - true enable, false, disabled", example: "player enableAimPrecision false;", game: "Arma 3", version: 1.62 },
    { id: 639, name: "enableAttack", description: "Set if leader can issue attack commands to the soldiers in his group.", syntax: "group enableAttack enable", returns: "enable: Boolean", example: "_group1 enableAttack true", game: "Armed Assault", version: 1 },
    { id: 640, name: "enableAudioFeature", description: "Enable/disable an audio feature, features are: 'lowpass', 'building_interior'. Return previous state", syntax: "enableAudioFeature [feature, enable]", returns: "enable: Bool - true enable, false, disabled", example: "null", game: "Arma 3", version: 1.64 },
    { id: 641, name: "enableCamShake", description: "Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately. By default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.", syntax: "enableCamShake value", returns: "Nothing", example: "enableCamShake false;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 642, name: "enableCaustics", description: "Enable/disable caustics drawing.", syntax: "enableCaustics bool", returns: "Nothing", example: "null", game: "Arma 3", version: 0.5 },
    { id: 643, name: "enableChannel", description: "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command. What this command cannot do:  It cannot disable incoming text or voice  It cannot interrupt own client's transmission in progress  It cannot affect any Custom Radio channels, only channels 0-5  It cannot persist, so if user is logged out, the changes are reset  It has no effect on chat related scripting commands, such as vehicleChat, globalChat, globalRadio, sideRadio, etc. So in short, just like with getPlayerChannel, this command provides a nice ability to hack into chat UI with some limitations. And the reason why it is possible to disable entire channels (except Group) in description.ext, is because no one can talk or text, therefore no transmission is happening. NOTE: Group channel cannot be disabled, neither with enableChannel, nor with description.ext param. Channel / Number correspondence:   0 = Global  1 = Side  2 = Command  3 = Group  4 = Vehicle  5 = Direct  6-15 = Custom Radio (Is not supported by enableChannel)", syntax: "channel enableChannel enable", returns: "enable: Boolean - enable both VoN and chat", example: "0 enableChannel false; // Disable user ability to send voice and text on global channel", game: "Arma 3", version: 1.42 },
    { id: 644, name: "enableCollisionWith", description: "Enable collision between vehicles.", syntax: "vehicle enableCollisionWith vehicle", returns: "vehicle: Object", example: "//name of unit in editor such as player1 //name of object in editor such as car1  car1 enableCollisionWith player1;  //to make your unit go through the car, use the below and make sure you know what your doing!  car1 disableCollisionWith player1;", game: "Arma 3", version: 0.5 },
    { id: 645, name: "enableCopilot", description: "Enables copilot actions.", syntax: "vehicle enableCopilot enable", returns: "enable: Boolean", example: "if (!isCopilotEnabled myHeli) then {     myHeli enableCopilot true; };", game: "Arma 3", version: 0.5 },
    { id: 646, name: "enableDebriefingStats", description: "enable debrifing score table.", syntax: "enableDebriefingStats [left, top, width, height]", returns: "top: Number", example: "enableDebriefingStats [0.1, 0.1, 0.8, 0.8];", game: "Arma 3", version: 1 },
    { id: 647, name: "enableDiagLegend", description: "Enable or disable the legend for diagnostics. Internal dev only", syntax: "enableDiagLegend Bool", returns: "Nothing", example: "enableDiagLegend false", game: "Arma 3", version: 1.12 },
    { id: 648, name: "enableDynamicSimulation", description: "Enables or disables Arma_3_Dynamic_Simulation for given non AI object", syntax: "object enableDynamicSimulation enable", returns: "enable: Boolean", example: "_myObject enableDynamicSimulation true;", game: "Arma 3", version: 1.68 },
    { id: 649, name: "enableDynamicSimulationSystem", description: "Enables or disables the whole Arma_3_Dynamic_Simulation system", syntax: "enableDynamicSimulationSystem enable", returns: "Nothing", example: "enableDynamicSimulationSystem true;", game: "Arma 3", version: 1.68 },
    { id: 650, name: "enableEndDialog", description: "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.", syntax: "enableEndDialog", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 651, name: "enableEngineArtillery", description: "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.", syntax: "enableEngineArtillery enabled", returns: "Nothing", example: "enableEngineArtillery false;", game: "Arma 2: Operation Arrowhead", version: 1.54 },
    { id: 652, name: "enableEnvironment", description: "Enable/disable environmental effects: ambient life and/or ambient sound.", syntax: "enableEnvironment enabled", returns: "Nothing", example: "enableEnvironment false;", game: "Armed Assault", version: 1 },
    { id: 653, name: "enableFatigue", description: "Enables/Disables the person's fatigue.", syntax: "unit enableFatigue enable", returns: "enable: Boolean", example: "player enableFatigue false;", game: "Arma 3", version: 0.5 },
    { id: 654, name: "enableGunLights", description: "Force the AI to use gun lights", syntax: "thing enableGunLights value", returns: "value: Boolean - true/false / String (Arma 3) - 'AUTO', 'forceOn', 'forceOff'", example: "_grp enableGunLights true", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 655, name: "enableIRLasers", description: "Allows the AI to use IR lasers", syntax: "thing enableIRLasers value", returns: "value: Boolean - true/false", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 656, name: "enableMimics", description: "Enables/disables mimics on a given unit.", syntax: "unit enableMimics enabled", returns: "enabled: Boolean", example: "cursorTarget enableMimics false;", game: "Arma 3", version: 1.22 },
    { id: 657, name: "enablePersonTurret", description: "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.", syntax: "vehicle enablePersonTurret [turretPath, enable]", returns: "[turretPath, enable]: Array", example: "heli enablePersonTurret [[1],true];", game: "Arma 3", version: 1.34 },
    { id: 658, name: "enableRadio", description: "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.", syntax: "enableRadio state", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 659, name: "enableReload", description: "Enable / disable reload when magazine is empty.", syntax: "object enableReload enable", returns: "enable: Boolean", example: "_vehicle enableReload false;", game: "Armed Assault", version: 1 },
    { id: 660, name: "enableRopeAttach", description: "Enable/disable ability to attach or be attached to ropes for given vehicle", syntax: "vehicle enableRopeAttach enable", returns: "enable: Boolean", example: "(vehicle player) enableRopeAttach false;", game: "Arma 3", version: 1.34 },
    { id: 661, name: "enableSatNormalOnDetail", description: "Enables/Disables satellite normal map od detail maps.", syntax: "enableSatNormalOnDetail state", returns: "Nothing", example: "enableSatNormalOnDetail true;", game: "Arma 3", version: 1 },
    { id: 662, name: "enableSaving", description: "Enable / disable saving of the game.   When disabled, the autosave is created (if not forbidden by save == false).", syntax: "enableSaving enable", returns: "Nothing", example: "enableSaving false; // Saving disabled and make autosave. enableSaving true;  // Saving enabled without autosave.  enableSaving [ false, false ]; // Saving disabled without autosave. enableSaving [ false, true  ]; // Saving disabled and make autosave. enableSaving [ true,  false ]; // Saving enabled without autosave. enableSaving [ true,  true  ]; // Saving enabled and make autosave.", game: "Arma 2", version: 1 },
    { id: 663, name: "enableSentences", description: "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.", syntax: "enableSentences enable", returns: "Nothing", example: "enableSentences false;", game: "Arma 2", version: 1 },
    { id: 664, name: "enableSimulation", description: "Enable / disable simulation for given entity.", syntax: "entity enableSimulation state", returns: "state: Boolean", example: "player enableSimulation false;", game: "Arma 2", version: 1 },
    { id: 665, name: "enableSimulationGlobal", description: "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as enableSimulation when used in SP.", syntax: "entity enableSimulationGlobal enable", returns: "enable: Boolean", example: "_myObject enableSimulationGlobal false;", game: "Arma 3", version: 1.12 },
    { id: 666, name: "enableStamina", description: "Enable/disable stamina system", syntax: "unit enableStamina enabled", returns: "enabled: Bool", example: "player enableStamina true;", game: "Arma 3", version: 1.54 },
    { id: 667, name: "enableTeamSwitch", description: "Enable / disable Team Switch. The default setting is enabled.", syntax: "enableTeamSwitch enable", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 668, name: "enableUAVConnectability", description: "Enables unit's AV terminal(s) connecting to UAV.", syntax: "object enableUAVConnectability [uav, checkAllItems]", returns: "[uav, checkAllItems]: Array", example: "unit enableUAVConnectability [uav,true];", game: "Arma 3", version: 1.24 },
    { id: 669, name: "enableUAVWaypoints", description: "Enables/disables the option for player to set waypoints for UAV in AV terminal.", syntax: "uav enableUAVWaypoints enable", returns: "enable: Boolean", example: "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", game: "Arma 3", version: 1.4 },
    { id: 670, name: "enableVehicleCargo", description: "Enable/disable option to transport other vehicles (if configured) or be transported.", syntax: "vehicle enableVehicleCargo enable", returns: "enable: Boolean", example: "vehicle enableVehicleCargo true;", game: "Arma 3", version: 1.62 },
    { id: 671, name: "enableWeaponDisassembly", description: "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.", syntax: "enableWeaponDisassembly enable", returns: "Nothing", example: "enableWeaponDisassembly false;", game: "Arma 3", version: 1.68 },
    { id: 672, name: "endl", description: "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (line end). The command returns '\r\n', which contains control characters rather than printable characters:    hint str count '\r\n'; // 4  hint str count endl; // 2 The line break works for diag_log and ctrlSetText. It doesn't work with the hint because hint interprets printable '\n' as line break instead. Alternatively one can use toString command to get other characters.", syntax: "endl", returns: "null", example: "diag_log ('line1' + endl + 'line2');", game: "Arma 3", version: 1.7 },
    { id: 673, name: "endLoadingScreen", description: "Finishes loading screen started by startLoadingScreen.", syntax: "endLoadingScreen", returns: "null", example: "startLoadingScreen ['Loading My Mission']; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", game: "Arma 2", version: 1 },
    { id: 674, name: "endMission", description: "Finish the mission.  The end type can be:  'CONTINUE'  'KILLED'  'LOSER'  'END1'  'END2'  'END3'  'END4'  'END5'  'END6'  Mission saves are deleted. Use failMission if they should not.         To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.", syntax: "endMission endType", returns: "Nothing", example: "endMission 'END1';", game: "Arma 2", version: 1 },
    { id: 675, name: "engineOn", description: "Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local.   NOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while.", syntax: "vehicle engineOn state", returns: "state: Boolean - true to turn the engine on, false to turn it off", example: "if (!isEngineOn _jeep) then {_jeep engineOn true};", game: "Operation Flashpoint: Resistance", version: 1.9 },
    { id: 676, name: "enginesIsOnRTD", description: "Returns which engines are producing some work.", syntax: "enginesIsOnRTD RTD_helicopter", returns: "Array -  [Boolean value for each engine]", example: "_enginesTaru = enginesIsOnRTD _taru// Returns [true,true]", game: "Arma 3", version: 1.34 },
    { id: 677, name: "enginesRpmRTD", description: "Returns all engines RPM", syntax: "enginesRpmRTD RTD_helicopter", returns: "Array", example: "_UH80_E1 = (enginesRpmRTD _UH80) select 0;//engine 1 RPM _UH80_E2 = (enginesRpmRTD _UH80) select 1;//engine 2 RPM", game: "Arma 3", version: 1.34 },
    { id: 678, name: "enginesTorqueRTD", description: "Torque produced by engines in N·m (Newton*meter)", syntax: "enginesTorqueRTD RTD_helicopter", returns: "Array", example: "_UH80_E1 = (enginesTorqueRTD _UH80) select 0;//engine 1 Torque _UH80_E2 = (enginesTorqueRTD _UH80) select 1;//engine 2 Torque", game: "Arma 3", version: 1.34 },
    { id: 679, name: "entities", description: "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string '' is passed for the type, all entity types are returned.   Alternative syntax introduced in Arma 3 v1.65.138685 allows to filter entities by type and alive status as well as to return entities currently in vehicles.  Optimisation tip: Keep number of types in both includeTypes and excludeTypes arrays to a minimum by possibly using parent/base classes. If you have to use several types, arrange them in order so that the more common types go at the beginning of the array.", syntax: "entities type", returns: "Array", example: "_allcars = entities 'Car';", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 680, name: "environmentEnabled", description: "Returns status of enableEnvironment command", syntax: "environmentEnabled", returns: "null", example: "_enabled = environmentEnabled;", game: "Arma 3", version: 1.68 },
    { id: 681, name: "estimatedEndServerTime", description: "Estimated end of MP game in seconds converted to serverTime.", syntax: "estimatedEndServerTime", returns: "null", example: "_min = (ceil (estimatedEndServerTime - serverTime) / 60);", game: "Arma 2", version: 1 },
    { id: 682, name: "estimatedTimeLeft", description: "Sets the estimated time left in the game. Using this function the designer can provide a 'time left' estimate that is shown in the 'Game in progress' screen or in the master browser. This command works in MP only and must be executed on the server only. NOTE that since Arma 3 v1.69 the max value that can be set is 10 hours (36000 seconds)", syntax: "estimatedTimeLeft seconds", returns: "Nothing", example: "estimatedTimeLeft 600; //10 min", game: "Operation Flashpoint", version: 1.34 },
    { id: 683, name: "evalObjectArgument", description: "Return argument in mission editor of a given object.", syntax: "map evalObjectArgument [object, argument]", returns: "[object, argument]: Array", example: "// returns string '[1009.0351, 1319.4928]' (findDisplay 128 displayCtrl 51) getObjectArgument ['_unit_1', 'POSITION']  // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument ['_unit_1', 'POSITION']", game: "Arma 2", version: 1 },
    { id: 684, name: "everyBackpack", description: "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.", syntax: "everyBackpack box", returns: "Array", example: "everyBackpack cursorTarget;", game: "Arma 3", version: 1.04 },
    { id: 685, name: "everyContainer", description: "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.", syntax: "everyContainer box", returns: "Array", example: "everyContainer cursorTarget;", game: "Arma 3", version: 1.22 },
    { id: 686, name: "exec", description: "Execute a script using (the deprecated but still available) .sqs syntax. The argument is passed to the script in the '_this' variable, and magic variable '_time' within the script contains the time in seconds that the script has been running.  Alternatively use execVM command in combination with .sqf syntax.  Learn more about scripts under Scripts.", syntax: "argument exec script", returns: "script: String - the name of the script. It should be given relatively to the mission folder, campaign scripts subfolder or global scripts folder and is searched there in the same order.  If you refer to a script packed together with an addon, the path should look like this: '\ADDON_PBO_NAME\script.sqs' where ADDON_PBO_NAME is the name of the addon's *.pbo file without extension.", example: "[player, _jeep] exec 'getin.sqs'", game: "Operation Flashpoint", version: 1 },
    { id: 687, name: "execEditorScript", description: "Execute an editor script for the specified object.", syntax: "map execEditorScript [object,script]", returns: "[object,script]: Array -", example: "_map execEditorScript ['_team_1','create']", game: "Arma 2", version: 1 },
    { id: 688, name: "execFSM", description: "Executes scripted FSM and returns the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. In Arma 3 FSM handle is also available in _thisFSM variable.", syntax: "arguments execFSM filename", returns: "filename: String - file with FSM code", example: "_id = player execFSM 'test.fsm';", game: "Arma 2", version: 1 },
    { id: 689, name: "execVM", description: "Compiles and adds SQF Script to the scheduler queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running execVM command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in private variable _this. In Arma 3 the script handle is also passed to the script in _thisScript variable.   In order to understand execVM consider the following comparison: private _handle = _args execVM 'someFile.sqf'; // is practically identical to private _handle = _args spawn compile preprocessFileLineNumbers 'someFile.sqf'; So if you need multiple execution of the same file, you might want to store it in a function (Functions Library), otherwise, for a single execution, execVM is a good choice.", syntax: "arguments execVM filename", returns: "filename: String - file with sqf code (doesn't have to have .sqf extension, but not using standard extensions may cause problems later, during binarisation)", example: "private _handle = _args execVM 'someFile.sqf'; // is practically identical to private _handle = _args spawn compile preprocessFileLineNumbers 'someFile.sqf';", game: "Armed Assault", version: 1 },
    { id: 690, name: "exit", description: "Stops the execution of a  SQS script.  It's ignored in  SQF Scripts.", syntax: "exit", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 691, name: "exitWith", description: "Exits current scope {...} it is executed from if condition evaluates true, creates new scope {...code...} and executes the given code in it. Often used for exiting do, for, count or forEach. Simply exiting waitUntil or onEachFrame scopes with exitWith will have no effect as these scopes are called repeatedly by the engine and require different handling to terminate (see Example 3).", syntax: "ifType exitWith code", returns: "code: Code", example: "if (_x>5) exitWith {echo '_x is too big'; _x}", game: "Armed Assault", version: 1 },
    { id: 692, name: "exp", description: "Let x be a number, then exp (x) is equal to e to the power of x (or e^x)", syntax: "Number = exp x", returns: "Number", example: "_result = exp 1", game: "Operation Flashpoint", version: 1 },
    { id: 693, name: "expectedDestination", description: "Return expected destination of unit as an array with format: [ Position, planningMode, forceReplan].", syntax: "Array = expectedDestination person", returns: "Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 694, name: "exportJIPMessages", description: "Export list of JIP to a file.  Special: BattlEye's RCON variant of this command is #exportJIPqueue (see also Multiplayer_Server_Commands)", syntax: "exportJIPMessages fileName", returns: "Nothing", example: "exportJIPMessages 'myFileNameWithoutExtension';", game: "Arma 3", version: 1.56 },
    { id: 695, name: "eyeDirection", description: "Returns the direction object is watching (eyes, or a vehicle primary observer).", syntax: "eyeDirection unit", returns: "Array - 3D Vector", example: "can = 'Land_Can_V3_F' createVehicle position player;  onEachFrame {     can setPosASL [         (eyePos player select 0) + (eyeDirection player select 0),         (eyePos player select 1) + (eyeDirection player select 1),         (eyePos player select 2) + (eyeDirection player select 2)     ] }", game: "Arma 3", version: 0.5 },
    { id: 696, name: "eyePos", description: "Returns the object's eyes / main turret position.", syntax: "eyePos object", returns: "Array - format PositionASL", example: "eyePos player", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 697, name: "face", description: "Returns the face of a person.", syntax: "face person", returns: "String", example: "face player", game: "Arma 3", version: 1.02 },
    { id: 698, name: "faction", description: "Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string. Standard Factions include:  Arma 2:  West: 'USMC', 'CDF'  East: 'RU', 'INS'  Guer: 'GUE'  Civ: 'CIV', 'CIV_RU' Arma 2: Operation Arrowhead:   West: 'BIS_US', 'BIS_CZ', 'BIS_GER'  East: 'BIS_TK', 'BIS_TK_INS'  Guer: 'BIS_TK_GUE', 'BIS_UN'  Civ: 'BIS_TK_CIV', 'BIS_CIV_special' DLC Factions  Arma 2: British Armed Forces:   West: 'BIS_BAF' Arma 2: Private Military Company:  Guer: 'PMC_BAF' Arma 3:  West: 'BLU_F' (NATO), 'BLU_G_F' (FIA)  East: 'OPF_F' (CSAT), 'OPF_G_F' (FIA)  Guer: 'IND_F' (AAF), 'IND_G_F' (FIA)  Civ: 'CIV_F' (Civilians)", syntax: "String = faction unitName", returns: "String. See above.", example: "_faction = faction _object;", game: "Arma 2", version: 1 },
    { id: 699, name: "fadeMusic", description: "Changes the music volume smoothly within the given time.", syntax: "time fadeMusic volume", returns: "volume: Number - music volume range 0 to 1. Maximum volume is 1. Default is 0.5.", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 700, name: "fadeRadio", description: "Causes a smooth change in the radio volume. The change duration is given by time, the target volume by volume. The default radio volume is 1.0.", syntax: "time fadeRadio volume", returns: "volume: Number - radio volume range 0 to 1. Maximum volume is 1. Default is 1.", example: "5 fadeRadio 0.1", game: "Armed Assault", version: 1 },
    { id: 701, name: "fadeSound", description: "Changes the sound volume smoothly within the given time.", syntax: "time fadeSound volume", returns: "volume: Number - sound volume range 0 to 1. Maximum volume is 1. Default is 1.", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 702, name: "failMission", description: "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission.  The end type can be:  'CONTINUE'  'KILLED'  'LOSER'  'END1'  'END2'  'END3'  'END4'  'END5'  'END6'  Mission saves won't be deleted.          To maintain Arma 3 visual style, it's recommended to use BIS_fnc_endMission instead.", syntax: "failMission endtype", returns: "Nothing", example: "failMission 'LOSER';", game: "Arma 2", version: 1 },
    { id: 703, name: "fillWeaponsFromPool", description: "Adds magazines from the campaign pool to the given unit, depending on his weapons.", syntax: "fillWeaponsFromPool unitName", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 704, name: "find", description: "Searches for an array element within array or a string within a string. Returns the 0 based index on success or -1 if not found. Test is cASe-seNsItiVE", syntax: "array find x", returns: "x: Anything - array element to find", example: "['Apples','Oranges','Pears'] find 'Oranges'; //result is 1 [1,[2],[[3]]] find [[3]]; //result is 2", game: "Armed Assault", version: 1 },
    { id: 705, name: "findCover", description: "Returns the object around where the unit finds cover. The minDist, visibilityPosition and ignoreObject parameters are optional. Command is not functional since Arma 2.          This command is not implemented", syntax: "object findCover [position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]", returns: "[position, hidePosition, maxDist, minDist, visibilityPosition, ignoreObject]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 706, name: "findDisplay", description: "Find display by its IDD (which is defined in the description.ext or config).  If the specified display can't be found displayNull ('No display') is returned, (which can be tested with the isNull command.)  The primary display uses IDD 46. (eg: findDisplay 46). This will return displayNull on a dedicated server (so be sure to check isDedicated if using this in a waitUntil condition).", syntax: "Display = findDisplay idd", returns: "Display", example: "_display = findDisplay 1;", game: "Armed Assault", version: 1 },
    { id: 707, name: "findEditorObject", description: "Return object that matches the provided reference.", syntax: "map findEditorObject value", returns: "value: Any -", example: "null", game: "Arma 2", version: 1 },
    { id: 708, name: "findEmptyPosition", description: "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [minDistance] from the [center] and looks as far away as [maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned.    This command ignores moving objects present within search area.", syntax: "center findEmptyPosition [minDistance, maxDistance, vehicleType]", returns: "[minDistance, maxDistance, vehicleType]: Array", example: "_position = position player findEmptyPosition [0,100];", game: "Arma 2", version: 1 },
    { id: 709, name: "findEmptyPositionReady", description: "Check if findEmptyPosition command can be called without waiting for files.", syntax: "center findEmptyPositionReady [radius,maxDistance]", returns: "[radius, maxDistance]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 710, name: "findNearestEnemy", description: "Finds the nearest enemy to the specified position. Returns a null object if the object's group does not know about any enemies. This command will return nearest object that is known to the unit and is considered enemy. An empty vehicle that is part of enemy group assets (see addVehicle) can be returned as valid nearest target.", syntax: "object findNearestEnemy position", returns: "position: Object or Array in format PositionAGL or Position2D", example: "_myNearestEnemy = (units _myGroup select 0) findNearestEnemy player;", game: "Armed Assault", version: 1 },
    { id: 711, name: "finishMissionInit", description: "Finish world initialization before mission is launched.", syntax: "finishMissionInit", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 712, name: "finite", description: "True, if number is finite (not infinite and a valid number)", syntax: "Boolean = finite x", returns: "Boolean", example: "//ArmA 2 hint str finite (10/0); //true ... O_o Huh???? hint str (10/0); //0 ... Weird, but that explains it. //ArmA 3 hint str finite (10/0); // Error Zero Divisor hint str finite 10; //true hint str finite 1000000000000000000000000000000000000000; //false", game: "Armed Assault", version: 1 },
    { id: 713, name: "fire", description: "Forces a unit to fire the given weapon.  NOTE: Just like with forceWeaponFire it is possible to pass remote unit as argument, but this could be unreliable. Considering this command might need to be used in combination with selectWeapon, which takes only local arguments, it would make sense to execute fire command where unit is also local.", syntax: "unit fire weaponName", returns: "weaponName: String - name of the weapon to be fired", example: "_soldier fire 'M16';", game: "Operation Flashpoint", version: 1 },
    { id: 714, name: "fireAtTarget", description: "Remotely forces a unit to fire the given weapon.", syntax: "sourceVehicle fireAtTarget [targetVehicle, weaponMuzzleName]", returns: "[targetVehicle, weaponMuzzleName]: Array", example: "_handle = this fireAtTarget [groundtarget1,'HellfireLauncher'];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 715, name: "firstBackpack", description: "Returns the first stored backpack.", syntax: "firstBackpack box", returns: "Object", example: "myVariable = firstBackpack myBox;", game: "Arma 3", version: 0.5 },
    { id: 716, name: "flag", description: "Returns the original flag pole of the flag the unit is carrying.", syntax: "flag unit", returns: "Object - Flag pole object the flag belongs to. If the unit carries no flag, objNull is returned.", example: "_flag = flag _soldier;", game: "Operation Flashpoint", version: 1 },
    { id: 717, name: "flagAnimationPhase", description: "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed", syntax: "flagAnimationPhase flag", returns: "Number - 0...1", example: "flagAnimationPhase _flag1; //0.5", game: "Arma 3", version: 1.68 },
    { id: 718, name: "flagOwner", description: "Returns the global owner of a flag. A getter for setFlagOwner.", syntax: "flagOwner flag", returns: "Object -  The person or vehicle that owns the flag is returned. If used on anything else than a flag, the returned value is objNull. If the flag is on its pole, the return value is NULL. If the flagowner is dead, the return value is the name of the soldier model.", example: "_person = flagOwner _flagOne;", game: "Operation Flashpoint", version: 1 },
    { id: 719, name: "flagSide", description: "Returns Side of the local instance of the flag. A getter for setFlagSide.", syntax: "flagSide flag", returns: "Side", example: "_flagSide =  flagSide flag;", game: "Arma 3", version: 1.54 },
    { id: 720, name: "flagTexture", description: "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.", syntax: "flagTexture flagCarrier", returns: "String", example: "_flagTexture = flagTexture _flag1;", game: "Arma 3", version: 1.54 },
    { id: 721, name: "fleeing", description: "Checks if a unit is fleeing.", syntax: "Boolean = fleeing unitName", returns: "Boolean -   Returns true if a unit is fleeing, false if not. Dead or empty units return false.", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 722, name: "floor", description: "Returns the next lowest integer in relation to x.", syntax: "Number = floor x", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 723, name: "flyInHeight", description: "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.", syntax: "aircraft flyInHeight altitude", returns: "altitude: Number - flying altitude in meters", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 724, name: "flyInHeightASL", description: "Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL).", syntax: "aircraft flyInHeightASL params", returns: "params: Array -  height - careless/safe/aware, height - combat, height - stealth", example: "cobraOne flyInHeightASL [200, 100, 400];", game: "Arma 3", version: 1.62 },
    { id: 725, name: "fog", description: "A getter for setFog. Returns the current value of the fog in range 0...1.", syntax: "fog", returns: "null", example: "_foglevel = fog;", game: "Armed Assault", version: 1 },
    { id: 726, name: "fogForecast", description: "Returns the forecast fog value. A value of 0 means no fog, 1 means maximum fog.", syntax: "fogForecast", returns: "null", example: "_level = fogForecast;", game: "Armed Assault", version: 1 },
    { id: 727, name: "fogParams", description: "A getter for setFog (Alt Syntax). Returns extended params for the fog", syntax: "fogParams", returns: "null", example: "_fog = fogParams", game: "Arma 3", version: 1 },
    { id: 728, name: "for", description: "This operator creates a For Type which is used in the for-constructs (There is the for forspec and the for var syntax available for this construct)", syntax: "for arg", returns: "For Type", example: "for '_i' from 1 to 10 do {debugLog _i;};", game: "Armed Assault", version: 1 },
    { id: 729, name: "forceAddUniform", description: "Create a new uniform and hard link it into slot (without any restrictions).", syntax: "unit forceAddUniform type", returns: "type: String", example: "_unit forceAddUniform 'U_B_CombatUniform_mcam';", game: "Arma 3", version: 1.22 },
    { id: 730, name: "forcedMap", description: "Returns if map was forced by using forceMap command or openMap command with force option", syntax: "forcedMap", returns: "null", example: "_forceMapForced = forcedMap select 0; _openMapForced = forcedMap select 1;", game: "Arma 3", version: 1.62 },
    { id: 731, name: "forceEnd", description: "Enforces mission termination. Can be used in an 'END' trigger to force end conditions in the editor.          Does precisely nothing, zero, zip, nada, zilch", syntax: "forceEnd", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 732, name: "forceFlagTexture", description: "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If '' is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture.   Note: Forced flag texture is an additional flag texture, which visually overrides original flag texture and therefore is very expensive to simulate, so please use the functionality sparingly.", syntax: "object forceFlagTexture texture", returns: "texture: String", example: "player forceFlagTexture '\A3\Data_F\Flags\Flag_red_CO.paa';", game: "Arma 3", version: 1.7 },
    { id: 733, name: "forceMap", description: "Opens non-interactive main map in background that overrides user screen. The user is able to fire but cannot see the world just the map. To force open interactive map use openMap command.", syntax: "forceMap show", returns: "Nothing", example: "forceMap true", game: "Operation Flashpoint", version: 1.27 },
    { id: 734, name: "forceRespawn", description: "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no 'so and so was killed' message and no score adjustment.", syntax: "forceRespawn unit", returns: "Nothing", example: "forceRespawn player;", game: "Arma 3", version: 1.04 },
    { id: 735, name: "forceSpeed", description: "Force the speed limit on given object (object will never attempt to move faster than given by forceSpeed). Use negative value to return to default behaviour. Used unit is m/s.", syntax: "object forceSpeed speed", returns: "speed: Number (in m/s)", example: "_helicopter forceSpeed 150;", game: "Armed Assault", version: 1 },
    { id: 736, name: "forceWalk", description: "Forces unit to walk even if run or sprint is selected.", syntax: "unit forceWalk value", returns: "value: Boolean - true/false", example: "player forceWalk true;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 737, name: "forceWeaponFire", description: "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon.", syntax: "unit forceWeaponFire [muzzle, firemode]", returns: "[muzzle, firemode]: Array", example: "hint str (getArray (configFile >> 'CfgWeapons' >> currentWeapon player >> 'modes'));", game: "Arma 3", version: 0.5 },
    { id: 738, name: "forceWeatherChange", description: "Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag).       NOTE The engine has own idea about the weather and will interfere with your scripted weather at every opportunity it gets. So don't give it the opportunity. In the editor's Intel there are Manual Override setting for many aspects of the weather. Select them to disable engine interference. Some commands such as setWaves and  setLightnings will not even work until their respective settings are set to manual.", syntax: "forceWeatherChange", returns: "null", example: "240 setOvercast 1; 360 setRain 1; forceWeatherChange; comment 'force immediate change overriding smooth transition';", game: "Arma 3", version: 1.16 },
    { id: 739, name: "forEach", description: "Executes the given command(s) on every item of an array.   The array items are represented by the magic variable _x. The array indices are represented by _forEachIndex.   In ArmA2 & VBS2, the variable _x is always local to the forEach block so it is safe to nest them.", syntax: "script forEach array", returns: "array: Array", example: "{ _x setDammage 1; } forEach units group player;", game: "Operation Flashpoint", version: 1 },
    { id: 740, name: "forEachMember", description: "Executes the given command recursively for both teams and agents that are members of the given team. For teams only use forEachMemberTeam. For agents only use forEachMemberAgent.", syntax: "command forEachMember team", returns: "team: Team Member", example: "null", game: "Arma 2", version: 1 },
    { id: 741, name: "forEachMemberAgent", description: "Executes the given command recursively for each agent that is a member of the given team. For just teams use forEachMemberTeam. For both teams and agents use forEachMember.", syntax: "command forEachMemberAgent team", returns: "team: Team Member", example: "null", game: "Arma 2", version: 1 },
    { id: 742, name: "forEachMemberTeam", description: "Executes the given command recursively for each team that is a member of the given team. For just agents use forEachMemberAgent. For both teams and agents use forEachMember.", syntax: "command forEachMemberTeam team", returns: "team: Team Member", example: "null", game: "Arma 2", version: 1 },
    { id: 743, name: "forgetTarget", description: "Resets info group has about target", syntax: "group forgetTarget target", returns: "target: Object - group target", example: "soldier1 forgetTarget soldier2;", game: "Arma 3", version: 1.7 },
    { id: 744, name: "format", description: "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use parseNumber. NOTE that output of this command is limited to ~8Kb. joinString on the other hand doesn't have such limit.", syntax: "format [formatString, var1, var2 ...]", returns: "formatString: String - a string containing text and/or references to the variables listed below in the array. The references appear in the form of %1, %2 etc.", example: "format ['Player:%1, player's side:%2', player, side player];", game: "Operation Flashpoint", version: 1 },
    { id: 745, name: "formation", description: "Returns the current formation of a group.", syntax: "String = formation grp", returns: "String -  returns either 'COLUMN', 'STAG COLUMN', 'WEDGE', 'ECH LEFT', 'ECH RIGHT', 'VEE' or 'LINE'", example: "formation group player", game: "Operation Flashpoint", version: 1 },
    { id: 746, name: "formationDirection", description: "Return the direction in degrees of the 'unit' watching in formation.", syntax: "Number = formationDirection unitName", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 747, name: "formationLeader", description: "Return leader of the formation.", syntax: "Object = formationLeader unitName", returns: "Object", example: "null", game: "Armed Assault", version: 1 },
    { id: 748, name: "formationMembers", description: "Return list of units (drivers) in the formation.", syntax: "Array = formationMembers person", returns: "Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 749, name: "formationPosition", description: "Return position of unit in the formation", syntax: "Array = formationPosition person", returns: "Array - format Position", example: "null", game: "Armed Assault", version: 1 },
    { id: 750, name: "formationTask", description: "Return the current task of the unit in the formation.   You can't use it in ArmA 2, it will always returns 'NOTHING'", syntax: "String = formationTask person", returns: "String: (EXCLUDED, MOVE, COVER, LEADER)", example: "null", game: "Armed Assault", version: 1 },
    { id: 751, name: "formatText", description: "Creates a structured text by replacing %1, %2, etc. in format with plain or structured texts given as arguments.", syntax: "formatText [format, arg1, arg2, ...]", returns: "format: String", example: "_text = formatText ['Image: %1', image 'data\isniper.paa'];", game: "Armed Assault", version: 1 },
    { id: 752, name: "formLeader", description: "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.", syntax: "Object = formLeader unitName", returns: "Object -   the leader of the formation is returned. If used on a dead unit, the returned value is objNull", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 753, name: "freeLook", description: "Returns true if freelook is active.", syntax: "freeLook", returns: "null", example: "systemChat (if freeLook then {'Quit looking around player!'} else {''});", game: "Arma 3", version: 0.5 },
    { id: 754, name: "from", description: "Continue sequence of for var construct. It sets the start value of the index variable.", syntax: "for from b", returns: "b: Number", example: "for '_x' from 10 to 20 do {..code..}", game: "Armed Assault", version: 1 },
    { id: 755, name: "fromEditor", description: "Return if given team was inserted directly from mission editor.", syntax: "fromEditor teamMember", returns: "Boolean", example: "_fromEditor = fromEditor _member", game: "Arma 2", version: 1 },
    { id: 756, name: "fuel", description: "Checks how much fuel is left in the gas tank of a vehicle.", syntax: "fuel vehicle", returns: "Number -   The returned number is in range 0 (empty tank) to 1 (full tank).", example: "if (fuel vehicle player == 0) then {hint 'The vehicle is out of fuel!'};", game: "Operation Flashpoint", version: 1 },
    { id: 757, name: "fullCrew", description: "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.   NOTE that with introduction of person turrets, the cargo indexes listed in the return are true for moveInCargo command but incompatible with actions such as 'GetInCargo' and 'MoveToCargo'. To find out seats compatible with cargo action commands, execute command with 'cargo' filter: fullCrew [heli, 'cargo', true]; The return array is ordered according to cargo index compatible with action cargo commands, i.e. 1st element has index 0, second - index 1, etc. For example armed WY-55 Hellcat reports:  [[<NULL-object>,'cargo',2,[],false],[<NULL-object>,'cargo',3,[],false],[<NULL-object>,'cargo',4,[],false],[<NULL-object>,'cargo',5,[],false]] for cargo positions. The following commands will put player in the same seat: player moveInCargo [heli, 2]; player action ['GetInCargo', heli, 0];", syntax: "fullCrew vehicle", returns: "Array - format [[<Object>unit,<String>role,<Number>cargoIndex  (see note in description),<Array>turretPath,<Boolean>personTurret], ...]", example: "fullCrew [heli, 'cargo', true];", game: "Arma 3", version: 1.34 },
    { id: 758, name: "gearIDCAmmoCount", description: "Returns ammo count of assigned magazine.", syntax: "gearIDCAmmoCount idc", returns: "Number", example: "ammo = gearIDCAmmoCount _control;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 759, name: "gearSlotAmmoCount", description: "Returns ammo count of assigned magazine.", syntax: "gearSlotAmmoCount control", returns: "Number", example: "ammo = gearSlotAmmoCount _control;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 760, name: "gearSlotData", description: "Returns gear slot item name.", syntax: "gearSlotData control", returns: "String", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 761, name: "get3DENActionState", description: "Returns state of given action in the Eden Editor.    See the list of all actions.", syntax: "get3DENActionState action", returns: "Number", example: "if (get3DENActionState 'ToggleMap' == 1) then {systemChat 'Editor map is open!'};", game: "Arma 3", version: 1.56 },
    { id: 762, name: "get3DENAttribute", description: "Returns value of a given entity's attribute in Eden Editor.    An attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.       !   Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!", syntax: "entity get3DENAttribute attribute", returns: "attribute: String - attribute property", example: "systemChat str ((get3DENMouseOver select 1) get3DENAttribute 'name'); // returns variable name of object under cursor", game: "Arma 3", version: 1.56 },
    { id: 763, name: "get3DENCamera", description: "Returns the camera Object used by the Eden Editor.", syntax: "get3DENCamera", returns: "null", example: "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; get3DENCamera setVectorDirAndUp [ 	[ sin _y * cos _p,cos _y * cos _p,sin _p], 	[ [ sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", game: "Arma 3", version: 1.56 },
    { id: 764, name: "get3DENConnections", description: "Return all connections currently present on an entity.", syntax: "get3DENConnections entity", returns: "Array in format: [[type1,to1], [type2, to2], ..., [typeN, toN]]  type: String - connection class from Cfg3DEN >> Connections  to: Eden Entity to which the connection leads to", example: "[[type1,to1], [type2, to2], ..., [typeN, toN]]", game: "Arma 3", version: 1.56 },
    { id: 765, name: "get3DENEntity", description: "Returns Eden Entity based on its unique ID. If the ID points to a layer, the ID will be returned instead.", syntax: "get3DENEntity id", returns: "Eden Entity (when the target is Eden Entity) or Number (when the target is a layer)", example: "myEntity = get3DENEntity 1", game: "Arma 3", version: 1.56 },
    { id: 766, name: "get3DENEntityID", description: "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.", syntax: "get3DENEntityID entity", returns: "Number", example: "myID = get3DENEntityID player", game: "Arma 3", version: 1.56 },
    { id: 767, name: "get3DENGrid", description: "Returns the grid increment for the given transformation type.  Transformation types:  Rotation - 'r'  Translation - 't'  Scale - 's'", syntax: "get3DENGrid type", returns: "Number", example: "currentMovementIncrement = get3DENGrid 't';// returns 1", game: "Arma 3", version: 1.56 },
    { id: 768, name: "get3DENIconsVisible", description: "Get visibility state of Eden Editor icons.", syntax: "get3DENIconsVisible", returns: "null", example: "if (get3DENIconsVisible select 0) then {hint 'Icons are visible in the map.';};", game: "Arma 3", version: 1.56 },
    { id: 769, name: "get3DENLayerEntities", description: "Return all entities and sub-layer in Eden Entity layer.", syntax: "get3DENLayerEntities layerID", returns: "Array of Eden Entities", example: "_myLayer = -1 add3DENLayer 'CTRG'; player set3DENLayer _myLayer; _entities = get3DENLayerEntities _myLayer;", game: "Arma 3", version: 1.56 },
    { id: 770, name: "get3DENLinesVisible", description: "Get visibility state of Eden Editor lines.", syntax: "get3DENLinesVisible", returns: "null", example: "if (get3DENLinesVisible select 0) then {hint 'Lines are visible in the map.';};", game: "Arma 3", version: 1.56 },
    { id: 771, name: "get3DENMissionAttribute", description: "Return value of scenario attribute.      !   Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!", syntax: "section get3DENMissionAttribute class", returns: "class: String - attribute name", example: "systemChat str ('Multiplayer' get3DENMissionAttribute 'respawn');", game: "Arma 3", version: 1.56 },
    { id: 772, name: "get3DENMouseOver", description: "Returns the Eden Entity the mouse is hovering over in Eden Editor.", syntax: "get3DENMouseOver", returns: "null", example: "systemChat str get3DENMouseOver;// returns: ['Object',B Alpha 1-1:1]", game: "Arma 3", version: 1.56 },
    { id: 773, name: "get3DENSelected", description: "Returns an array of all selected Eden Editor Entities, including groups, waypoints, and markers.", syntax: "get3DENSelected type", returns: "Array of Eden Entities", example: "systemChat str (get3DENSelected ''); /* outputs: [ 	[B Alpha 2-1:1],//objects 	[B Alpha 2-1],//groups 	[164494: <no shape>],//triggers 	[<No center> Charlie 1-2:4],//logic 	[ [B Alpha 2-1,0] ],//waypoints 	['Hotel_Whiskey']//markers ]*/", game: "Arma 3", version: 1.56 },
    { id: 774, name: "getAimingCoef", description: "Get current aiming coefficient (higher ~ less precise, default is 1)", syntax: "getAimingCoef unit", returns: "Number", example: "null", game: "Arma 3", version: 1.62 },
    { id: 775, name: "getAllHitPointsDamage", description: "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:  0: no damage  1: full damage", syntax: "getAllHitPointsDamage entity", returns: "Array - [] if entity is null or has no shape, otherwise [hitpointsNamesArray, selectionsNamesArray, damageValuesArray]", example: "getAllHitPointsDamage player; //[ //	['HitFace','HitNeck','HitHead','HitPelvis','HitAbdomen','HitDiaphragm','HitChest','HitBody','HitArms','HitHands','HitLegs'], //	['','neck','head','pelvis','spine1','spine2','spine3','body','','hands','legs'], //	[0,0.0939002,0.0319932,0.0858595,0.174491,1,1,0.168495,1,0.5,0.195907] //]", game: "Arma 3", version: 1.5 },
    { id: 776, name: "getAllOwnedMines", description: "Gets all mine objects this unit has ownership over.", syntax: "getAllOwnedMines unit", returns: "Array of mine object", example: "_mines = getAllOwnedMines player;", game: "Arma 3", version: 1.62 },
    { id: 777, name: "getAmmoCargo", description: "Returns the amount of ammo resources in the cargo space of a rearm vehicle.", syntax: "getAmmoCargo vehicle", returns: "Number", example: "value = getAmmoCargo myVehicleName;", game: "Arma 3", version: 0.56 },
    { id: 778, name: "getAnimAimPrecision", description: "Returns aim precision for current animation", syntax: "getAnimAimPrecision unit", returns: "Number", example: "getAnimAimPrecision player;", game: "Arma 3", version: 1.54 },
    { id: 779, name: "getAnimSpeedCoef", description: "Get coefficient for animation speed.", syntax: "getAnimSpeedCoef unit", returns: "Number", example: "getAnimSpeedCoef player;", game: "Arma 3", version: 1.54 },
    { id: 780, name: "getArray", description: "Extract array from config entry.", syntax: "Array = getArray config", returns: "Array", example: "_cfg = configFile >> 'CfgVehicles' >> _SomeAddonClassName >> 'DestructionEffects' >> 'Smoke1' >> 'type' switch ( true ) do { 	case (isNumber _cfg): {getNumber _cfg}; 	case (isText _cfg): {getText _cfg}; 	case (isArray _cfg): {getArray _cfg;}; 	default { nil }; };", game: "Armed Assault", version: 1 },
    { id: 781, name: "getArtilleryAmmo", description: "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.", syntax: "getArtilleryAmmo [unit1, unit2, unit3....]", returns: "unit: Object", example: "if ('8Rnd_82mm_Mo_Flare_white' in getArtilleryAmmo [ 	_mortar1, 	_mortar2, 	_mortar3,  	_mortar4 ]) then { 	hint 'Sir, we have white flares, sir!'; };", game: "Arma 3", version: 0.5 },
    { id: 782, name: "getArtilleryETA", description: "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.", syntax: "unit getArtilleryETA [targetPosition, magazineType]", returns: "targetPosition: Position - position of the target", example: "_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];", game: "Arma 3", version: 0.56 },
    { id: 783, name: "getAssignedCuratorLogic", description: "Returns curator logic to which given player has access.", syntax: "getAssignedCuratorLogic player", returns: "Object", example: "(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead,true];", game: "Arma 3", version: 1.16 },
    { id: 784, name: "getAssignedCuratorUnit", description: "Returns unit assigned to curator logic.", syntax: "getAssignedCuratorUnit curatorObj", returns: "Object", example: "_curatorUnit = getAssignedCuratorUnit (allCurators select 0); _curatorUnit joinAs [createGroup civilian, 0];", game: "Arma 3", version: 1.16 },
    { id: 785, name: "getBackpackCargo", description: "Returns all backpack types and count from the cargo space", syntax: "result = getBackpackCargo object", returns: "Array of Arrays - Format: [['5BackpacksType1','10BackpacksType2'],[5,10]]", example: "_content = getBackpackCargo carName;", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 786, name: "getBleedingRemaining", description: "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.", syntax: "getBleedingRemaining unit", returns: "Number", example: "_bleedingRemaining = getBleedingRemaining _unit;", game: "Arma 3", version: 0.5 },
    { id: 787, name: "getBurningValue", description: "Returns amount of damage from fire.", syntax: "getBurningValue unit", returns: "Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 788, name: "getCameraViewDirection", description: "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]", syntax: "getCameraViewDirection unit", returns: "Array - 3D Vector", example: "bob = createGroup east createUnit ['O_Soldier_F', [0,0,0], [], 0, 'NONE']; bob setVehiclePosition [player modelToWorld [0,100,0], [], 0, 'NONE']; onEachFrame { 	_beg = ASLToAGL eyePos bob; 	_endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100)); 	drawLine3D [ _beg, _endE, [0,1,0,1]]; 	_endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100)); 	drawLine3D [_beg, _endW, [1,0,0,1]]; 	_endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100)); 	drawLine3D [_beg, _endV, [0,0,1,1]]; };", game: "Arma 3", version: 1.58 },
    { id: 789, name: "getCargoIndex", description: "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.", syntax: "vehicle getCargoIndex unit", returns: "unit: Object", example: "player moveInCargo heli; hint str (heli getCargoIndex player);", game: "Arma 3", version: 1.26 },
    { id: 790, name: "getCenterOfMass", description: "Returns center of mass of a PhysX object.", syntax: "getCenterOfMass object", returns: "Array - [x,y,z] offset relative to the model centre", example: "_com = getCenterOfMass _myCar", game: "Arma 3", version: 1.12 },
    { id: 791, name: "getClientState", description: "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:     getClientStateNumber     getClientState                   Description  0 'NONE' No client (or singleplayer)  1 'CREATED' Client is created  2 'CONNECTED' Client is connected to server, message formats are registered  3 'LOGGED IN' Identity is created  4 'MISSION SELECTED' Mission is selected  5 'MISSION ASKED' Server was asked to send / not send mission  6 'ROLE ASSIGNED' Role was assigned (and confirmed)  7 'MISSION RECEIVED' Mission received  8 'GAME LOADED' Island loaded, vehicles received  9 'BRIEFING SHOWN' Briefing was displayed  10 'BRIEFING READ' Ready to play mission  11 'GAME FINISHED' Game was finished  12 'DEBRIEFING READ' Debriefing read, ready to continue with next mission", syntax: "getClientState", returns: "null", example: "_state = getClientState;", game: "Arma 3", version: 1.08 },
    { id: 792, name: "getClientStateNumber", description: "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:     getClientStateNumber     getClientState                   Description  0 'NONE' No client (or singleplayer)  1 'CREATED' Client is created  2 'CONNECTED' Client is connected to server, message formats are registered  3 'LOGGED IN' Identity is created  4 'MISSION SELECTED' Mission is selected  5 'MISSION ASKED' Server was asked to send / not send mission  6 'ROLE ASSIGNED' Role was assigned (and confirmed)  7 'MISSION RECEIVED' Mission received  8 'GAME LOADED' Island loaded, vehicles received  9 'BRIEFING SHOWN' Briefing was displayed  10 'BRIEFING READ' Ready to play mission  11 'GAME FINISHED' Game was finished  12 'DEBRIEFING READ' Debriefing read, ready to continue with next mission", syntax: "getClientStateNumber", returns: "null", example: "_state = getClientStateNumber;", game: "Arma 3", version: 1.56 },
    { id: 793, name: "getConnectedUAV", description: "Returns UAV if unit has connection to some UAV.", syntax: "getConnectedUAV unit", returns: "Object", example: "null", game: "Arma 3", version: 0.76 },
    { id: 794, name: "getContainerMaxLoad", description: "Returns max load value of given container. Currently works only with uniform, vest and backpack classes.", syntax: "getContainerMaxLoad containerClass", returns: "Number - load value, -1 if not available.", example: "_maxLoadUniform = getContainerMaxLoad uniform player; _maxLoadVest = getContainerMaxLoad vest player; _maxLoadBackpack = getContainerMaxLoad backpack player;", game: "Arma 3", version: 1.62 },
    { id: 795, name: "getCursorObjectParams", description: "Returns the object under cursor, named selection pointed at as well as distance to the object.", syntax: "getCursorObjectParams", returns: "null", example: "hint str getCursorObjectParams;", game: "Arma 3", version: 1.7 },
    { id: 796, name: "getCustomAimCoef", description: "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.", syntax: "getCustomAimCoef unit", returns: "Number", example: "null", game: "Arma 3", version: 1.54 },
    { id: 797, name: "getDammage", description: "Returns the object damage in the range from 0 to 1. Alias of damage.", syntax: "getDammage object", returns: "Number", example: "_damage = getDammage player;", game: "Operation Flashpoint", version: 1 },
    { id: 798, name: "getDescription", description: "Returns the string representation of unit as an four slots array.", syntax: "getDescription unit", returns: "Array - [unit, uniform, vest, backpack]", example: "null", game: "Arma 3", version: 0.5 },
    { id: 799, name: "getDir", description: "Returns the object heading in the range from 0 to 360.    Since Arma 3 v1.55.133361, an alternative syntax is added that allows to get heading from one object or position to another object or position, the equivalent of BIS_fnc_dirTo", syntax: "getDir object", returns: "Number", example: "_azimuth =  getDir player;", game: "Operation Flashpoint", version: 1 },
    { id: 800, name: "getDirVisual", description: "Returns object's heading in the range from 0 to 360 in render time scope.", syntax: "getDirVisual object", returns: "Number", example: "_dir = getDirVisual player;", game: "Arma 3", version: 1.32 },
    { id: 801, name: "getDLCs", description: "Returns array of appIDs of DLCs. Use filter param to get specific type of DLCs:   0 - all  1 - owned  2 - not owned", syntax: "getDLCs filter", returns: "Array - array of numbers", example: "_ownedDLCs = getDLCs 1;", game: "Arma 3", version: 1.16 },
    { id: 802, name: "getEditorCamera", description: "Fetches a reference to the mission editor camera.", syntax: "getEditorCamera map", returns: "Object", example: "null", game: "Arma 2", version: 1 },
    { id: 803, name: "getEditorMode", description: "Returns the current mode of the editor.", syntax: "getEditorMode map", returns: "String", example: "null", game: "Arma 2", version: 1 },
    { id: 804, name: "getEditorObjectScope", description: "Returns the editor object scope of the specified editor object.", syntax: "map getEditorObjectScope object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 805, name: "getElevationOffset", description: "Returns the map elevation offset from [map]/config.cpp.  Returns 0 if there's no elevationOffset defined in the config of the current world.", syntax: "getElevationOffset", returns: "null", example: "_offset = getElevationOffset;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 806, name: "getFatigue", description: "Returns fatigue of given unit.", syntax: "getFatigue unit", returns: "Number", example: "value = getFatigue player;", game: "Arma 3", version: 0.5 },
    { id: 807, name: "getForcedFlagTexture", description: "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture", syntax: "getForcedFlagTexture object", returns: "String", example: "getForcedFlagTexture player;", game: "Arma 3", version: 1.7 },
    { id: 808, name: "getFriend", description: "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. See also Side relations.", syntax: "side1 getFriend side2", returns: "side2: Side", example: "value = west getFriend east;", game: "Arma 2", version: 1 },
    { id: 809, name: "getFSMVariable", description: "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.", syntax: "FSMhandle getFSMVariable name", returns: "name: String - name of the variable", example: "_handle getFSMVariable '_foo';", game: "Arma 2", version: 1 },
    { id: 810, name: "getFuelCargo", description: "Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle.", syntax: "getFuelCargo vehicle", returns: "Number", example: "value = getFuelCargo myVehicleName;", game: "Arma 3", version: 0.56 },
    { id: 811, name: "getGroupIcon", description: "Get group icon properties.", syntax: "group getGroupIcon ID", returns: "ID: Number -", example: "null", game: "Arma 2", version: 1 },
    { id: 812, name: "getGroupIconParams", description: "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.", syntax: "getGroupIconParams group", returns: "Array in format [color, text, scale, visibility, WPvisibility WPcolor], where:  color: Array - icon color in format [r,g,b,a]  text: String - icon text  scale: Number - icon scale  visibility: Boolean - icon visibility  WPvisibility: Boolean - waypoint visibility  WPcolor: Array - waypoint color in format [r,g,b,a]", example: "_iconParams = getGroupIconParams group player;", game: "Arma 2", version: 1 },
    { id: 813, name: "getGroupIcons", description: "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]", syntax: "getGroupIcons group", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 814, name: "getHideFrom", description: "Returns the Position where object believes the enemy to be. If there is no direct line of sight between the object and the enemy, this position is extrapolated based on the last known position and speed of the enemy. A returned position of [0,0,0] implies that object does not knowAbout enemy. If enemy is null it is some position in front of the object or enemy position.", syntax: "object getHideFrom enemy", returns: "enemy: Object", example: "null", game: "Armed Assault", version: 1 },
    { id: 815, name: "getHit", description: "Returns selection damage. Same as getHitPointDamage only argument is selection part instead of hit point. Note: Some part names are in Czech; see translation table.", syntax: "vehicle getHit selection", returns: "selection: String - selection part name", example: "player getHit 'head';", game: "Arma 3", version: 1.32 },
    { id: 816, name: "getHitIndex", description: "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.  0: no damage  1: full damage", syntax: "vehicle getHitIndex hitPartIndex", returns: "hitPartIndex: Number - hit part index of the Hit Point", example: "vehicle player getHitIndex 3;", game: "Arma 3", version: 1.5 },
    { id: 817, name: "getHitPointDamage", description: "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit.  0: no damage  1: full damage", syntax: "vehicle getHitPointDamage hitPointName", returns: "hitPointName: String - name of the Hit Point class", example: "(vehicle player) getHitPointDamage 'hitEngine';", game: "Take On Helicopters", version: 1 },
    { id: 818, name: "getItemCargo", description: "Returns all items names and count from ammo box (or any general weapon holder container).", syntax: "getItemCargo box", returns: "Array of Arrays - Format: [['5ItemsType1','10ItemsType2'],[5,10]]", example: "hint str getItemCargo cursorTarget;", game: "Arma 3", version: 0.5 },
    { id: 819, name: "getMagazineCargo", description: "Returns all magazines types and count from the cargo space", syntax: "result = getMagazineCargo object", returns: "Array of arrays. [['5MagsType1','10MagsType2'],[5,10]]", example: "_content = getMagazineCargo carName;", game: "Arma 2: Operation Arrowhead", version: 1.54 },
    { id: 820, name: "getMarkerColor", description: "Returns marker color for given marker. See setMarkerColor.   Note: This function is identical to markerColor.", syntax: "getMarkerColor markerName", returns: "String", example: "MarkerOne' setMarkerColor 'ColorBlack'; _color = getMarkerColor 'MarkerOne'; //returns 'ColorBlack'", game: "Operation Flashpoint", version: 1.21 },
    { id: 821, name: "getMarkerPos", description: "Returns the position of a given marker in format [x,y,0]. Array element 3 (height above ground) is always zero. If a non-existing marker is referenced the values returned are [0,0,0].", syntax: "getMarkerPos markerName", returns: "Array - position in format [x,y,0]", example: "MarkerOne' setMarkerPos [200,100]; _pos = getMarkerPos 'MarkerOne'", game: "Operation Flashpoint", version: 1 },
    { id: 822, name: "getMarkerSize", description: "Returns the size of the given marker. A getter for setMarkerSize and an alias of markerSize.", syntax: "getMarkerSize markerName", returns: "Array - in format [a-axis, b-axis], where:  a-axis: Number - 1/2 width of marker  b-axis: Number - 1/2 height of marker", example: "MarkerOne' setMarkerSize [100,200]; _size = getMarkerSize 'MarkerOne'; //returns [100,200]", game: "Operation Flashpoint", version: 1.21 },
    { id: 823, name: "getMarkerType", description: "Returns the type of a given marker. See cfgMarkers for a list of standard markers.", syntax: "String =  getMarkerType markerName", returns: "String. See cfgMarkers.  If the marker does not exist, the returned type is an empty string, ie ''", example: "null", game: "Operation Flashpoint", version: 1.21 },
    { id: 824, name: "getMass", description: "Returns mass of a PhysX object.", syntax: "getMass object", returns: "Number", example: "_mass = getMass _myCar", game: "Arma 3", version: 1.12 },
    { id: 825, name: "getMissionConfig", description: "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:  External Description.ext file  Eden Editor scenario attribute So if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.", syntax: "getMissionConfig attribute", returns: "Config", example: "_header = getMissionConfig 'Header'", game: "Arma 3", version: 1.56 },
    { id: 826, name: "getMissionConfigValue", description: "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:  External Description.ext file  Eden Editor scenario attribute So if attribute exists in both places, attribute from description.ext is used. Previously, scenario attributes were extracted from Description.ext using missionConfigFile. That still works, but it ignores attributes set directly in the editor and it should not be used anymore.", syntax: "getMissionConfigValue attribute", returns: "Number, String or Array, depending on the attribute value type. Nil when the attribute is undefined.", example: "_respawnDelay = getMissionConfigValue ['respawnDelay',0]", game: "Arma 3", version: 1.56 },
    { id: 827, name: "getMissionDLCs", description: "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!", syntax: "getMissionDLCs", returns: "null", example: "null", game: "Arma 3", version: 1.62 },
    { id: 828, name: "getMissionLayerEntities", description: "Returns all entities within specific Eden Editor layer. To be used when the scenario is running, not in the editor workspace.  Useful for disabling / enabling whole parts of the scenario which you add to specific layer while editing.", syntax: "getMissionLayerEntities layerName", returns: "Array in format [objects:Array, markers:Array]", example: "[objects:Array, markers:Array]", game: "Arma 3", version: 1.56 },
    { id: 829, name: "getModelInfo", description: "Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command.", syntax: "getModelInfo object", returns: "Array - [modelName, modelPath, hasSkeleton]", example: "_modelInfo = getModelInfo player;", game: "Arma 3", version: 1.5 },
    { id: 830, name: "getMousePosition", description: "Returns mouse position in UI coordinates.", syntax: "getMousePosition", returns: "null", example: "_pos = getMousePosition;", game: "Arma 3", version: 1.54 },
    { id: 831, name: "getNumber", description: "Extract number from config entry.", syntax: "Number = getNumber config", returns: "Number", example: "_value = getNumber (configFile >> 'CfgVehicles' >> 'Thing' >> 'maxSpeed');", game: "Armed Assault", version: 1 },
    { id: 832, name: "getObjectArgument", description: "Return name of object argument in mission editor.", syntax: "map getObjectArgument [object, argument]", returns: "object: Object", example: "// returns string '[1009.0351, 1319.4928]' (findDisplay 128 displayCtrl 51) getObjectArgument ['_unit_1', 'POSITION']  // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument ['_unit_1', 'POSITION']", game: "Arma 2", version: 1 },
    { id: 833, name: "getObjectChildren", description: "Return a list of all the children of the specified object.", syntax: "map getObjectChildren object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 834, name: "getObjectDLC", description: "Returns appID of the DLC the object belongs to or nil if object is vanilla.", syntax: "getObjectDLC obj", returns: "Number or Nothing", example: "_appID = getObjectDLC cursorTarget; if (!isNil '_appID') then { 	hint format ['This object belongs to DLC with id: %1', _appID]; } else { 	hint 'This object is vanilla'; };", game: "Arma 3", version: 1.36 },
    { id: 835, name: "getObjectMaterials", description: "Gets all custom materials associated with the object.", syntax: "getObjectMaterials obj", returns: "Array of Strings - array of materials", example: "_materials = getObjectMaterials car;", game: "Arma 3", version: 1.38 },
    { id: 836, name: "getObjectProxy", description: "Return the proxy object associated with the given editor object.", syntax: "map getObjectProxy object", returns: "object: String -", example: "(findDisplay 128 displayCtrl 51) getObjectProxy '_unit_1' // returns the object 'B 1-1-A:1 (Sean Johnson)'", game: "Arma 2", version: 1 },
    { id: 837, name: "getObjectTextures", description: "Gets all custom textures (hiddenSelectionsTextures) associated with the object.", syntax: "getObjectTextures obj", returns: "Array of Strings - array of textures", example: "_textures = getObjectTextures player;", game: "Arma 3", version: 1.38 },
    { id: 838, name: "getObjectType", description: "Returns object type as a number:  1 - Primary - Normal object placed in Visitor, part of landscape  2 - Network - Road placed in Visitor, part of landscape  4 - Temporary - Temporary object (like tracks)  8 - TypeVehicle - Some entity added by game  16 - TypeTempVehicle - Temporary entity  32 - LandDecal - Land decal", syntax: "getObjectType object", returns: "Number - Object type", example: "_objType = getObjectType player;", game: "Arma 3", version: 1.5 },
    { id: 839, name: "getObjectViewDistance", description: "Gets the values of rendering distances of objects and shadows.", syntax: "getObjectViewDistance", returns: "null", example: "_arr = getObjectViewDistance;", game: "Arma 3", version: 1.48 },
    { id: 840, name: "getOxygenRemaining", description: "Returns amount of remaining oxygen.", syntax: "getOxygenRemaining unit", returns: "Number", example: "_oxygen = getOxygenRemaining player;", game: "Arma 3", version: 0.5 },
    { id: 841, name: "getPersonUsedDLCs", description: "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.           This command is broken and doesnt work on dedicated server", syntax: "getPersonUsedDLCs unit", returns: "Array", example: "_objects = getPersonUsedDLCs player;", game: "Arma 3", version: 1.36 },
    { id: 842, name: "getPilotCameraDirection", description: "Returns model space vector of the object airplane or helicopter pilotCamera .", syntax: "getPilotCameraDirection object", returns: "Array - [x,y,z] - format Vector3D relative to the model centre (In a similar fashion to PositionRelative). Returns [0,0,0] if object has no pilotCamera.", example: "_pilotCamVector = getPilotCameraDirection vehicle player", game: "Arma 3", version: 1.64 },
    { id: 843, name: "getPilotCameraPosition", description: "Returns model space coordinates of the object airplane or helicopter pilotCamera .", syntax: "getPilotCameraPosition object", returns: "Array - [x,y,z] offset relative to the model centre, format PositionRelative. Returns [0,0,0] if object has no pilotCamera.", example: "_pilotCamPos = getPilotCameraPosition vehicle player", game: "Arma 3", version: 1.64 },
    { id: 844, name: "getPilotCameraRotation", description: "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", syntax: "getPilotCameraRotation object", returns: "Array - [x,y] - format [yaw (turn), pitch (elevation)]. Positive values are left yaw and down pitch from the center. Returns [0,0] when camera is centered but also if object has no pilotCamera.", example: "_pilotCamRot = getPilotCameraRotation vehicle player", game: "Arma 3", version: 1.64 },
    { id: 845, name: "getPilotCameraTarget", description: "Returns the target of the object airplane or helicopter pilotCamera tracking.", syntax: "getPilotCameraTarget object", returns: "Array - [isTracking, targetPosition, targetObject]; returns [false,[0,0,0],<NULL-object>] if camera is not in a tracking mode or if object has no pilotCamera.   isTracking: Bool - returns whether the camera is in a tracking mode  targetPosition: Array - format PositionASL, returns the position of the tracked area or object  targetObject: Object - returns the tracked object, objNull if camera is only tracking an area", example: "_pilotCamTrack = (getPilotCameraTarget vehicle player) select 0; _pilotCamTargetPos = (getPilotCameraTarget vehicle player) select 1; _pilotCamTarget = (getPilotCameraTarget vehicle player) select 2;", game: "Arma 3", version: 1.64 },
    { id: 846, name: "getPlayerChannel", description: "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:  It does not work on dedicated server, the return is always -1, only client can detect other client talking.  It does not detect when someone talks on direct chat at all anywhere.   The client on which command is executed has to able to receive transmission before the transmission channel can be detected. For example if a player is not in the same group as a speaker and the speaker speaks on Group Channel, the player cannot hear the speaker and therefore cannot detect what channel the speaker is on. In short, this command mimics the speaking icon from the UI. Correspondence between channel and number:  0 = Global  1 = Side  2 = Command  3 = Group  4 = Vehicle  5 = Direct (Is not detected by getPlayerChannel)  6-15 = Custom Radio (see radioChannelCreate)", syntax: "getPlayerChannel player", returns: "Number", example: "_channel = getPlayerChannel player;", game: "Arma 3", version: 1.42 },
    { id: 847, name: "getPlayerScores", description: "In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). In SP: empty array []", syntax: "getPlayerScores unitName", returns: "Array - the score of the given player in format [infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score]", example: "getPlayerScores BIS_player1;", game: "Arma 3", version: 1.56 },
    { id: 848, name: "getPlayerUID", description: "Return an uniqueID of the given unit as string if it's player and empty value if it's AI. The unique ID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).    Note: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.", syntax: "getPlayerUID unit", returns: "String ('_SP_AI_', '_SP_PLAYER_' in SP, '' or UID number string in MP)", example: "_uid = getPlayerUID player;", game: "Arma 2", version: 1.02 },
    { id: 849, name: "getPos", description: "Returns the object position in format PositionAGLS. Z value is height over the surface underneath.    Since Arma 3 v1.55.133361, an alternative syntax is added that allows to get position given distance and heading away from original object or position, the equivalent of BIS_fnc_relPos", syntax: "getPos object", returns: "Array - format PositionAGLS", example: "hintSilent str getPos player;", game: "Operation Flashpoint", version: 1 },
    { id: 850, name: "getPosASL", description: "Returns the object position height above sea level.", syntax: "Array = getPosASL object", returns: "Array - format PositionASL", example: "_AslPos = getPosASL player;", game: "Armed Assault", version: 1 },
    { id: 851, name: "getPosASLVisual", description: "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL.", syntax: "getPosASLVisual object", returns: "Array - format PositionASL", example: "_playerRenderedPosASL = getPosASLVisual player;", game: "Arma 3", version: 1.32 },
    { id: 852, name: "getPosASLW", description: "Returns the object position height above sea surface (waves included).", syntax: "getPosASLW obj", returns: "Array - PositionASLW", example: "_pos = getPosASLW _diver;", game: "Arma 3", version: 0.5 },
    { id: 853, name: "getPosATL", description: "Returns the position of an object relative to the terrain.", syntax: "getPosATL object", returns: "Array - format PositionATL", example: "_objPosition = getPosATL player", game: "Arma 2", version: 1.03 },
    { id: 854, name: "getPosATLVisual", description: "Returns an object's rendered 3D position ATL (z value above ground) in render time scope.", syntax: "getPosATLVisual object", returns: "Array - format PositionATL", example: "_playerRenderedPosATL = getPosATLVisual player;", game: "Arma 3", version: 1.32 },
    { id: 855, name: "getPosVisual", description: "Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope. Alias of visiblePosition.", syntax: "getPosVisual object", returns: "Array - format PositionAGLS", example: "_playerRenderedPos = getPosVisual player;", game: "Arma 3", version: 1.32 },
    { id: 856, name: "getPosWorld", description: "Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices.", syntax: "getPosWorld object", returns: "Array - format PositionWorld", example: "_obj setPosWorld getPosWorld _obj;", game: "Arma 3", version: 1.32 },
    { id: 857, name: "getPylonMagazines", description: "Return array of magazines on pylons", syntax: "getPylonMagazines vehicle", returns: "Array of Strings (magazine classnames)", example: "getPylonMagazines (vehicle player)", game: "Arma 3", version: 1.7 },
    { id: 858, name: "getRelDir", description: "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo.", syntax: "object getRelDir position", returns: "position: Object, Position2D or Position3D", example: "_reldir = player getRelDir tank;", game: "Arma 3", version: 1.56 },
    { id: 859, name: "getRelPos", description: "Returns position, which is given distance and relative direction away from original object.", syntax: "object getRelPos [distance, direction]", returns: "[distance, direction]: Array", example: "_relpos = player getRelPos [100, 90];", game: "Arma 3", version: 1.56 },
    { id: 860, name: "getRemoteSensorsDisabled", description: "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.", syntax: "getRemoteSensorsDisabled", returns: "null", example: "_status = getRemoteSensorsDisabled;", game: "Arma 3", version: 1.52 },
    { id: 861, name: "getRepairCargo", description: "Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle.", syntax: "getRepairCargo vehicle", returns: "Number", example: "value = getRepairCargo vehicleName;", game: "Arma 3", version: 0.56 },
    { id: 862, name: "getResolution", description: "Returns an array containing all information about resolution.   The returned Array is as follow: [width, height, 2D viewport width, 2D viewport height, aspect ratio, UI scale]   Note: aspect ratio and UI scale are returned as coefficients and not 16:9 for example.", syntax: "getResolution", returns: "_res = getResolution; //some triple monitor setup [ 	5760,		//width 	1080,		//height 	792,		//2D viewport width 	594,		//2D viewport height 	5.33333,	//aspect ratio 	0.55		//UI scale ]", example: "_res = getResolution; //some single monitor setup", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 863, name: "getShadowDistance", description: "Gets the shadows rendering distance.", syntax: "getShadowDistance", returns: "null", example: "_value = getShadowDistance;", game: "Arma 3", version: 1 },
    { id: 864, name: "getShotParents", description: "Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.", syntax: "getShotParents projectile", returns: "Array - [vehicle, instigator]", example: "_shotParents = getShotParents myProjectile;", game: "Arma 3", version: 1.62 },
    { id: 865, name: "getSlingLoad", description: "Return object which is sling loaded by vehicle", syntax: "getSlingLoad vehicle", returns: "Object", example: "_cargo = getSlingLoad heli1;", game: "Arma 3", version: 1.34 },
    { id: 866, name: "getSpeed", description: "Get the speed for the given speed mode.  SpeedMode can be: 'AUTO' 'SLOW' 'NORMAL' 'FAST'", syntax: "object getSpeed speedMode", returns: "speedMode: String", example: "_spd = player getSpeed 'FAST';", game: "Armed Assault", version: 1 },
    { id: 867, name: "getStamina", description: "Get current stamina (~ seconds until depletion)", syntax: "getStamina unit;", returns: "Number", example: "getStamina player;", game: "Arma 3", version: 1.54 },
    { id: 868, name: "getStatValue", description: "Returns value of the given  stat.", syntax: "getStatValue name", returns: "Number", example: "getStatValue 'ExpWarlockDown'; //Checks if the 'Warlock Down' Achivement was already aquired", game: "Arma 3", version: 1.18 },
    { id: 869, name: "getSuppression", description: "Gets the suppression value of given unit. Returns SCALAR between 0 and 1. Suppression is not calculated for player entities.", syntax: "getSuppression unit", returns: "Number", example: "getSuppression AI_unit_1;", game: "Arma 3", version: 1.42 },
    { id: 870, name: "getTerrainHeightASL", description: "Returns the terrain height above the sea for the given position.", syntax: "getTerrainHeightASL position", returns: "Number", example: "_height = getTerrainHeightASL (position player);", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 871, name: "getText", description: "Extract text from config entry.", syntax: "String = getText config", returns: "String", example: "_text = getText (configFile >> 'CfgVehicles' >> 'Thing' >> 'icon');", game: "Armed Assault", version: 1 },
    { id: 872, name: "getUnitLoadout", description: "Returns an array with all assigned items, weapons, containers and their stored items. Detailed explanation of the returned array: Talk:getUnitLoadout         This command is not final and might be changed in a near future.", syntax: "getUnitLoadout unit", returns: "Array - Array containing all inventory items", example: "getUnitLoadout player;", game: "Arma 3", version: 1.58 },
    { id: 873, name: "getUnitTrait", description: "Gets the current value of a trait of the given unit.    Default traits are:   audibleCoef (scalar)  camouflageCoef (scalar)  engineer (bool)  explosiveSpecialist (bool)  loadCoef (scalar)  medic (bool)  UAVHacker (bool)", syntax: "unit getUnitTrait skill_name", returns: "skill_name: String - Name of the skill", example: "player getUnitTrait 'Medic';", game: "Arma 3", version: 1.58 },
    { id: 874, name: "getVariable", description: "Return the value of variable in the variable space assigned to various data types. In case of Alt Syntax usage in Arma 3, the default value will be returned if:  Requested variable is either undefined or nil  Variable namespace is null (objNull, grpNull, etc.)  All available data types combinations:  Namespace getVariable String  Namespace getVariable Array (since Arma 2 1.60)  Object getVariable String  Object getVariable Array  Group getVariable String  Group getVariable Array  Team_Member getVariable String  Team_Member getVariable Array  Task getVariable String  Task getVariable Array (Since Arma 3 v1.67)  Location getVariable String  Location getVariable Array (Since Arma 3 v1.67)  Control getVariable String (since Arma 3 v1.55.133553)  Control getVariable Array (since Arma 3 v1.55.133553)  Display getVariable String (since Arma 3 v1.55.133553)  Display getVariable Array (since Arma 3 v1.55.133553) When variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM getVariable will not work.", syntax: "varspace getVariable name", returns: "name: String - Variable name that was defined in setVariable", example: "_thePublicVariable = _myTruck getVariable 'myPublicVariable';", game: "Armed Assault", version: 1 },
    { id: 875, name: "getVehicleCargo", description: "Gets a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.", syntax: "getVehicleCargo vehicle", returns: "Array - if there are no vehicles loaded as cargo an empty array ([]) will be returned, otherwise an array of objects will be returned representing the cargo vehicles", example: "_vehicleCargo = getVehicleCargo blackfish; //returns []", game: "Arma 3", version: 1.62 },
    { id: 876, name: "getWeaponCargo", description: "Returns all weapons types and count from the cargo space", syntax: "result = getWeaponCargo object", returns: "Array - format [all_types_array, all_counts_array]. Eg: [['a', 'b'], [3, 2]]", example: "_content = getWeaponCargo carName;", game: "Arma 2: Operation Arrowhead", version: 1.54 },
    { id: 877, name: "getWeaponSway", description: "Returns current size of weapon sway of a given unit, in radians", syntax: "getWeaponSway unit", returns: "Number: weapon sway", example: "null", game: "Arma 3", version: 1.62 },
    { id: 878, name: "getWPPos", description: "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.", syntax: "Array = getWPPos [group, index]", returns: "group: Group - the group/unit, of which you want to select a waypoint", example: "[_group1,1] setWPPos [200,600,0]; _pos = getWPPos [_group1,1];", game: "Operation Flashpoint", version: 1.21 },
    { id: 879, name: "glanceAt", description: "Control what the unit is glancing at (target or Position).  How frequently the unit is glancing there depends on behaviour.", syntax: "unit(s) glanceAt position", returns: "position: Object or Array", example: "_someSoldier glanceAt _otherSoldier", game: "Armed Assault", version: 1 },
    { id: 880, name: "globalChat", description: "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", syntax: "unitName globalChat chatText", returns: "chatText: String - message to transmit", example: "_soldierOne globalChat 'Show this text';", game: "Operation Flashpoint", version: 1 },
    { id: 881, name: "globalRadio", description: "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).   Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit globalRadio radioName", returns: "radioName: String - class name from CfgRadio", example: "_soldierOne globalRadio 'messageOne';", game: "Operation Flashpoint", version: 1 },
    { id: 882, name: "goggles", description: "Returns name of currently used goggles (for NVGoggles use hmd).", syntax: "goggles unit", returns: "String", example: "_goggles = goggles assaultDiver; //G_Diving", game: "Arma 3", version: 0.5 },
    { id: 883, name: "goto", description: "In SQS scripts only: Go to given label.  String argument is used here. Be sure to use double quotes around label name in goto. Define the label with #. Note that Labels are not case sensitive and that labels are searched for from the top of the script, so multiple occurrences of a label will only result in the top most one ever being found.", syntax: "goto label", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 884, name: "group", description: "Returns the group a unit is assigned to.", syntax: "group object", returns: "Group -   For dead units, the returned group equals grpNull.", example: "_playerGrp = group player", game: "Operation Flashpoint", version: 1 },
    { id: 885, name: "groupChat", description: "Types text to the group radio channel. Must have assigned 'ItemRadio' to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", syntax: "unitName groupChat chatText", returns: "chatText: String - message to transmit", example: "_soldierOne groupChat 'Show this text';", game: "Operation Flashpoint", version: 1 },
    { id: 886, name: "groupFromNetId", description: "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.", syntax: "groupFromNetId id", returns: "Group", example: "_group = groupFromNetId '4:45';", game: "Arma 3", version: 0.5 },
    { id: 887, name: "groupIconSelectable", description: "Return if groups icon raises onClick and onOver events.", syntax: "groupIconSelectable", returns: "null", example: "null", game: "Arma 2", version: 1 },
    { id: 888, name: "groupIconsVisible", description: "Return group icons are visible.", syntax: "groupIconsVisible", returns: "null", example: "null", game: "Arma 2", version: 1 },
    { id: 889, name: "groupId", description: "Returns group name.", syntax: "groupId group", returns: "String", example: "_name = groupId (group player);", game: "Arma 3", version: 0.5 },
    { id: 890, name: "groupOwner", description: "Returns ID of client to which the group is local. Can be run only from server. When called from client, it always returns 0", syntax: "groupOwner group", returns: "Number", example: "_clientID = groupOwner _someGroup;", game: "Arma 3", version: 1.4 },
    { id: 891, name: "groupRadio", description: "Sends the audio message to the group radio channel. Must have assigned 'ItemRadio' to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).   Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit groupRadio radioName", returns: "radioName: String - class name from CfgRadio", example: "_soldierOne groupRadio 'messageOne';", game: "Operation Flashpoint", version: 1 },
    { id: 892, name: "groupSelectedUnits", description: "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected.", syntax: "groupSelectedUnits unit", returns: "Array", example: "_selectedUnits = groupSelectedUnits player;", game: "Arma 2", version: 1 },
    { id: 893, name: "groupSelectUnit", description: "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.", syntax: "player groupSelectUnit [unit, select]", returns: "[unit, select]: Array", example: "{     player groupSelectUnit [_x, false]; } forEach (groupSelectedUnits player);", game: "Arma 2", version: 1 },
    { id: 894, name: "grpNull", description: "A non-existing Group. To compare non-existent groups use isNull or isEqualTo:  grpNull == grpNull; // false  isNull grpNull; // true  grpNull isEqualTo grpNull; // true", syntax: "grpNull", returns: "null", example: "!isNull grpNull; // false", game: "Operation Flashpoint", version: 1 },
    { id: 895, name: "gunner", description: "Returns the gunner of a vehicle.", syntax: "Object = gunner vehicle", returns: "Object -   The person sitting in the gunner place is returned. If vehicle is not a vehicle but a person, the person is returned.", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 896, name: "gusts", description: "Return the current gusts value. Scale is 0 to 1.", syntax: "gusts", returns: "null", example: "_gustsval = gusts;", game: "Arma 3", version: 0.5 },
    { id: 897, name: "halt", description: "Stops the program into a debugger. In retail version using halt results in error.", syntax: "halt", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 898, name: "handgunItems", description: "Returns array with all items assigned to the handgun. This command is used for infantry weapons only.", syntax: "handgunItems unit", returns: "Array - [silencer, laserpointer/flashlight, optics, bipod]", example: "handgunItems player;  /* [ 	'muzzle_snds_L',	//silencer 	'',			//laser 	'',			//optics 	''			//bipod ] */", game: "Arma 3", version: 0.5 },
    { id: 899, name: "handgunMagazine", description: "Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or handgun is not loaded. This command is used for infantry weapons only.", syntax: "handgunMagazine unit", returns: "Array", example: "hint handgunMagazine player; //['16Rnd_9x21_Mag']", game: "Arma 3", version: 0.7 },
    { id: 900, name: "handgunWeapon", description: "Returns the name of a unit's handgun (an empty string if there is none).", syntax: "handgunWeapon unit", returns: "String", example: "hint handgunWeapon player; //'hgun_P07_F'", game: "Arma 3", version: 0.5 },
    { id: 901, name: "handsHit", description: "Checks if a soldier's hands are hit, which results in inaccurate aiming.", syntax: "Number = handsHit unitName", returns: "Number -   If the hands aren't damaged, the returned value is 0. If the hands are hit or the unit is dead, the returned value is 1.", example: "? (handsHit player == 1) : player globalChat 'Ouch! Don't shoot at my hands dammit!'", game: "Operation Flashpoint", version: 1 },
    { id: 902, name: "hasInterface", description: "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.", syntax: "hasInterface", returns: "null", example: "headless = !(hasInterface || isDedicated);", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 903, name: "hasPilotCamera", description: "Returns true if the object airplane or helicopter has a pilotCamera.", syntax: "hasPilotCamera object", returns: "bool", example: "hasPilotCamera vehicle player", game: "Arma 3", version: 1.64 },
    { id: 904, name: "hasWeapon", description: "Checks if a unit has the given weapon.", syntax: "Boolean = unitName hasWeapon weaponName", returns: "weaponName: String - the name of the weapon to check for.", example: "?!(player hasWeapon 'M16') : player addWeapon 'M16'", game: "Operation Flashpoint", version: 1 },
    { id: 905, name: "hcAllGroups", description: "Returns selected groups in high command.", syntax: "hcAllGroups unit", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 906, name: "hcGroupParams", description: "Returns parameters describing group in high command bar.   Return value is [string, float[4]]", syntax: "unit hcGroupParams group", returns: "group: Group -", example: "null", game: "Arma 2", version: 1 },
    { id: 907, name: "hcLeader", description: "Returns group's high command commander.", syntax: "hcLeader group", returns: "Object", example: "_leader = hcLeader groupName;", game: "Arma 2", version: 1 },
    { id: 908, name: "hcRemoveAllGroups", description: "Remove all groups from unit's high command bar.", syntax: "hcRemoveAllGroups unit", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 909, name: "hcRemoveGroup", description: "Removes group from unit's high command bar.", syntax: "unit hcRemoveGroup group", returns: "group: Group -", example: "null", game: "Arma 2", version: 1 },
    { id: 910, name: "hcSelected", description: "Returns selected groups in high command.", syntax: "hcSelected unit", returns: "Array", example: "array = hcSelected unit;", game: "Arma 2", version: 1 },
    { id: 911, name: "hcSelectGroup", description: "Select given group in high command bar.", syntax: "unit hcSelectGroup array", returns: "array: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 912, name: "hcSetGroup", description: "Add group to unit's high command bar.   Array parameters are group, group-name and team (teammain, teamred, teamgreen, teamblue, teamyellow).   Group is the only necessary parameter.", syntax: "unit hcSetGroup array", returns: "array: Array -", example: "unit hcSetGroup [group, 'HQ', teamred];", game: "Arma 2", version: 1 },
    { id: 913, name: "hcShowBar", description: "Shows or hides high command bar.   There must be some groups under HC command to show HC bar.", syntax: "hcShowBar bool", returns: "Nothing", example: "hcShowBar true;", game: "Arma 2", version: 1 },
    { id: 914, name: "hcShownBar", description: "Return true if the high command bar is shown/active.", syntax: "hcShownBar", returns: "null", example: "if (hcShownBar) then {hint 'HC bar is active';};", game: "Arma 2", version: 1 },
    { id: 915, name: "headgear", description: "Returns headgear of unit.", syntax: "headgear unit", returns: "String", example: "hint headgear player; //H_HelmetB", game: "Arma 3", version: 0.5 },
    { id: 916, name: "hideBody", description: "Hides dead body of the given unit. After a short delay, the body slowly sinks into the ground. After awhile, when group of the unit becomes grpNull, the body gets deleted and becomes objNull.", syntax: "hideBody unit", returns: "Nothing", example: "hideBody player1;", game: "Armed Assault", version: 1 },
    { id: 917, name: "hideObject", description: "Hide entity. Can be used on soldiers and vehicles, also on static objects.", syntax: "hideObject object", returns: "Nothing", example: "hideObject unitName;", game: "Arma 2", version: 1.06 },
    { id: 918, name: "hideObjectGlobal", description: "MP command. Hides object on all connected clients as well as JIP. Call on the server only. Can be used on all objects with class names, i.e. (typeOf object != '').", syntax: "hideObjectGlobal object", returns: "Nothing", example: "hideObjectGlobal nearestBuilding [2500,2500,0];", game: "Arma 3", version: 1.12 },
    { id: 919, name: "hideSelection", description: "Hides or enables the given selection for the object", syntax: "object hideSelection [selection, hidden];", returns: "hidden: Bool - Hide this?", example: "null", game: "Arma 3", version: 1.58 },
    { id: 920, name: "hint", description: "Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma). This version of hint is supposed to play a sound when hint is shown, but this varies between games and versions. Use hintSilent for soundless hint.  The effect of this command is local, i.e. the hint will only show on the computer command was executed.", syntax: "hint text", returns: "Nothing", example: "hint format ['Hello %1',player ]", game: "Operation Flashpoint", version: 1 },
    { id: 921, name: "hintC", description: "Displays attractive hint in the center of the screen. Player control is taken away until user presses 'Continue'. After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.", syntax: "hintC content", returns: "Nothing", example: "hintC 'Press W to move forward';", game: "Operation Flashpoint", version: 1 },
    { id: 922, name: "hintCadet", description: "Shows a text hint only when in cadetMode.  The text can contain several lines. \n is used to indicate the end of a line.", syntax: "hintCadet text", returns: "Nothing", example: "hintCadet 'Press W to move forward';", game: "Operation Flashpoint", version: 1 },
    { id: 923, name: "hintSilent", description: "Same as hint, but without a sound.", syntax: "hintSilent text", returns: "Nothing", example: "hintSilent 'You texte comes here !'", game: "Arma 2", version: 1 },
    { id: 924, name: "hmd", description: "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.", syntax: "hmd unit", returns: "String", example: "_nvgs = hmd player; //NVGoggles", game: "Arma 3", version: 1.12 },
    { id: 925, name: "hostMission", description: "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog.  For example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded.  You need to provide the display which is active when the hostMission command is called.", syntax: "hostMission [pConfig, pDisplay]", returns: "pConfig: Config", example: "hostMission [configMissionName, display];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 926, name: "htmlLoad", description: "Load HTML from file to given control. File path is relative to current mission dir or an absolute path (with drive letter etc.). The command is subject to restrictions, imposed by CfgCommands class.", syntax: "control htmlLoad filename", returns: "filename: String", example: "_control htmlLoad 'briefing.html';", game: "Armed Assault", version: 1 },
    { id: 927, name: "HUDMovementLevels", description: "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]", syntax: "HUDMovementLevels", returns: "null", example: "HUDMovementLevels;//[0,0,0,0,0,0,[0,0,0]]", game: "Take On Helicopters", version: 1 },
    { id: 928, name: "humidity", description: "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.", syntax: "humidity", returns: "null", example: "currentHumidity = humidity;", game: "Arma 3", version: 0.5 },
    { id: 929, name: "if", description: "This operator creates a If Type which is used in the if-construct as described here.", syntax: "if condition", returns: "If Type - Predicate which will execute 1st or 2nd option when used. This predicate is used in then or exitWith commands.", example: "_retVal = if (1 > 0) then { 'It's true' } else { 'It's false' }; hint str _retVal", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 930, name: "image", description: "Creates a structured text containing the given image.", syntax: "Structured Text = image filename", returns: "Structured Text", example: "_txt1 = image 'data\isniper.paa';", game: "Armed Assault", version: 1 },
    { id: 931, name: "importAllGroups", description: "Imports all groups into the RTE.", syntax: "importAllGroups map", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 932, name: "importance", description: "Returns a location's importance value.", syntax: "importance location", returns: "Number", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 933, name: "in", description: "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.", syntax: "value in array", returns: "array: Array - array of values", example: "1 in [0,1,2]; //true", game: "Operation Flashpoint", version: 1 },
    { id: 934, name: "inArea", description: "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse.     Alternatively, use inAreaArray to check multiple positions/objects within area.", syntax: "position inArea trigger", returns: "trigger: Object - existing trigger", example: "_playerIsInside = player inArea _myTrigger;", game: "Arma 3", version: 1.58 },
    { id: 935, name: "inAreaArray", description: "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area", syntax: "positions inAreaArray trigger", returns: "trigger: Object - trigger with given area", example: "vehicles inAreaArray trigger_1;", game: "Arma 3", version: 1.66 },
    { id: 936, name: "incapacitatedState", description: "Returns the incapacitated state of the given unit.", syntax: "incapacitatedState person", returns: "String", example: "_result = incapacitatedState player;", game: "Arma 3", version: 1 },
    { id: 937, name: "independent", description: "Pre-defined variable for the independent side.   Alias for resistance.", syntax: "independent", returns: "null", example: "if ((side _unit) == independent) then {     hint 'This is a independent unit!'; };", game: "Arma 3", version: 0.5 },
    { id: 938, name: "inflame", description: "Control fireplace burning. Set inflame to true (on) or false (off).", syntax: "fireplace inflame burn", returns: "burn: Boolean", example: "_fireplaceOne inflame true;", game: "Operation Flashpoint", version: 1 },
    { id: 939, name: "inflamed", description: "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command.", syntax: "inflamed fireplace", returns: "Boolean", example: "_inflamed = inflamed _fireplaceOne;", game: "Operation Flashpoint", version: 1.04 },
    { id: 940, name: "inGameUISetEventHandler", description: "Sets given event handler of in-game UI. If EH function returns true, performed action is overridden. Event handlers available are:  'PrevAction' - mouse scroll up  'Action' - action key press  'NextAction' - mouse scroll down This is 'set' type EH, which means it will replace previously set EH of the same type. So to remove EH, set another one with empty string '' for the function.    Since Arma 3 v1.49.131743 this EH returns array of params for selected/activated action in _this variable:  0: Object - target object to which action is attached  1: Object - caller object, basically player  2: Number - index of the action in action menu (0 - top most)  3: String - engine based action name ('User' for user added actions)  4: String - localized action plain text as seen by the caller  5: Number - action priority value  6: Boolean - action showWindow value  7: Boolean - action hideOnUse value  8: String - action shortcut name or ''  9: Boolean - action menu visibility (on first scroll or action press the menu is still invisible, so no action is performed, only menu is shown)  10: String - EH event name", syntax: "inGameUISetEventHandler [handlerName, function]", returns: "handlerName: String", example: "inGameUISetEventHandler ['Action','hint 'Lights, Camera, Action!'; true'];", game: "Armed Assault", version: 1 },
    { id: 941, name: "inheritsFrom", description: "Returns base entry of config entry.", syntax: "inheritsFrom config", returns: "Config", example: "_base = inheritsFrom (configFile >> 'CfgVehicles' >> 'Car');", game: "Armed Assault", version: 1 },
    { id: 942, name: "initAmbientLife", description: "Initialize the ambient life.", syntax: "initAmbientLife", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 943, name: "inPolygon", description: "Checks whether position is inside given polygon", syntax: "position inPolygon polygon", returns: "polygon: Array - array of Position3D positions in format: [position1, position2...., positionN]", example: "_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];", game: "Arma 3", version: 1.54 },
    { id: 944, name: "inputAction", description: "Return the state of input devices mapped to given input action.   For Arma 3 inputActions see: inputAction/actions.   For Arma 3 inputActions bindings see: inputAction/actions/bindings.   For earlier Arma editions  see Category:Key Actions.", syntax: "inputAction name", returns: "Number", example: "inputAction 'leanLeft'", game: "Arma 2", version: 1 },
    { id: 945, name: "inRangeOfArtillery", description: "Returns true if all given units are able to fire at given position with given magazineType.", syntax: "pos inRangeOfArtillery [[unit], magazineType]", returns: "[[unit], magazineType]: Array", example: "_isInRange = getMarkerPos 'myTarget' inRangeOfArtillery [[myArty], '32Rnd_155mm_Mo_shells']", game: "Arma 3", version: 0.5 },
    { id: 946, name: "insertEditorObject", description: "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.", syntax: "map insertEditorObject [type,value,[name1,value1,...],subtype class]", returns: "[type,value,[name1,value1,...],subtype class]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 947, name: "intersect", description: "Finds named selections in object which are in specified LOD, intersected by given section of a line. Return value is in the form of [selection, distance]. Multiple returned arrays are nested within a single array. No intersection returns []. lodName could be one of the following:   'FIRE'  'VIEW'  'GEOM'  'IFIRE' - ('I' stands for Indirect, almost the same as FIRE)", syntax: "[object, lodName] intersect [begPos, endPos]", returns: "object: Object", example: "[_tank, 'VIEW'] intersect [[1500, 1500, 2], [1550, 1500, 2]];", game: "Armed Assault", version: 1 },
    { id: 948, name: "is3DEN", description: "Returns true if the Eden Editor is currently being used.", syntax: "is3DEN", returns: "null", example: "if is3DEN then {systemChat 'Welcome to Eden Editor!'};", game: "Arma 3", version: 1.56 },
    { id: 949, name: "is3DENMultiplayer", description: "Returns true if the Eden Editor is in multiplayer mode.", syntax: "is3DENMultiplayer", returns: "null", example: "if is3DENMultiplayer then {systemChat 'Your hosting a test server!'};", game: "Arma 3", version: 1.56 },
    { id: 950, name: "isAbleToBreathe", description: "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.", syntax: "isAbleToBreathe unit", returns: "Boolean", example: "null", game: "Arma 3", version: 0.5 },
    { id: 951, name: "isAgent", description: "Check if team member is an agent.", syntax: "isAgent teamMember", returns: "Boolean", example: "isAgent teamMember _unit", game: "Arma 2", version: 1 },
    { id: 952, name: "isArray", description: "Check if config entry represents array.", syntax: "Boolean =  isArray config", returns: "Boolean", example: "_ok = isArray (configFile >> 'CfgVehicles')", game: "Armed Assault", version: 1 },
    { id: 953, name: "isAutoHoverOn", description: "Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)", syntax: "isAutoHoverOn vehicle", returns: "Boolean", example: "status = isAutoHoverOn vehicle player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 954, name: "isAutonomous", description: "Returns true if UAV is in autonomous mode.", syntax: "isAutonomous uav", returns: "Boolean", example: "bool = isAutonomous uav;", game: "Arma 3", version: 1.16 },
    { id: 955, name: "isAutotest", description: "Returns true if game was started with autotest parameter", syntax: "isAutotest", returns: "null", example: "_bool = isAutotest", game: "Arma 3", version: 1.24 },
    { id: 956, name: "isBleeding", description: "Returns whether the unit is bleeding.", syntax: "isBleeding unit", returns: "Boolean", example: "if (isBleeding player) then { player groupChat 'I'm bleeding!!'; }", game: "Arma 3", version: 0.5 },
    { id: 957, name: "isBurning", description: "Returns whether the unit is burning. This returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.", syntax: "isBurning unit", returns: "Boolean", example: "if (isBurning player) then { player groupChat 'I'm burning!!'; }", game: "Arma 3", version: 0.5 },
    { id: 958, name: "isClass", description: "Check if config entry represents config class.", syntax: "Boolean = isClass config", returns: "Boolean", example: "_ok = isClass (configFile >> 'CfgVehicles');", game: "Armed Assault", version: 1 },
    { id: 959, name: "isCollisionLightOn", description: "Returns true if vehicle collision lights are on otherwise false.", syntax: "isCollisionLightOn vehicle", returns: "Boolean", example: "_collisionLightOn = isCollisionLightOn heli;", game: "Arma 3", version: 1.32 },
    { id: 960, name: "isCopilotEnabled", description: "Returns true if copilots actions are enabled.", syntax: "isCopilotEnabled vehicle", returns: "Boolean", example: "if (!isCopilotEnabled myHeli) then {     myHeli enableCopilot true; };", game: "Arma 3", version: 0.5 },
    { id: 961, name: "isDamageAllowed", description: "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. A complete solution for being able to tell whether or not an object can be damaged at current locality looks like this: _canBeDamaged = local _obj && isDamageAllowed _obj;", syntax: "isDamageAllowed object", returns: "Boolean", example: "_canBeDamaged = local _obj && isDamageAllowed _obj;", game: "Arma 3", version: 1.7 },
    { id: 962, name: "isDedicated", description: "Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false.", syntax: "isDedicated", returns: "null", example: "if (isDedicated) then {diag_log 'Dedicated Server on the run !';};", game: "Arma 2", version: 1 },
    { id: 963, name: "isDLCAvailable", description: "Returns true if the DLC is marked as available. (Steam)", syntax: "isDLCAvailable appid", returns: "Boolean", example: "_Karts = 288520; isDLCAvailable _Karts;//Returns true", game: "Arma 3", version: 1 },
    { id: 964, name: "isEngineOn", description: "Returns true if engine is on, false if it is off.", syntax: "isEngineOn vehicle", returns: "Boolean", example: "_OnOff = isEngineOn _carOne", game: "Operation Flashpoint: Resistance", version: 1.9 },
    { id: 965, name: "isEqualTo", description: "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.   Some differences between isEqualTo and ==:  It performs case sensitive comparison on Strings  It doesn't throw error when comparing different types, i.e. ('eleven' isEqualTo 11)  It can compare Arrays, Scripts and Booleans (alive player isEqualTo true)  It can compare non-existent game objects (grpNull isEqualTo grpNull)  It can compare Namespaces (As of Arma 3 v1.47)  It is slightly faster than ==, especially when comparing Strings", syntax: "val1 isEqualTo val2", returns: "val2: Anything", example: "_arr1 = [1,[2,[3]]]; _arr2 = [1,[2,[3]]]; if (_arr1 isEqualTo _arr2) then {hint 'Arrays match!'}", game: "Arma 3", version: 1.16 },
    { id: 966, name: "isEqualType", description: "Compares 2 values by their type. A much faster alternative to typeName a == typeName b.", syntax: "val1 isEqualType val2", returns: "val2: Anything", example: "_var = [1,2,3]; _var isEqualType 0; //false _var isEqualType []; //true", game: "Arma 3", version: 1.54 },
    { id: 967, name: "isEqualTypeAll", description: "Compares types of all elements of an array to the type of a single value.", syntax: "arr isEqualTypeAll val", returns: "val: Anything", example: "_arr = [1,2,3,4,5,6,7,8,9,0]; _arr isEqualTypeAll ''; //false _arr isEqualTypeAll 0; //true", game: "Arma 3", version: 1.54 },
    { id: 968, name: "isEqualTypeAny", description: "Compares type of given value to every type in the given array and if match is found, true is returned.", syntax: "val isEqualTypeAny types", returns: "types: Array", example: "_var = [1,2,3]; _var isEqualTypeAny [0,'',objNull]; //false _var isEqualTypeAny [0,'',objNull,[]]; //true", game: "Arma 3", version: 1.54 },
    { id: 969, name: "isEqualTypeArray", description: "Compares types of all elements of one array to types of all elements of another array.", syntax: "arr1 isEqualTypeArray arr2", returns: "arr2: Array", example: "_arr = [1,true,'three']; _arr isEqualTypeArray [0,objNull,'']; //false _arr isEqualTypeArray [0,false,'']; //true", game: "Arma 3", version: 1.54 },
    { id: 970, name: "isEqualTypeParams", description: "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:  Input can be anything but will be expected to be an Array, otherwise false is returned  Input array can be longer but not shorter than template array, will return false if shorter  nil could be used in template type array as a wild card to allow any type match", syntax: "input isEqualTypeParams template", returns: "template: Array - array of expected types", example: "[1,2,player,'10'] isEqualTypeParams [0,0,objNull,'']; //true 123 isEqualTypeParams [0,0,objNull,'']; //false [] isEqualTypeParams [0,0,objNull,'']; //false [1,2,player] isEqualTypeParams [0,0,objNull,'']; //false [1,2,player,'10',true] isEqualTypeParams [0,0,nil,'']; //true [1,2,getPos player,'10',true] isEqualTypeParams [0,0,nil,'']; //true", game: "Arma 3", version: 1.54 },
    { id: 971, name: "isFilePatchingEnabled", description: "Returns true if file patching is enabled otherwise false", syntax: "isFilePatchingEnabled", returns: "null", example: "null", game: "Arma 3", version: 1.56 },
    { id: 972, name: "isFlashlightOn", description: "Returns true if there is a linked and enabled flashlight on a given weapon.", syntax: "unit isFlashlightOn weapon", returns: "weapon: String", example: "player isFlashlightOn (currentWeapon player);", game: "Arma 3", version: 0.5 },
    { id: 973, name: "isFlatEmpty", description: "Checks given position against given filter params. Filter includes checks for:  If there are any objects closer than given distance from given position (in 2D)  If the area around position is flat enough to match given gradient  If the given position is over water or land  If the given position is over shore line The gradient seems to correlate with general hill steepness: 0.1 (10%) ~6o, 0.5 (50%) ~27o, 1.0 (100%) ~45o, etc.There are also some oddities about this command that need to be noted:  Objects accounted for proximity check seem to be static objects. Nearby vehicles and units do not seem to affect the output  Given position will be magically transferred into given position + getTerrainHeightASL value  The second element must be -1 (<= 0 really) at all times, otherwise command becomes unusable  The command might be a bit heavy on computations so avoid frequent and large area checks  See also: BIS_fnc_findSafePos", syntax: "position isFlatEmpty [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]", returns: "[minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]: Array", example: "_overLand = !(position player isFlatEmpty [-1, -1, -1, -1, 0, false] isEqualTo []);", game: "Arma 2", version: 1 },
    { id: 974, name: "isForcedWalk", description: "Returns true if player is forced to walk with forceWalk.", syntax: "isForcedWalk unitName", returns: "Boolean", example: "_bool = isForcedWalk player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 975, name: "isFormationLeader", description: "Returns true if the specified unit is subgroup leader.", syntax: "isFormationLeader unit", returns: "Boolean - true if unit is subgroup leader.", example: "_isLeader = isFormationLeader player;", game: "Armed Assault", version: 1 },
    { id: 976, name: "isGroupDeletedWhenEmpty", description: "Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty.", syntax: "isGroupDeletedWhenEmpty group", returns: "Boolean - true the group is marked for auto-deletion when empty", example: "_isMarked = isGroupDeletedWhenEmpty _group;", game: "Arma 3", version: 1.68 },
    { id: 977, name: "isHidden", description: "Return whether the person is hidden (reached the hiding position). For command that tests general visibility of an object use isObjectHidden", syntax: "isHidden person", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 978, name: "isInRemainsCollector", description: "Checks if unit or vehicle is queued for disposal after death.", syntax: "isInRemainsCollector remain", returns: "Boolean", example: "if (isInRemainsCollector unit1) then {hint 'unit1 is queued for disposal'};", game: "Arma 3", version: 1.32 },
    { id: 979, name: "isInstructorFigureEnabled", description: "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).", syntax: "isInstructorFigureEnabled", returns: "null", example: "hint str isInstructorFigureEnabled;", game: "Arma 3", version: 1.04 },
    { id: 980, name: "isIRLaserOn", description: "Returns true if there is a linked and enabled IR on the given weapon.", syntax: "unit isIRLaserOn weapon", returns: "weapon: String", example: "player isIRLaserOn currentWeapon player;", game: "Arma 3", version: 0.5 },
    { id: 981, name: "isKeyActive", description: "Checks whether the given key is active in the current user profile.  See keys, keysLimit and doneKeys in the description.ext file of the missions.", syntax: "isKeyActive keyName", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 982, name: "isKindOf", description: "Checks whether the object is (a subtype) of the given type. While main syntax and alt syntax support only CfgVehicles, CfgAmmo and CfgNonAIVehicles, alt syntax 2 allows to specify any config, including mission config.", syntax: "object isKindOf typeName", returns: "typeName: String", example: "vehicle player isKindOf 'Tank';", game: "Armed Assault", version: 1 },
    { id: 983, name: "isLightOn", description: "Returns true if vehicle headlights are on otherwise false.", syntax: "isLightOn vehicle", returns: "Boolean", example: "_lightsOn = isLightOn vehicle player;", game: "Arma 3", version: 1.32 },
    { id: 984, name: "isLocalized", description: "Checks whether given string name is localized.", syntax: "isLocalized stringName", returns: "Boolean", example: "if (isLocalized 'STR_DN_SNAKE') then { 	hint localize 'STR_DN_SNAKE'; } else { 	hint 'STR_DN_SNAKE'; 	diag_log 'ToDo: STR_DN_SNAKE is not localized'; };", game: "Arma 3", version: 0.5 },
    { id: 985, name: "isManualFire", description: "Returns true if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with action 'ManualFire' and 'ManualFireCancel'. Always returns false for a soldier.", syntax: "isManualFire vehicleName", returns: "Boolean", example: "_bool = isManualFire vehicle player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 986, name: "isMarkedForCollection", description: "Checks whether the object is marked for weapons collection.", syntax: "Boolean = isMarkedForCollection object", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 987, name: "isMultiplayer", description: "Return true if multiPlayer.", syntax: "isMultiplayer", returns: "null", example: "null", game: "Arma 2", version: 1 },
    { id: 988, name: "isMultiplayerSolo", description: "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).", syntax: "isMultiplayerSolo", returns: "null", example: "null", game: "Arma 3", version: 1.66 },
    { id: 989, name: "isNil", description: "Tests whether the variable defined by the String argument is undefined, or whether an expression result passed as Code is undefined.  The command returns true if the variable or the expression result is undefined (i.e. the expression result is Void), and false in all other cases.", syntax: "isNil variable", returns: "Boolean", example: "if (isNil '_pokus') then {     _pokus = 0; };", game: "Armed Assault", version: 1 },
    { id: 990, name: "isNull", description: "Checks whether the tested item is Null.  Which null type the item has to be equal to depends on the type of game entity tested:   Objects -> objNull  Controls -> controlNull  Displays -> displayNull  Groups -> grpNull  Locations -> locationNull (since ARMA 2)  Tasks -> taskNull (since ARMA 2)  Scripts -> scriptNull (since Arma 3 1.29.127075)  Configs -> configNull (since Arma 3 1.53.133130)  Note: A test via == does not work, because, for example, objNull is not equal to anything, not even to itself. Use isEqualTo.", syntax: "isNull entity", returns: "Boolean", example: "if (isNull obj) then {hint 'doesn't exist';};", game: "Operation Flashpoint", version: 1 },
    { id: 991, name: "isNumber", description: "Check if config entry represents number.", syntax: "Boolean = isNumber config", returns: "Boolean", example: "_ok = isNumber (configFile >> 'CfgVehicles')", game: "Armed Assault", version: 1 },
    { id: 992, name: "isObjectHidden", description: "Checks visibility of a given object on the local machine.", syntax: "isObjectHidden object", returns: "Boolean - true if hidden, false if visible", example: "_bobIsHidden = isObjectHidden bob;", game: "Arma 3", version: 1.48 },
    { id: 993, name: "isObjectRTD", description: "Returns true if RTD model is loaded", syntax: "isObjectRTD helicopter", returns: "Boolean", example: "_heliRTD = isObjectRTD vehicle player;", game: "Arma 3", version: 1.34 },
    { id: 994, name: "isOnRoad", description: "Checks if given position is on road. Same as roadAt, only return is boolean instead of road object.", syntax: "isOnRoad position", returns: "Boolean", example: "_objOnRoad = isOnRoad player;", game: "Arma 2", version: 1 },
    { id: 995, name: "isPipEnabled", description: "Returns true if Picture in Picture (Render to Texture) is enabled.", syntax: "isPipEnabled", returns: "null", example: "PIPon = isPipEnabled;", game: "Arma 3", version: 0.5 },
    { id: 996, name: "isPlayer", description: "Checks if given person is player. Returns true for headless clients as well.", syntax: "isPlayer person", returns: "Boolean", example: "if (isPlayer _Soldier1) then {     _Soldier1 setDamage 1; };", game: "Armed Assault", version: 1 },
    { id: 997, name: "isRealTime", description: "Returns true if the mission editor is operating in real time mode.", syntax: "isRealTime map", returns: "Boolean", example: "_isRealTime = isRealTime _map", game: "Arma 2", version: 1 },
    { id: 998, name: "isRemoteExecuted", description: "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP", syntax: "isRemoteExecuted", returns: "null", example: "_remoteExecuted = isRemoteExecuted;", game: "Arma 3", version: 1.66 },
    { id: 999, name: "isRemoteExecutedJIP", description: "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of isRemoteExecuted:  Normal remote execution:   isRemoteExecuted - true  isRemoteExecutedJIP - false  Remote execution from JIP queue:   isRemoteExecuted - true  isRemoteExecutedJIP - true In SP always returns false.", syntax: "isRemoteExecutedJIP", returns: "null", example: "_remoteExecutedJIP = isRemoteExecutedJIP;", game: "Arma 3", version: 1.68 },
    { id: 1000, name: "isServer", description: "Returns true if the machine (executing the command) is the server in a multiplayer game or is running single player. isServer will return true for both, dedicated server and player hosted. Dedicated server could be detected with isDedicated command. Hosted by player server can be detected by presense of UI: isServer && hasInterface", syntax: "isServer", returns: "null", example: "if (!isServer) exitWith {};", game: "Armed Assault", version: 1.06 },
    { id: 1001, name: "isShowing3DIcons", description: "Returns true if the editor is set to draw 3D icons.", syntax: "isShowing3DIcons map", returns: "Boolean", example: "null", game: "Arma 2", version: 1 },
    { id: 1002, name: "isSimpleObject", description: "Returns true if given object is simple object", syntax: "isSimpleObject object", returns: "Boolean", example: "_isSimple = isSimpleObject _obj1;", game: "Arma 3", version: 1.68 },
    { id: 1003, name: "isSprintAllowed", description: "Returns true if player is allowed to sprint", syntax: "isSprintAllowed unit", returns: "Bool", example: "isSprintAllowed player;", game: "Arma 3", version: 1.54 },
    { id: 1004, name: "isStaminaEnabled", description: "Check if stamina depletion is enabled", syntax: "isStaminaEnabled unit;", returns: "Bool", example: "isStaminaEnabled player;", game: "Arma 3", version: 1.54 },
    { id: 1005, name: "isSteamMission", description: "Returns true if the current mission is a Steam Workshop mission.", syntax: "isSteamMission", returns: "null", example: "if (isSteamMission) then {     hint 'Thank you for subscribing to my mission on Steam!'; } else {     hint 'Thank you for downloading my mission off the Internet!'; };", game: "Arma 3", version: 0.74 },
    { id: 1006, name: "isStreamFriendlyUIEnabled", description: "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).", syntax: "isStreamFriendlyUIEnabled", returns: "null", example: "hint str isStreamFriendlyUIEnabled;", game: "Arma 3", version: 0.7 },
    { id: 1007, name: "isText", description: "Check if config entry represents text.", syntax: "Boolean = isText config", returns: "Boolean", example: "_ok = isText (configFile >> 'CfgVehicles')", game: "Armed Assault", version: 1 },
    { id: 1008, name: "isTouchingGround", description: "Returns true if object is touching the ground.", syntax: "isTouchingGround object", returns: "Boolean", example: "if (isTouchingGround player) then {hint 'Terraferma!';};", game: "Arma 3", version: 0.5 },
    { id: 1009, name: "isTurnedOut", description: "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.", syntax: "isTurnedOut unit", returns: "Boolean", example: "_commanderOut = isTurnedOut (tank turretUnit [0,0]);", game: "Arma 3", version: 1.42 },
    { id: 1010, name: "isTutHintsEnabled", description: "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).", syntax: "isTutHintsEnabled", returns: "null", example: "hint str isTutHintsEnabled;", game: "Arma 3", version: 0.5 },
    { id: 1011, name: "isUAVConnectable", description: "Returns true if UAV is connectable by AV terminal(s).", syntax: "object isUAVConnectable [uav, checkAllItems]", returns: "[uav, checkAllItems]: Array", example: "connectable = unit isUAVConnectable [uav,true];", game: "Arma 3", version: 1.24 },
    { id: 1012, name: "isUAVConnected", description: "Returns true if UAV is connected to some terminal.", syntax: "isUAVConnected uav", returns: "Boolean", example: "bool = isUAVConnected cursorTarget;", game: "Arma 3", version: 0.76 },
    { id: 1013, name: "isUniformAllowed", description: "Check whether given uniform can be dressed by target soldier.", syntax: "unit isUniformAllowed type", returns: "type: String", example: "_canUse = _unit isUniformAllowed 'U_B_CombatUniform_mcam';", game: "Arma 3", version: 1.22 },
    { id: 1014, name: "isVehicleCargo", description: "Return transporting vehicle if vehicle is loaded in one.", syntax: "isVehicleCargo vehicle", returns: "Object - returns the transporting vehicle of a vehicle in cargo, if the vehicle is not being transported it will return objNull", example: "_transportingVehicle = isVehicleCargo quad; //returns blackfish //Vehicle called quad that is not being transported as cargo _transportingVehicle = getVehicleCargo quad; //returns objNull", game: "Arma 3", version: 1.62 },
    { id: 1015, name: "isWalking", description: "Returns true if walk is toggled (W+S in Arma 3).", syntax: "isWalking unitName", returns: "Boolean", example: "_bool = isWalking player;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1016, name: "isWeaponDeployed", description: "Returns true if weapon is currently deployed.", syntax: "isWeaponDeployed unit", returns: "Boolean", example: "_dep = isWeaponDeployed player;", game: "Arma 3", version: 1.42 },
    { id: 1017, name: "isWeaponRested", description: "Returns true if weapon is currently rested.", syntax: "isWeaponRested unit", returns: "Boolean", example: "_rest = isWeaponRested player;", game: "Arma 3", version: 1.42 },
    { id: 1018, name: "itemCargo", description: "Get array with items from ammo box (or any general weapon holder container).", syntax: "itemCargo box", returns: "Array - Format: ['ItemType1','ItemType2','ItemType3'...]", example: "hint str itemCargo vestContainer player;", game: "Arma 3", version: 0.5 },
    { id: 1019, name: "items", description: "Returns an array of names of all special items of a vehicle or a soldier.", syntax: "items unit", returns: "Array", example: "_itemsplayer = items player;", game: "Arma 2", version: 1 },
    { id: 1020, name: "itemsWithMagazines", description: "Returns combined array including all unit's items and all unit's magazines. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine as well as assignedItems are excluded.", syntax: "itemsWithMagazines unit", returns: "Array", example: "itemsWithMagazines player //is essentially the same as items player + magazines player", game: "Arma 3", version: 1.04 },
    { id: 1021, name: "join", description: "Join all units in the array to given group.   Maximum number of group members is:  OFP: 12  Arma: ?  Arma 2: ?  Arma 3: 'unlimited' (3000+)  VBS 2: 'unlimited' (260+)  To have a group member leave a group, join him with the grpNull group (e.g. [guy1] join grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.", syntax: "unitArray join group", returns: "group: Group or Object", example: "[_unitOne, _unitTwo] join player;", game: "Operation Flashpoint", version: 1.34 },
    { id: 1022, name: "joinAs", description: "Joins the unit to the given group, if position id is available, this one is used.", syntax: "unit joinAs [group, id]", returns: "[group, id]: Array", example: "player joinAs [_group, 4];", game: "Arma 2", version: 1 },
    { id: 1023, name: "joinAsSilent", description: "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.", syntax: "unit joinAsSilent [group, id]", returns: "[group, id]: Array", example: "player joinAsSilent [_group, 4];", game: "Arma 2", version: 1 },
    { id: 1024, name: "joinSilent", description: "Join all units in the array to given group silently (without radio message). To have a group member leave a group, join him with the grpNull group (e.g. [guy1] joinSilent grpNull), but beware, as brand new group is created for the leaving unit and this could result in the number of groups in a mission growing out of control.", syntax: "unitArray joinSilent group", returns: "group: Object or Group", example: "[_unitOne, _unitTwo] joinSilent (group player);", game: "Armed Assault", version: 1.06 },
    { id: 1025, name: "joinString", description: "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.", syntax: "array joinString separator", returns: "separator: String - separator used to join array elements.", example: "_str = '- This, is a sample string.' splitString '-,. '; // ['This','is','a','sample','string'] _str joinString ' '; // 'This is a sample string'", game: "Arma 3", version: 1.5 },
    { id: 1026, name: "kbAddDatabase", description: "Register knowledge base database to given person.", syntax: "Boolean = person kbAddDatabase filename", returns: "filename: String", example: "null", game: "Arma 2", version: 1 },
    { id: 1027, name: "kbAddDatabaseTargets", description: "Register target list knowledge base database to given person.", syntax: "Boolean = person kbAddDatabaseTargets filename", returns: "filename: String", example: "null", game: "Arma 2", version: 1 },
    { id: 1028, name: "kbAddTopic", description: "Register conversation topic to given person.", syntax: "person kbAddTopic [TopicName, filename.bikb, filename.fsm, event_handler]", returns: "[TopicName, filename.bikb, filename.fsm, event_handler]: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1029, name: "kbHasTopic", description: "Check if conversation topic was registered to given person.", syntax: "Boolean = person kbHasTopic TopicName", returns: "TopicName: String", example: "null", game: "Arma 2", version: 1 },
    { id: 1030, name: "kbReact", description: "Pass a non-verbal communication to the receiver.", syntax: "person kbReact [receiver,topic,sentenceID,[argumentName,argumentValue,argumentText,argumentSpeech],...]", returns: "[receiver,topic,sentenceID,[argumentName,argumentValue,argumentText,argumentSpeech],...]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1031, name: "kbRemoveTopic", description: "Unregister conversation topic from given person.", syntax: "person kbRemoveTopic TopicName", returns: "TopicName: String", example: "null", game: "Arma 2", version: 1 },
    { id: 1032, name: "kbTell", description: "Make the person tell to the receiver the sentence.", syntax: "person kbTell [receiver, TopicName, SentenceClass, [argumentName, argumentValue, argumentText, argumentSpeech], ...,forceRadio]", returns: "[receiver, TopicName, SentenceClass, [argumentName, argumentValue, argumentText, argumentSpeech], ...,forceRadio]: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1033, name: "kbWasSaid", description: "Check if given item was said by person to someone.", syntax: "person kbWasSaid [receiver, topic, sentenceID, maxAge]", returns: "[receiver, topic, sentenceID, maxAge]: Array", example: "myPlayer kbWasSaid [myReceiver, 'myTopic', 'mySentenceID', 3];", game: "Arma 2", version: 1 },
    { id: 1034, name: "keyImage", description: "Returns a structured text, containing an image or name (if no image is found) of the button, on the keyboard, mouse or joystick, with the given code.", syntax: "keyImage dikCode", returns: "Structured Text", example: "_name = keyImage 28; //result is 'Enter'", game: "Armed Assault", version: 1 },
    { id: 1035, name: "keyName", description: "Returns the name of a button (on the keyboard, mouse or joystick) with the given code.", syntax: "keyName dikCode", returns: "String", example: "_name = keyName 28; //result is 'Enter'", game: "Armed Assault", version: 1 },
    { id: 1036, name: "knowsAbout", description: "Checks if a group or a side knows about target. If who is a unit, unit's group is considered, if who is a vehicle, commander's group is considered.", syntax: "who knowsAbout target", returns: "target: Object", example: "_kv = _soldierOne knowsAbout _jeepOne;", game: "Operation Flashpoint", version: 1 },
    { id: 1037, name: "land", description: "Force helicopter landing. Landing mode may be:    'LAND' (complete stop)  'GET IN' (hovering very low, for another unit to get in)  'GET OUT' (hovering low,for another unit to get out)  'NONE' (cancel a landing) Available since ArmA 2 57463 build.", syntax: "helicopter land mode", returns: "mode: String", example: "_cobraOne land 'LAND'", game: "Operation Flashpoint", version: 1 },
    { id: 1038, name: "landAt", description: "Order an AI airplane to land at a given airport. ID is the number to identify which airport on the island you want. Since Arma 3 v1.68 it is possible to order a helicopter to land on designated helipad.", syntax: "plane landAt id", returns: "id: Number", example: "_plane1 landAt 1;", game: "Armed Assault", version: 1.08 },
    { id: 1039, name: "landResult", description: "Return the result of helicopter landing position searching (performed, after land command). The value can be 'Found' (position found),'NotFound' (position not found), 'NotReady' (position searching is,still in progress) or empty string when wrong argument given.", syntax: "landResult helicopter", returns: "String", example: "null", game: "Arma 2", version: 1 },
    { id: 1040, name: "language", description: "Returns current game language.", syntax: "language", returns: "null", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1041, name: "laserTarget", description: "Returns laser target object created by given unit (gunner in vehicle or on foot) when using 'Laserdesignator' or another laser targeting device. Laser target object is global and can be retrieved from any PC.", syntax: "laserTarget unitName", returns: "Object", example: "_target = laserTarget gunner heli;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1042, name: "lbAdd", description: "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.   It returns the index of the newly added item.", syntax: "Number = lbAdd [idc, text]", returns: "idc: Number of control", example: "_index = lbAdd [101, 'First item'];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1043, name: "lbClear", description: "Clear all items in listbox or combobox with id idc of topmost user dialog.", syntax: "lbClear idc", returns: "Nothing", example: "lbClear 101;", game: "Operation Flashpoint", version: 1.5 },
    { id: 1044, name: "lbColor", description: "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.   The color is returned in format Color.", syntax: "lbColor [idc, index]", returns: "idc: Number of control", example: "_colour = lbColor [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1045, name: "lbCurSel", description: "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. For listbox  LB_MULTI (multi-selection) use lbSelection.", syntax: "lbCurSel idc", returns: "Number", example: "_index = lbCurSel 101;", game: "Operation Flashpoint", version: 1.5 },
    { id: 1046, name: "lbData", description: "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.", syntax: "String = lbData [idc, index]", returns: "idc: Number of control", example: "_data = lbData [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1047, name: "lbDelete", description: "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.", syntax: "lbDelete [idc, index]", returns: "idc: Number of control", example: "lbDelete [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1048, name: "lbIsSelected", description: "Check whether given row of the given listbox is selected.", syntax: "Boolean = control lbIsSelected index", returns: "index: Number", example: "_selected = _control lbIsSelected 0;", game: "Armed Assault", version: 1 },
    { id: 1049, name: "lbPicture", description: "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", syntax: "lbPicture [idc, index]", returns: "idc: Number - idc of control", example: "_picture = lbPicture [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1050, name: "lbSelection", description: "Returns Array of selected rows indices in the given listbox of style LB_MULTI (multi-selection). For single selection listbox use lbCurSel instead.", syntax: "lbSelection control", returns: "Array", example: "_indices = lbSelection _control;", game: "Armed Assault", version: 1 },
    { id: 1051, name: "lbSetColor", description: "Sets the color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.   Colour is in format Color.", syntax: "lbSetColor  [idc, index, color]", returns: "idc: Number of control", example: "lbSetColor [101, 0, [0, 1, 0, 0.5]];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1052, name: "lbSetCurSel", description: "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.  To deselect all, use -1: _ctrl lbSetCurSel -1; For listbox of style LB_MULTI use lbSetSelected instead.", syntax: "lbSetCurSel [idc, index]", returns: "idc: Number of control", example: "lbSetCurSel [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1053, name: "lbSetData", description: "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", syntax: "lbSetData [idc, index, data]", returns: "idc: Number of control", example: "lbSetData [101, 1, '#1'];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1054, name: "lbSetPicture", description: "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).  In Arma 3 it might be necessary to set the color of the picture as well with lbSetPictureColor as default [0,0,0,0] color makes picture invisible.", syntax: "lbSetPicture [idc, index, name]", returns: "idc: Number of control", example: "lbSetPicture [101, 0, 'iskoda'];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1055, name: "lbSetPictureColor", description: "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", syntax: "lbSetPictureColor [idc, index, color]", returns: "idc: Number of control", example: "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]];", game: "Arma 3", version: 1.22 },
    { id: 1056, name: "lbSetPictureColorDisabled", description: "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", syntax: "lbSetPictureColorDisabled [idc, index, color]", returns: "idc: Number of control", example: "lbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];", game: "Arma 3", version: 1.2 },
    { id: 1057, name: "lbSetPictureColorSelected", description: "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", syntax: "lbSetPictureColorSelected [idc, index, color]", returns: "idc: Number of control", example: "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];", game: "Arma 3", version: 1.2 },
    { id: 1058, name: "lbSetSelectColor", description: "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.   Colour is in format Color.", syntax: "lbSetSelectColor  [idc, index, color]", returns: "idc: Number of control", example: "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]];", game: "Arma 3", version: 1.46 },
    { id: 1059, name: "lbSetSelectColorRight", description: "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.   Colour is in format Color.", syntax: "lbSetSelectColorRight  [idc, index, color]", returns: "idc: Number of control", example: "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];", game: "Arma 3", version: 1.46 },
    { id: 1060, name: "lbSetSelected", description: "Set the selection state of the given row of the given listbox of style LB_MULTI. For single selection listbox use lbSetCurSel instead.", syntax: "control lbSetSelected [index, selected]", returns: "[index, selected]: Array", example: "_control lbSetSelected [0, true];", game: "Armed Assault", version: 1 },
    { id: 1061, name: "lbSetTooltip", description: "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", syntax: "lbSetTooltip [idc, index, tooltip]", returns: "idc: Number", example: "lbSetTooltip [101, 1, 'tooltip'];", game: "Arma 3", version: 0.58 },
    { id: 1062, name: "lbSetValue", description: "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.", syntax: "lbSetValue [idc, index, value]", returns: "idc: Number of control", example: "lbSetValue [101, 0, 1];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1063, name: "lbSize", description: "Return number of items of listbox or combobox with id idc of topmost user dialog.", syntax: "lbSize idc", returns: "Number", example: "_size = lbSize 101;", game: "Operation Flashpoint", version: 1.5 },
    { id: 1064, name: "lbSort", description: "Sorts listbox entries alphabetically ascending by their lbText", syntax: "lbSort control", returns: "Nothing", example: "lbSort _myControl;", game: "Armed Assault", version: 1.08 },
    { id: 1065, name: "lbSortByValue", description: "Sorts the ListBox entries by lbValue. The entries are sorted in ascending order. Also note that this command will mix up the entries randomly if multiple entries have the same value.", syntax: "lbSortByValue control", returns: "Nothing", example: "lbSortByValue _control;", game: "Armed Assault", version: 1.08 },
    { id: 1066, name: "lbText", description: "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", syntax: "lbText [idc, index]", returns: "idc: Number of control", example: "_text = lbText [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1067, name: "lbValue", description: "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", syntax: "lbValue [idc, index]", returns: "idc: Number of control", example: "_value = lbValue [101, 0];", game: "Operation Flashpoint", version: 1.5 },
    { id: 1068, name: "leader", description: "Returns the group leader for the given unit or group. For dead units, objNull is returned.", syntax: "Object = leader unitName", returns: "Object", example: "leader group player == leader player", game: "Operation Flashpoint", version: 1 },
    { id: 1069, name: "leaderboardDeInit", description: "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.", syntax: "leaderboardDeInit boardName", returns: "Boolean", example: "leaderboardDeInit 'TT01'", game: "Arma 3", version: 1.56 },
    { id: 1070, name: "leaderboardGetRows", description: "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!", syntax: "leaderboardGetRows boardName", returns: "Array", example: "leaderboardGetRows 'TT01'", game: "Arma 3", version: 1.56 },
    { id: 1071, name: "leaderboardInit", description: "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.", syntax: "leaderboardInit boardName", returns: "Boolean", example: "leaderboardInit 'TT01'", game: "Arma 3", version: 1.56 },
    { id: 1072, name: "leaveVehicle", description: "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.   In short the command could be hypothetically presented as:  leaveVehicle = un-addVehicle + unassignVehicle forEach crew   However, to make it more reliable, it is best to move unit out of the vehicle manually with moveOut command and force unassign the vehicle with unassignVehicle", syntax: "group leaveVehicle vehicle", returns: "vehicle: Object", example: "_unit leaveVehicle _vehicle", game: "Arma 2", version: 1 },
    { id: 1073, name: "libraryCredits", description: "Returns the credits for the libraries used by the game.", syntax: "libraryCredits", returns: "null", example: "hint str libraryCredits;   // as in Arma2 OA 1.62.95208 /* [ 	[ 		'Botan', 		'1999-2012 Jack Lloyd, 2001 Peter J Jones, 2004-2007 Justin Karneges, 2004 Vaclav Ovsik, 2005 Matthew Gregan, 2005-2006 Matt Johnston, 2006 Luca Piccarreta, 2007 Yves Jerschow, 2007-2008 FlexSecure GmbH, 2007-2008 Technische Universitat Darmstadt, 2007-2008 Falko Strenzke, 2007-2008 Martin Doering, 2007 Manuel Hartl, 2007 Christoph Ludwig, 2007 Patrick Sona, 2010 Olivier de Gaalon' 	], 	[ 		'rapidjson', 		'2011 Milo Yip' 	], 	[ 		'libcurl', 		'Copyright (c) 1996 - 2012, Daniel Stenberg' 	], 	[ 		'GameSpy', 		'2009 GameSpy Industries, Inc.' 	], 	[ 		'Theora', 		'2002-2009 by the Xiph.Org Foundation http://www.xiph.org/' 	], 	[ 		'OggVorbis', 		'1994-2002 by the Xiph.Org Foundation http://www.xiph.org/' 	], 	[ 		'Intel JPEG Library', 		'1998 Intel Corporation' 	], 	[ 		'Matrix Template Library', 		'2001-2005 The Trustees of Indiana University' 	], 	[ 		'Matrix Template Library', 		'1998-2001 University of Notre Dame' 	], 	[ 		'Speex', 		'2002-2006 Jean-Marc Valin' 	], 	[ 		'LZO Professional', 		'1996-2011 Markus Franz Xaver Johannes Oberhumer' 	], 	[ 		'NVIDIA FXAA by TIMOTHY LOTTES', 		'2010, 2011 NVIDIA CORPORATION' 	], 	[ 		'Jimenez's MLAA', 		'2012 2011 by Jorge Jimenez, Belen Masia, Jose I. Echevarria, Fernando Navarro and Diego Gutierrez' 	] ] */", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1074, name: "libraryDisclaimers", description: "Returns the library disclaimers.", syntax: "libraryDisclaimers", returns: "null", example: "hint str libraryDisclaimers;   // as in Arma2 OA 1.62.95208", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1075, name: "lifeState", description: "Returns the life state of the given unit. Can be one of:    (Pre-Arma 3) 'ALIVE' 'DEAD' 'DEAD-RESPAWN' 'DEAD-SWITCHING' 'ASLEEP' 'UNCONSCIOUS'   (Arma 3) 'HEALTHY' 'DEAD' 'DEAD-RESPAWN' 'DEAD-SWITCHING' 'INCAPACITATED' 'INJURED'   In Arma 3 lifeState seems to change to 'INJURED' when damage aliveUnit >= 0.1 (0.1 seems to be the value defined in config under 'InjuredTreshold').", syntax: "lifeState unit", returns: "String", example: "_ls = lifeState loon;", game: "Arma 2", version: 1 },
    { id: 1076, name: "lightAttachObject", description: "Attach light to given object at given position on object.", syntax: "light lightAttachObject [object, position]", returns: "[object, position]: Array", example: "myLight lightAttachObject [myVehicle, [-0.5,-0.25,1]];", game: "Armed Assault", version: 1 },
    { id: 1077, name: "lightDetachObject", description: "Detach light from object.", syntax: "lightDetachObject light", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 1078, name: "lightIsOn", description: "Check if lampost is on (shining). For working with CfgNonAIVehicles class 'StreetLamp' only. Possible values are:   'ON'  'OFF'  'AUTO' (auto is only on during the night).  'ERROR'", syntax: "lightIsOn lamppost", returns: "String", example: "?lightIsOn nearestObject [player, 'StreetLamp'] == 'ON' :hint 'nightime'", game: "Operation Flashpoint", version: 1.04 },
    { id: 1079, name: "lightnings", description: "Return the current lightnings value.", syntax: "lightnings", returns: "null", example: "_lightningsVal = lightnings;", game: "Arma 3", version: 0.5 },
    { id: 1080, name: "limitSpeed", description: "Limit speed of given vehicle or person to given value (in km/h).", syntax: "objectName limitSpeed speed", returns: "speed: Number", example: "// Adjust 'speedLimit' variable to change limited speed. (A3 1.24 we don't need loop for a continus effect, limitSpeed alone is enough.) _this setVariable ['speedLimit', 200]; _nul = _this spawn { 	while {canMove _this} do { 		_this limitSpeed (_this getVariable 'speedLimit'); 		sleep 0.1; 	}; };", game: "Armed Assault", version: 1 },
    { id: 1081, name: "linearConversion", description: "Converts given value from given 'from' range to wanted 'to' range. If clipping is set to true, the resulting value is guaranteed to be within 'to' range no matter what.   Say given range is 0 to 1 and wanted range is 0 to 100 (percent calculation). Given value 0.55 then will be  linearConversion [0,1,0.55,0,100]; //55  but if given value is 1.1 linearConversion [0,1,1.1,0,100,false]; //110  or if clipping is true   linearConversion [0,1,1.1,0,100,true]; //100", syntax: "linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]", returns: "minFrom: Number - start 'from' range", example: "linearConversion [4, 8, 5, 0, 1, false];", game: "Arma 3", version: 0.5 },
    { id: 1082, name: "lineBreak", description: "Creates a structured text containing a line break.", syntax: "lineBreak", returns: "null", example: "_txt = composeText ['First line', lineBreak, 'Second line'];", game: "Armed Assault", version: 1 },
    { id: 1083, name: "lineIntersects", description: "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.    NOTE: Doesn't work under water. Max harcoded distance is 1000m.", syntax: "lineIntersects [begPos, endPos, objIgnore1, objIgnore2]", returns: "begPos: PositionASL", example: "lineIntersects [ eyePos player, aimPos chopper, player, chopper]", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1084, name: "lineIntersectsObjs", description: "Returns list of objects intersected by given line from begPos to endPos.", syntax: "lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDistance, flags]", returns: "endPos: PositionASL - virtual line end", example: "Sto = []; Fn = {   {     Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]];   } forEach [1,2,4,8,16,32];   hintSilent format ['   ONLY_WATER: %1,    NEAREST_CONTACT: %2,    ONLY_STATIC: %3,    ONLY_DYNAMIC: %4,   FIRST_CONTACT: %5,   ALL_OBJECTS: %6',   Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5]; }; ['sample_id','onEachFrame','Fn'] call BIS_fnc_addStackedEventHandler;", game: "Arma 3", version: 1.1 },
    { id: 1085, name: "lineIntersectsSurfaces", description: "Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.69.140138, this could be tweaked with an optional param. NOTE: if begPosASL is under the ground and endPosASL is above it, the command will only return intersection with the ground, this is engine limitation and none of the intersectXXX commands will work when initiated from under the ground.   Since Arma v1.51.131920 it is possible to indicate primary and secondary LOD to look for intersection. Available options are:  'FIRE'  'VIEW'  'GEOM'  'IFIRE' - ('I' stands for Indirect, almost the same as FIRE)  'NONE'  Default LODs are 'VIEW' and 'FIRE'", syntax: "lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]", returns: "begPosASL: PositionASL - virtual line start", example: "_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];", game: "Arma 3", version: 1.5 },
    { id: 1086, name: "lineIntersectsWith", description: "Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true.   NOTE: Doesn't work under water. Max hardcoded distance is 1000m.", syntax: "lineIntersectsWith [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]", returns: "begPos: PositionASL - virtual line start", example: "_objects = lineIntersectsWith [eyePos player, ATLtoASL screenToWorld [0.5,0.5]];", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1087, name: "linkItem", description: "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.", syntax: "unit linkItem item", returns: "item: String", example: "bluforUnit linkItem 'NVGoggles'; opforUnit linkItem 'NVGoggles_OPFOR'; independentUnit linkItem 'NVGoggles_INDEP';", game: "Arma 3", version: 0.5 },
    { id: 1088, name: "list", description: "List of units that would activate given Trigger.  It returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started. Since this is just a reference this means that the value in your local variable will change as the content of the trigger area changes. To permanently copy the returned list to a different variable, use _mylist = +(list triggerOne).  The second example can be used inside the trigger (in that case, no need to name your trigger).  The list returned for trigger of type 'Not present' is the same as that returned for type 'present'.   NOTE: While the command can query any trigger, local or remote, the result will be only for the trigger condition set on the local client. See createTrigger for more info.", syntax: "Array =  list trigger", returns: "Array or Nothing", example: "_tlist = list _triggerOne;", game: "Operation Flashpoint", version: 1 },
    { id: 1089, name: "listObjects", description: "Return the list of all objects of given type.", syntax: "map listObjects type", returns: "type: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1090, name: "ln", description: "Natural logarithm of x.", syntax: "Number =  ln x", returns: "Number", example: "_nlog = ln 10", game: "Operation Flashpoint", version: 1 },
    { id: 1091, name: "lnbAddArray", description: "Adds list of rows of strings.", syntax: "lnbAddArray [idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]", returns: "idc: Number or Control", example: "lnbAddArray [102,[[['#1'],[1],['#1']]]];", game: "Arma 2", version: 1 },
    { id: 1092, name: "lnbAddColumn", description: "Adds an column at given position. It returns the index of the newly added column.", syntax: "_ctrl lnbAddColumn position", returns: "position: Number", example: "_ctrl lnbAddColumn 0.8;", game: "Arma 2", version: 1 },
    { id: 1093, name: "lnbAddRow", description: "Adds a row of strings.", syntax: "lnbAddRow [IDC,[ String,String... ]]", returns: "IDC: Number", example: "lnbAddRow [1,['COL1','COL2']];", game: "Arma 2", version: 1 },
    { id: 1094, name: "lnbClear", description: "Clears all items in the given listbox or combobox.", syntax: "lnbClear idc", returns: "Nothing", example: "lnbClear _ctrl;", game: "Arma 2", version: 1 },
    { id: 1095, name: "lnbColor", description: "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.", syntax: "lnbColor [idc, [row, column]]", returns: "idc: Number", example: "_ctrl lnbColor [0,0];", game: "Arma 2", version: 1 },
    { id: 1096, name: "lnbCurSelRow", description: "Returns the index of the selected row id 2D listbox.", syntax: "lnbCurSelRow idc", returns: "Number", example: "lnbCurSelRow _ctrl;", game: "Arma 2", version: 1 },
    { id: 1097, name: "lnbData", description: "Returns the additional text (invisible) in an item with the given position of the 2D listbox.", syntax: "lnbData [idc, [row, column]]", returns: "idc: Number or Control", example: "_ctrl lnbData [ lnbCurSelRow _ctrl,0]; //'#1'", game: "Arma 2", version: 1 },
    { id: 1098, name: "lnbDeleteColumn", description: "Removes column with given index from ListNBox control.", syntax: "lnbDeleteColumn [idc,index]", returns: "idc: Number", example: "_ctrl lnbDeleteColumn 1;", game: "Arma 2", version: 1 },
    { id: 1099, name: "lnbDeleteRow", description: "Removes row with the given index from the given listbox or combobox.", syntax: "_ctrl lnbDeleteRow row", returns: "row: Number", example: "_ctrl lnbDeleteRow 1;", game: "Arma 2", version: 1 },
    { id: 1100, name: "lnbGetColumnsPosition", description: "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions.", syntax: "lnbGetColumnsPosition _ctrl", returns: "Array", example: "lnbGetColumnsPosition _ctrl;", game: "Arma 2", version: 1 },
    { id: 1101, name: "lnbPicture", description: "Returns the picture name or path of the item with the given position of the 2D listbox.", syntax: "lnbPicture [IDC, [row, column]]", returns: "IDC: Number - Number of Control", example: "lnbPicture [200, [1, 1]];", game: "Arma 2", version: 1 },
    { id: 1102, name: "lnbSetColor", description: "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.", syntax: "lnbSetColor [idc,[row,column],color]", returns: "Nothing", example: "_ctrl lnbSetColor [ [0,0], [1,0,0,1] ];", game: "Arma 2", version: 1 },
    { id: 1103, name: "lnbSetColumnsPos", description: "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition", syntax: "lnbSetColumnsPos [idc, positions]", returns: "idc: Number - idc of the control", example: "lnbSetColumnsPos [101, [0.1,0.5,0.7]];", game: "Arma 2", version: 1 },
    { id: 1104, name: "lnbSetCurSelRow", description: "Selects the row with the given index of the 2D listbox.", syntax: "lnbSetCurSelRow [idc, index]", returns: "idc: Number", example: "disableSerialization; _ctrl = (findDisplay 300) displayCtrl 304; _ctrl lnbSetCurSelRow 1;", game: "Arma 2", version: 1 },
    { id: 1105, name: "lnbSetData", description: "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", syntax: "lnbSetData [idc, [row, column], data]", returns: "idc: Number or Control", example: "_ctrl lnbSetData [ [0,0],'#1'];", game: "Arma 2", version: 1 },
    { id: 1106, name: "lnbSetPicture", description: "Sets the picture in the item with the given position of the 2D listbox. Name is the picture name. The picture is searched in the mission, directory, the dtaExt subdirectory of the campaign directory, and the dtaExt directory and the data bank (or directory).", syntax: "lnbSetPicture [IDC, [Row, Column], PicturePathOrPictureName]", returns: "IDC: Number", example: "lnbSetPicture [1, [0, 0], 'Picture'];", game: "Arma 2", version: 1 },
    { id: 1107, name: "lnbSetText", description: "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", syntax: "lnbSetText [idc,[row,column],data]", returns: "Nothing", example: "lnbSetText [101, [0,1], '#1'];", game: "Arma 2", version: 1 },
    { id: 1108, name: "lnbSetValue", description: "Sets the additional integer value in the item with the position index of the 2D listbox.", syntax: "lnbSetValue [idc, [row, column], value]", returns: "idc: Number", example: "_ctrl lnbSetValue [[0,0],1];", game: "Arma 2", version: 1 },
    { id: 1109, name: "lnbSize", description: "Returns size of 2D listbox or combobox as [rows, columns].", syntax: "lnbSize control", returns: "Array - in format [rows, columns]", example: "lnbSize _ctrl;//[8,2]", game: "Arma 2", version: 1 },
    { id: 1110, name: "lnbSort", description: "Sorts given multicolumn listbox by lnbText in given column in ascending or descending order.", syntax: "lnbSort [idc, column, reversed]", returns: "idc: Number", example: "lnbSort [1800, 1, false];", game: "Arma 3", version: 1.08 },
    { id: 1111, name: "lnbSortByValue", description: "Sorts given multicolumn listbox by lnbValue in given column in ascending or descending order.", syntax: "lnbSortByValue [idc, column, reversed]", returns: "idc: Number", example: "lnbSortByValue [1800, 1, false];", game: "Arma 3", version: 1.08 },
    { id: 1112, name: "lnbText", description: "Returns the shown text in the item with the given position of the given 2D listbox.", syntax: "control lnbText [row,column]", returns: "[row,column]: Array", example: "_ctrl lnbText [0,0];", game: "Arma 2", version: 1 },
    { id: 1113, name: "lnbValue", description: "Returns the additional integer value in the item with the given position of the 2D listbox.", syntax: "lnbValue [idc,[row, column]]", returns: "idc: Number", example: "_ctrl lnbValue [0,0];//1, default is 0 if value is String set by lnbSetValue", game: "Arma 2", version: 1 },
    { id: 1114, name: "load", description: "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula: _loadPlayer = loadAbs player / getNumber (configFile >> 'CfgInventoryGlobalVariable' >> 'maxSoldierLoad');", syntax: "load unit", returns: "Number", example: "_loadPlayer = loadAbs player / getNumber (configFile >> 'CfgInventoryGlobalVariable' >> 'maxSoldierLoad');", game: "Arma 3", version: 0.5 },
    { id: 1115, name: "loadAbs", description: "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.", syntax: "loadAbs unit", returns: "Number", example: "_weight = loadAbs player;", game: "Arma 3", version: 0.5 },
    { id: 1116, name: "loadBackpack", description: "Returns current sum of mass from items stored in a backpack.", syntax: "loadBackpack unit", returns: "Number", example: "myVariable = loadBackpack myUnit;", game: "Arma 3", version: 0.5 },
    { id: 1117, name: "loadFile", description: "Return content of given filename.", syntax: "loadFile filename", returns: "String", example: "_contents = loadFile 'myFunction.sqf';", game: "Operation Flashpoint: Resistance", version: 1.9 },
    { id: 1118, name: "loadGame", description: "Load a game from the autosave.  If failed, restart the mission.", syntax: "loadGame", returns: "null", example: "loadGame;", game: "Arma 2", version: 1 },
    { id: 1119, name: "loadIdentity", description: "Loads person's identity from Objects.sav file in campaign directory (from entry name).", syntax: "person loadIdentity name", returns: "name: String", example: "_ok = player loadIdentity 'playerIdentity'", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1120, name: "loadMagazine", description: "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime.  The turret has to be manned. One can also change the magazine if its respective weapon is not selected.", syntax: "transport loadMagazine [turretPath, weaponName, magazineName]", returns: "turretPath: Array", example: "vehicle player loadMagazine [[0],'m256','20Rnd_120mmHE_M1A2'];", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 1121, name: "loadOverlay", description: "Creates the load overlay dialog for the specified type of overlay.", syntax: "map loadOverlay config", returns: "config: Config -", example: "null", game: "Arma 2", version: 1 },
    { id: 1122, name: "loadStatus", description: "Loads object's properties from Objects.sav file in campaign directory (from entry name).", syntax: "obj loadStatus entryName", returns: "entryName: String", example: "_ok = player loadStatus 'playerState';", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1123, name: "loadUniform", description: "Returns current sum of mass from items stored in a uniform.", syntax: "loadUniform unit", returns: "Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1124, name: "loadVest", description: "Returns current sum of mass from items stored in a vest.", syntax: "loadVest unit", returns: "Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1125, name: "local", description: "Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts).   This can be used when some activation fields or scripts need to be performed only on one computer. In Single player all objects are local.     Note1: Map created objects (those placed in Visitor) are local everywhere.  Note2: Since Arma 3 v1.53.132932 keyword local has been renamed to private for consistency and to avoid any confusion. However, this just makes the third example obsolete. It's core functionality still remains.", syntax: "local object", returns: "Boolean", example: "?!local _unitName : hint 'remote'", game: "Operation Flashpoint", version: 1 },
    { id: 1126, name: "localize", description: "Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName.", syntax: "localize stringName", returns: "String - text found in corresponding entry in stringtable file", example: "hint localize 'STR_WEST'; // -> 'BLUFOR' (in Arma2)", game: "Operation Flashpoint", version: 1 },
    { id: 1127, name: "locationNull", description: "A non-existing Location. To compare non-existent locations use isNull or isEqualTo:  locationNull == locationNull; // false  isNull locationNull; // true  locationNull isEqualTo locationNull; // true", syntax: "locationNull", returns: "position locationNull; // [0,0,0]", example: "!isNull locationNull; // false", game: "Arma 2", version: 1 },
    { id: 1128, name: "locationPosition", description: "Returns the position of a location. If the location is attached to an object, that object's position is returned.", syntax: "locationPosition location", returns: "Array - format Position", example: "_locationPos = locationPosition myLocation;", game: "Armed Assault", version: 1.08 },
    { id: 1129, name: "lock", description: "Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param.", syntax: "vehicleName lock locked", returns: "locked: Boolean - true - lock; false - unlock", example: "_jeepOne lock true;", game: "Operation Flashpoint", version: 1 },
    { id: 1130, name: "lockCameraTo", description: "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.", syntax: "vehicle lockCameraTo [target, turretPath]", returns: "[target, turretPath]: Array", example: "uav lockCameraTo [vehicle, [0,0]];", game: "Arma 3", version: 1.26 },
    { id: 1131, name: "lockCargo", description: "Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local.", syntax: "vehicle lockCargo lock", returns: "lock: Boolean", example: "vehicleName lockCargo true;", game: "Arma 2", version: 1 },
    { id: 1132, name: "lockDriver", description: "Lock the driver position of the vehicle. This command must be executed where vehicle is local.", syntax: "vehicle lockDriver lock", returns: "lock: Boolean -", example: "vehicleName lockDriver true;", game: "Arma 2", version: 1 },
    { id: 1133, name: "locked", description: "Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order.", syntax: "locked vehicle", returns: "Number - since Arma 3: 0 - Unlocked; 1 - Default; 2 - Locked; 3 - Locked for player; -1 - vehicle is null. Older games will return Boolean", example: "_locked = locked _jeepOne;", game: "Operation Flashpoint", version: 1 },
    { id: 1134, name: "lockedCargo", description: "Check whether cargo position of the vehicle is locked.", syntax: "vehicle lockedCargo cargoIndex", returns: "cargoIndex: Number -", example: "_result = vehicleName lockedCargo 0;", game: "Arma 2", version: 1 },
    { id: 1135, name: "lockedDriver", description: "Check whether driver position of the vehicle turret is locked.", syntax: "lockedDriver vehicle", returns: "Boolean", example: "null", game: "Arma 2", version: 1 },
    { id: 1136, name: "lockedTurret", description: "Check whether gunner position of the vehicle turret is locked.", syntax: "vehicle lockedTurret turretPath", returns: "turretPath: Array -", example: "_locked = tank lockedTurret [0];", game: "Arma 2", version: 1 },
    { id: 1137, name: "lockIdentity", description: "Locks the identity of a person. This will disable default identity.", syntax: "lockIdentity unit", returns: "Bool - true, if it was applied", example: "_success = lockIdentity player;", game: "Arma 3", version: 1.56 },
    { id: 1138, name: "lockTurret", description: "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local.", syntax: "vehicle lockTurret [turret path,lock]", returns: "[turret path,lock]: Array -", example: "vehicleName lockTurret [[0,0], true];", game: "Arma 2", version: 1 },
    { id: 1139, name: "lockWP", description: "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.", syntax: "groupName lockWP lock", returns: "lock: Boolean", example: "_groupOne lockWP true;", game: "Operation Flashpoint", version: 1 },
    { id: 1140, name: "log", description: "Base-10 logarithm of x.", syntax: "Number = log x", returns: "Number", example: "_log = log 10; // 1", game: "Operation Flashpoint", version: 1 },
    { id: 1141, name: "logEntities", description: "Creates a log file containing the list of all game entities in scene.   File is created in the same directory as .rpt file.   Special: BattlEye's RCON variant of this command is #logEntities (see also Multiplayer_Server_Commands)", syntax: "logEntities", returns: "null", example: "logEntities;", game: "Arma 3", version: 1.18 },
    { id: 1142, name: "logNetwork", description: "Registers new log file recording a network traffic and returns handle of the log.", syntax: "logNetwork logFile", returns: "Number - handle for the logging", example: "_handle = logNetwork 'myLog.txt';", game: "Arma 3", version: 1.56 },
    { id: 1143, name: "logNetworkTerminate", description: "Terminates a network log file started with logNetwork with the given handle", syntax: "logNetworkTerminate handle", returns: "Nothing", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1144, name: "lookAt", description: "Control what the unit(s) is/are looking at (target or position).", syntax: "unit(s) lookAt position", returns: "position: Object or Array", example: "_someSoldier lookAt _otherSoldier", game: "Armed Assault", version: 1 },
    { id: 1145, name: "lookAtPos", description: "Center the map on,and point the camera at,the position.", syntax: "map lookAtPos position", returns: "position: Array -", example: "(findDisplay 12) lookAtPos [0,0,0];", game: "Arma 2", version: 1 },
    { id: 1146, name: "magazineCargo", description: "Get array with magazines from ammo box (or any general weapon holder container).", syntax: "magazineCargo box", returns: "Array - Format: ['MagType1','MagType1','MagType2'...]", example: "hint str magazineCargo uniformContainer cursorTarget;", game: "Arma 3", version: 0.5 },
    { id: 1147, name: "magazines", description: "Returns array of type names of all vehicle's magazines.  When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.", syntax: "magazines vehicle", returns: "Array", example: "_mags = magazines player", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1148, name: "magazinesAllTurrets", description: "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.", syntax: "magazinesAllTurrets vehicle", returns: "Array - in the following format: [[<className>,<turretPath>,<ammoCount>,<id>,<creator>],...]", example: "_mags = magazinesAllTurrets vehicle player;", game: "Arma 3", version: 1.52 },
    { id: 1149, name: "magazinesAmmo", description: "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.    Output format:   [[magazine1],[magazine2],[magazine3]...[magazineN]]    Magazine format:   0: Magazine class name   1: Magazine current ammo count", syntax: "magazinesAmmo vehicle", returns: "Array", example: "_magazinesAmmo = magazinesAmmo player; /* [ 	['30Rnd_65x39_caseless_mag',30], 	['30Rnd_65x39_caseless_mag',30], 	['16Rnd_9x21_Mag',16], 	['SmokeShellGreen',1], 	['Chemlight_green',1], 	['HandGrenade',1] ] */", game: "Arma 3", version: 0.76 },
    { id: 1150, name: "magazinesAmmoCargo", description: "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.", syntax: "magazinesAmmoCargo vehicle", returns: "Array", example: "magazinesAmmoCargo vehicle player;", game: "Arma 3", version: 1.22 },
    { id: 1151, name: "magazinesAmmoFull", description: "Returns array of arrays of all vehicle's magazines with extended information about them.     Output format:  [[magazine1],[magazine2],[magazine3]...[magazineN]]    Magazine format:  0: Magazine class name  1: Magazine current ammo count  2: Magazine state (true - loaded, false - not loaded)  3: Magazine type (-1 - n/a, 0 - grenade, 1 - primary weapon mag, 2 - handgun mag, 4 - secondary weapon mag, 65536 - vehicle mag)  4: Magazine location ('Vest', 'Uniform', 'Backpack', '') or corresponding currentMuzzle", syntax: "magazinesAmmoFull vehicle", returns: "Array", example: "_magazinesAmmoFull = magazinesAmmoFull player; /* [ 	['30Rnd_65x39_caseless_mag',30,false,-1,'Uniform'], 	['30Rnd_65x39_caseless_mag',30,false,-1,'Vest'], 	['16Rnd_9x21_Mag',16,false,-1,'Vest'], 	['SmokeShellGreen',1,true,0,'SmokeShellGreenMuzzle'], 	['Chemlight_green',1,true,0,'ChemlightGreenMuzzle'], 	['HandGrenade',1,true,0,'HandGrenadeMuzzle'], 	['30Rnd_65x39_caseless_mag',30,true,1,'arifle_MX_ACO_pointer_F'], 	['16Rnd_9x21_Mag',16,true,2,'hgun_P07_F'] ] */", game: "Arma 3", version: 0.76 },
    { id: 1152, name: "magazinesDetail", description: "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids.   When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.", syntax: "magazinesDetail vehicle", returns: "Array", example: "_magazinesDetail = magazinesDetail player; /* [ 	'6.5mm 30Rnd STANAG Mag(30/30)[id:3]', 	'6.5mm 30Rnd STANAG Mag(30/30)[id:9]', 	'9mm 16Rnd Mag(16/16)[id:12]', 	'Smoke Grenade (Green)(1/1)[id:14]', 	'Chemlight (Green)(1/1)[id:16]', 	'RGO Frag Grenade(1/1)[id:18]' ] */", game: "Arma 3", version: 0.5 },
    { id: 1153, name: "magazinesDetailBackpack", description: "Returns an array with the type names of all the unit's backpack magazines.", syntax: "magazinesDetailBackpack unit", returns: "Array", example: "magazinesDetailBackpack player", game: "Arma 3", version: 1.04 },
    { id: 1154, name: "magazinesDetailUniform", description: "Returns an array with the type names of all the unit's uniform magazines.", syntax: "magazinesDetailUniform unit", returns: "Array", example: "magazinesDetailUniform player", game: "Arma 3", version: 1.04 },
    { id: 1155, name: "magazinesDetailVest", description: "Returns an array with the type names of all the unit's vest magazines.", syntax: "magazinesDetailVest unit", returns: "Array", example: "magazinesDetailVest player", game: "Arma 3", version: 1.04 },
    { id: 1156, name: "magazinesTurret", description: "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets", syntax: "vehicle magazinesTurret turretPath", returns: "turretPath: Array", example: "_mags = vehicle player magazinesTurret [0, 0];", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 1157, name: "magazineTurretAmmo", description: "Returns ammo count of given type from given turret           Broken when vehicle has multiple magazines of the same type", syntax: "vehicle magazineTurretAmmo [magazineClass, turretPath]", returns: "[magazineClass, turretPath]: Array", example: "vehicle player magazineTurretAmmo ['cls', [0]]", game: "Arma 3", version: 1.34 },
    { id: 1158, name: "mapAnimAdd", description: "Add next frame to map animation.", syntax: "mapAnimAdd [time, zoom, position]", returns: "time: Number", example: "mapAnimAdd [1, 0.1, markerPos 'anim1']; mapAnimCommit;", game: "Operation Flashpoint", version: 1.27 },
    { id: 1159, name: "mapAnimClear", description: "Clear map animation.", syntax: "mapAnimClear", returns: "null", example: "null", game: "Operation Flashpoint", version: 1.27 },
    { id: 1160, name: "mapAnimCommit", description: "Play map animation.", syntax: "mapAnimCommit", returns: "null", example: "null", game: "Operation Flashpoint", version: 1.27 },
    { id: 1161, name: "mapAnimDone", description: "Check if map animation is finished.", syntax: "Boolean = mapAnimDone", returns: "null", example: "null", game: "Operation Flashpoint", version: 1.27 },
    { id: 1162, name: "mapCenterOnCamera", description: "<control> mapCenterOnCamera <boolean> syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.   mapCenterOnCamera <control> syntax centers mini map type control on camera. The command returns world position of the camera. Needs to be executed each frame (preferably inside onDraw EH).", syntax: "mainmap mapCenterOnCamera enable", returns: "enable: Boolean -", example: "//--- Minimap update ((uiNamespace getVariable 'BIS_UAV_DISPLAY') displayCtrl 112410) mapCenterOnCamera true;", game: "Arma 2", version: 1.02 },
    { id: 1163, name: "mapGridPosition", description: "Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: '024577' or 'De82' or similar.", syntax: "mapGridPosition param", returns: "String - grid position", example: "null", game: "Arma 2", version: 1.04 },
    { id: 1164, name: "markAsFinishedOnSteam", description: "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.", syntax: "markAsFinishedOnSteam", returns: "null", example: "markAsFinishedOnSteam; endMission 'END1';", game: "Arma 3", version: 0.74 },
    { id: 1165, name: "markerAlpha", description: "Gets the marker alpha. See setMarkerAlpha.", syntax: "markerAlpha markerName", returns: "Number", example: "AlphaMarker = markerAlpha 'myMarker;", game: "Arma 2", version: 1 },
    { id: 1166, name: "markerBrush", description: "Gets the marker brush. See setMarkerBrush.", syntax: "markerBrush name", returns: "String", example: "if (markerBrush 'Marker1' == 'Solid') then {hint 'Marker1 is solid!'}", game: "Arma 2", version: 1 },
    { id: 1167, name: "markerColor", description: "Returns marker color for given marker. See setMarkerColor.   Note: This function is identical to getMarkerColor.", syntax: "markerColor markerName", returns: "String", example: "if (markerColor 'Marker1' == 'ColorRed') then {hint 'Marker1 is red!'}", game: "Operation Flashpoint", version: 1.5 },
    { id: 1168, name: "markerDir", description: "Get marker direction.", syntax: "Number = markerDir markerName", returns: "Number", example: "_mPos = markerDir 'markerOne'", game: "Armed Assault", version: 1.04 },
    { id: 1169, name: "markerPos", description: "Get marker Position. Note: This function is identical to getMarkerPos.", syntax: "Array = markerPos markerName", returns: "Array - format Position", example: "_mPos = markerPos 'markerOne';", game: "Operation Flashpoint", version: 1.5 },
    { id: 1170, name: "markerShape", description: "Gets the marker shape. See setMarkerShape for a list of strings that can be returned.", syntax: "markerShape name", returns: "String", example: "if (markerShape 'Marker1' == 'RECTANGLE') then {hint 'Marker1 is a rectangle!'}", game: "Arma 2", version: 1 },
    { id: 1171, name: "markerSize", description: "Returns marker size. This command is identical to getMarkerSize.", syntax: "markerSize markerName", returns: "Array - in format [a-axis, b-axis], where:  a-axis: Number - 1/2 width of marker  b-axis: Number - 1/2 height of marker", example: "_mSize = markerSize 'Marker1';", game: "Operation Flashpoint", version: 1.5 },
    { id: 1172, name: "markerText", description: "Get marker text.", syntax: "String = markerText markerName", returns: "String", example: "hint format ['Marker Text: %1',markerText 'Marker1'];", game: "Armed Assault", version: 1.04 },
    { id: 1173, name: "markerType", description: "Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers.", syntax: "String = markerType markerName", returns: "String. See cfgMarkers.", example: "if (markerType 'Marker1' == 'Empty') then {hint 'Marker1 is not an icon!'}", game: "Operation Flashpoint", version: 1.5 },
    { id: 1174, name: "max", description: "The greater of a,b", syntax: "Number = a max b", returns: "b: Number", example: "3 max 2", game: "Armed Assault", version: 1 },
    { id: 1175, name: "members", description: "Return a list of members in given team.", syntax: "members team", returns: "Array", example: "_members = members _team", game: "Arma 2", version: 1 },
    { id: 1176, name: "menuAction", description: "Returns action stored in item on given path.", syntax: "menuAction [idc, path]", returns: "Path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1177, name: "menuAdd", description: "Adds new submenu entry into item on given path.", syntax: "menuAdd [idc, path, text]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1178, name: "menuChecked", description: "Returns if item on given path is checked or not.", syntax: "menuChecked [idc, path]", returns: "Path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1179, name: "menuClear", description: "Removes all entries from given menu strip.", syntax: "menuClear idc", returns: "Nothing", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1180, name: "menuCollapse", description: "Collapses item on given path and all its childs.", syntax: "menuCollapse [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1181, name: "menuData", description: "Returns data stored in menu entry on given path.", syntax: "menuData [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1182, name: "menuDelete", description: "Deletes menu entry on given path.", syntax: "menuDelete [idc, path, text]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1183, name: "menuEnable", description: "Enables disabled menu entry on given path.", syntax: "menuEnable [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1184, name: "menuEnabled", description: "Returns if menu entry on given path is enabled or not.", syntax: "menuEnabled [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1185, name: "menuExpand", description: "Expands given menu entry on given path and all its parents so entry is visible.", syntax: "menuExpand [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1186, name: "menuHover", description: "Returns path to menu entry mouse is currently hovering over.", syntax: "menuHover idc", returns: "Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1187, name: "menuPicture", description: "Returns picture set into item on given path", syntax: "menuPicture [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1188, name: "menuSetAction", description: "Sets new action into menu entry on given path.", syntax: "menuSetAction [idc, path, action]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1189, name: "menuSetCheck", description: "Sets item on given path to be checked or not.", syntax: "menuSetCheck [idc, path, checkedl]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1190, name: "menuSetData", description: "Sets new data into item on given path.", syntax: "menuSetData [idc, path, data]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1191, name: "menuSetPicture", description: "Sets new picture into menu entry on given path.", syntax: "menuSetPicture [idc, path, picture]", returns: "path: String", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1192, name: "menuSetValue", description: "Sets new value into menu entry on given path.", syntax: "menuSetValue [idc, path, value]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1193, name: "menuShortcut", description: "Returns shortcut related to menu entry on given path.", syntax: "menuShortcut [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1194, name: "menuShortcutText", description: "Returns a string containing shortcut text for menu item on the given path.", syntax: "menuShortcutText [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1195, name: "menuSize", description: "Returns how many sub entries is in item on given path.", syntax: "menuSize [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1196, name: "menuSort", description: "Sorts subentries of item on given path by their text.", syntax: "menuSort [idc, path, reversed]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1197, name: "menuText", description: "Returns current text set in menu entry on given path.", syntax: "menuText [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1198, name: "menuURL", description: "Returns current URL set in entry on given path.", syntax: "menuURL [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1199, name: "menuValue", description: "Returns current value set in menu entry on given path.", syntax: "menuValue [idc, path]", returns: "path: Array", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1200, name: "min", description: "The smaller of a,b", syntax: "a min b", returns: "b: Number", example: "3 min 2", game: "Armed Assault", version: 1 },
    { id: 1201, name: "mineActive", description: "Checks if the given mine is active.", syntax: "mineActive obj", returns: "Boolean", example: "if (mineActive _mine) then {hint 'BOOM!'};", game: "Arma 3", version: 0.5 },
    { id: 1202, name: "mineDetectedBy", description: "Returns true if mine has been detected by a given side", syntax: "mine mineDetectedBy faction", returns: "faction: Side", example: "(allMines select 0) mineDetectedBy west;", game: "Arma 3", version: 1.24 },
    { id: 1203, name: "missionConfigFile", description: "Return root of mission Description.ext entries hierarchy.        !   Since introduction of the Eden Editor, scenario attributes can be configured in the editor itself, not only in the external Description.ext file. To access desired value independently on where it's stored, use the following commands instead:  getMissionConfigValue  getMissionConfig", syntax: "missionConfigFile", returns: "To get file path with description.ext to play sound via playSound3D: _filePath = [(str missionConfigFile), 0, -15] call BIS_fnc_trimString;", example: "for '_i' from (0) to ((count paramsArray) - 1) do {     missionNamespace setVariable [configName ((missionConfigFile/'Params') select _i), paramsArray select _i]; };", game: "Armed Assault", version: 1 },
    { id: 1204, name: "missionDifficulty", description: "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options.", syntax: "missionDifficulty", returns: "null", example: "null", game: "Arma 3", version: 1.62 },
    { id: 1205, name: "missionName", description: "Return currently loaded mission file (path to mission.pbo, relative to game exe).", syntax: "missionName", returns: "null", example: "null", game: "Operation Flashpoint: Resistance", version: 1.8 },
    { id: 1206, name: "missionNamespace", description: "Returns the global namespace attached to mission.", syntax: "missionNamespace", returns: "null", example: "missionNamespace setVariable ['YourString',3];//Same as: YourString = 3; _yourString = missionNamespace getVariable 'YourString';", game: "Arma 2", version: 1 },
    { id: 1207, name: "missionStart", description: "Returns date and time when mission started in format [year, month, day, hour, minute, second].  Works only in multiplayer, in singleplayer all values are equal to zero → [0,0,0,0,0,0]    NOTE: Because missionStart contains the time of the actual start of the mission, it might not be available in pre-init or init, but is guaranteed to be available in post-init when time > 0.", syntax: "missionStart", returns: "null", example: "setDate (missionStart select [0,5]);", game: "Operation Flashpoint: Resistance", version: 1.8 },
    { id: 1208, name: "missionVersion", description: "Returns the version of the current mission.  Mission from the 2D Editor: 12  Mission from the Eden Editor: 15 and higher (for example current version for Eden Editor mission in Arma 3 v1.57 is 51)", syntax: "missionVersion", returns: "null", example: "_version = missionVersion;", game: "Arma 3", version: 1.56 },
    { id: 1209, name: "mod", description: "Remainder of a divided by b.", syntax: "Number = a mod b", returns: "b: Number", example: "_rem = 3 mod 2;", game: "Operation Flashpoint", version: 1 },
    { id: 1210, name: "modelToWorld", description: "Translates relative position from object model space into world position. This command will take into account vectorUp of the object when calculating relative coordinates.", syntax: "model modelToWorld position", returns: "position: Array - [x,y,z] offset relative to the model centre, format PositionRelative", example: "_aboveAndBehindPlayer = player modelToWorld [0,-1,3];", game: "Armed Assault", version: 1 },
    { id: 1211, name: "modelToWorldVisual", description: "Converts position from object model space to world space in render time scope.", syntax: "object modelToWorldVisual modelPos", returns: "modelPos: Array - in format PositionRelative ([x,y,z] offset relative to the model centre)", example: "_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];", game: "Arma 3", version: 1.32 },
    { id: 1212, name: "modelToWorldVisualWorld", description: "Converts position from object model space to world space in render time.", syntax: "obj modelToWorldVisualWorld modelPos", returns: "modelPos: Array", example: "(getPos player) modelToWorldVisualWorld [0,1,0]", game: "Arma 3", version: 1.7 },
    { id: 1213, name: "modelToWorldWorld", description: "Converts position from object model space to world space (usable by setPosWorld for example).", syntax: "obj modelToWorldWorld modelPos", returns: "modelPos: Array", example: "(getPos player) modelToWorldWorld [0,1,0]", game: "Arma 3", version: 1.7 },
    { id: 1214, name: "modParams", description: "Returns list of mod parameters according to given options, values are in same order as the given options. Available options:   'name': String - name to be shown (Arma 3 instead of A3, etc.)  'picture': String - picture shown in Mod Launcher  'logo': String -  logo to be shown in Main Menu  'logoOver': String - logo to be shown in Main Menu when mouse is over  'logoSmall': String - small version of logo, prepared for drawing small icons  'tooltip': String - tooltip to be shown on mouse over   'tooltipOwned': String - tooltip to be shown on mouse over the icon when DLC is owned by player  'action': String - url to be triggered when mod button is clicked  'actionName': String - what to put on Action Button  'overview': String - overview text visible in expansion menu  'hidePicture': Boolean - do not show mod picture icon in the main menu mod list  'hideName': Boolean - do not show mod name in the main menu mod list  'defaultMod': Boolean - default mods cannot be moved or disabled by Mod Launcher  'serverOnly': Boolean - mod doesn't have to be installed on client in order to play on server with this mod running  'active': Boolean - active mod (activated through command line or stored in profile by mod launcher)", syntax: "modParams [modClass, options]", returns: "modClass: String - class name of the mod", example: "_data = modParams ['Kart', ['name', 'logo', 'picture']];", game: "Arma 3", version: 1.62 },
    { id: 1215, name: "moonIntensity", description: "Returns the intensity of the moon's brightness in range 0...1.", syntax: "moonIntensity", returns: "null", example: "_intensity = moonIntensity;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1216, name: "moonPhase", description: "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.", syntax: "moonPhase date", returns: "Number", example: "_currentMoonPhase = moonPhase date;", game: "Arma 3", version: 1.58 },
    { id: 1217, name: "morale", description: "Checks a current morale level of the unit (-1..+1).", syntax: "morale unit", returns: "Number", example: "morale (leader player);//result is 0.5", game: "Arma 2", version: 1 },
    { id: 1218, name: "move", description: "Let group move to given position (format Position or Position2D) without waypoint. Active waypoints will be ignored when command is used.", syntax: "group move position", returns: "position: Array - format Position (for Position3D --> PositionATL needs to be used.)", example: "_groupOne move position player;", game: "Operation Flashpoint", version: 1 },
    { id: 1219, name: "move3DENCamera", description: "Moves Eden Editor camera to given position, with or without offset.  Default camera offset: [0,-25,25]", syntax: "move3DENCamera [position,useOffset]", returns: "useOffset: Boolean - true if camera should use offset (defined in configFile >> 'Cfg3DEN' >> 'Camera' >> 'moveOffset')", example: "move3DENCamera [ getPos player,true];", game: "Arma 3", version: 1.56 },
    { id: 1220, name: "moveInAny", description: "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle.   Seat assignment seems to use the following priority logic:  driver (moveInDriver) -> commander turret (moveInCommander) -> gunner turret (moveInGunner) -> remaining turrets (moveInTurret) -> cargo (moveInCargo).   NOTE: This command will move player into the locked vehicle or seat just as well.", syntax: "unit moveInAny vehicle", returns: "vehicle: Object", example: "player moveInAny tank;", game: "Arma 3", version: 1.18 },
    { id: 1221, name: "moveInCargo", description: "Move soldier into vehicle cargo position (Immediate, no animation).", syntax: "unitName moveInCargo vehicle", returns: "vehicle: Object", example: "_soldierOne moveInCargo _jeepOne;", game: "Operation Flashpoint", version: 1 },
    { id: 1222, name: "moveInCommander", description: "Move soldier into vehicle commander position (Immediate, no animation).", syntax: "unitName moveInCommander vehicle", returns: "vehicle: Object", example: "_soldierOne moveInCommander _tankOne", game: "Operation Flashpoint", version: 1 },
    { id: 1223, name: "moveInDriver", description: "Move soldier into vehicle driver position (Immediate, no animation).", syntax: "unitName moveInDriver vehicle", returns: "vehicle: Object", example: "_soldierOne moveInDriver _tankOne", game: "Operation Flashpoint", version: 1 },
    { id: 1224, name: "moveInGunner", description: "Move soldier into vehicle gunner position (Immediate, no animation).", syntax: "unitName moveInGunner vehicle", returns: "vehicle: Object", example: "soldierOne moveInGunner tankOne", game: "Operation Flashpoint", version: 1 },
    { id: 1225, name: "moveInTurret", description: "Moves the soldier into the vehicle's turret. (Immediately, without animation). turret path is an array of positions inside a turret, or positions inside a turret of a turret.    [0] means first turret.  [0,0] means first turret of first turret.  [0,1] means second turret of first turret.  [1] means second turret.  [1,0] means first turret of the second turret.  [2,0] means first turret of third turret.  And so on ...", syntax: "unitName moveInTurret [vehicle, turretPath]", returns: "[vehicle, turretPath]: Array", example: "_soldierOne moveInTurret [_tank, [0, 0]]", game: "Armed Assault", version: 1 },
    { id: 1226, name: "moveObjectToEnd", description: "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects).", syntax: "map moveObjectToEnd object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1227, name: "moveOut", description: "Moves the soldier out of vehicle, immediately, without animation.", syntax: "moveOut soldier", returns: "Nothing", example: "{if (lifeState _x == 'UNCONSCIOUS') then {moveOut _x}} forEach crew cursorTarget;", game: "Arma 2", version: 1 },
    { id: 1228, name: "moveTime", description: "Returns the current time of the most important RTM animation currently being played on the soldier.", syntax: "moveTime soldier", returns: "Number", example: "moveTime player;", game: "Arma 2", version: 1 },
    { id: 1229, name: "moveTo", description: "Low level command to person to move to given position.", syntax: "person moveTo position", returns: "position: PositionATL", example: "null", game: "Armed Assault", version: 1 },
    { id: 1230, name: "moveToCompleted", description: "Check if latest low level moveTo command is finished.", syntax: "Boolean = moveToCompleted person", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 1231, name: "moveToFailed", description: "Check if latest low level moveTo command failed.", syntax: "Boolean = moveToFailed person", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 1232, name: "musicVolume", description: "Checks the current music volume (set by fadeMusic)", syntax: "Number = musicVolume", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1233, name: "name", description: "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, 'Error: No unit' is being returned.  When argument is Location, the location's name is returned. To return the textual value of a location use text command instead.    NOTE: In Arma 3 setName can be used on a person to set name. However in multiplayer name always returns profileName.", syntax: "name object", returns: "String", example: "_name = name player;", game: "Operation Flashpoint", version: 1 },
    { id: 1234, name: "nameSound", description: "Returns the nameSound of a person.", syntax: "nameSound person", returns: "String", example: "nameSound player", game: "Arma 3", version: 1.02 },
    { id: 1235, name: "nearEntities", description: "Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed. This command returns only alive entities. If you need to return dead entities as well use entities command.", syntax: "position nearEntities radius", returns: "radius: Number - radius of the sphere", example: "_list = player nearEntities 20; _list = (position player) nearEntities 50; _list = player nearEntities ['Man', 1000]; _list = (position player) nearEntities ['LaserTarget', 3000]; _list = player nearEntities [['Car', 'Motorcycle', 'Tank'], 50]; _list = (position player) nearEntities [['Man', 'Air', 'Car', 'Motorcycle', 'Tank'], 200];", game: "Arma 2", version: 1 },
    { id: 1236, name: "nearestBuilding", description: "Finds the nearest building to a given object or position. A 'building' is defined as an object that is of class 'House' and contains a path LOD.", syntax: "nearestBuilding position", returns: "Object", example: "_nBuilding = nearestBuilding player;", game: "Operation Flashpoint", version: 1 },
    { id: 1237, name: "nearestLocation", description: "Return the closest location of specified class to a given position. Checked range is unlimited (i.e. covers the whole map).", syntax: "nearestLocation [position, locationClass]", returns: "position: Object or Array in format PositionAGL or Position2D", example: "_nearestCity = nearestLocation [ getPos player, 'nameCity'];", game: "Armed Assault", version: 1.08 },
    { id: 1238, name: "nearestLocations", description: "Returns an array of locations of chosen type(s) within the given radius of the given position, sorted from nearest to farthest.", syntax: "nearestLocations [position, [locationType,...], radius, sortPosition]", returns: "position: Array - Position2D, Position3D or Object", example: "_nearbyLocations = nearestLocations [position player, ['RockArea','VegetationFir'], 100];", game: "Armed Assault", version: 1.08 },
    { id: 1239, name: "nearestLocationWithDubbing", description: "Find the nearest location (to the given position) having it speech non-empty.", syntax: "nearestLocationWithDubbing position", returns: "Location", example: "null", game: "Arma 2", version: 1 },
    { id: 1240, name: "nearestObject", description: "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.   If object class type is used, any object derived from the type is found as well (In OFP however, only objects with exactly the type given are found). If object ID passed as an argument (as in example 2) the search range is unlimited.", syntax: "nearestObject [position, type]", returns: "position:  Position3D or Position2D or Object - position to start search at", example: "_nObject = nearestObject [2345,6789]; _nObject = nearestObject [player, 'StreetLamp'];", game: "Operation Flashpoint", version: 1 },
    { id: 1241, name: "nearestObjects", description: "Returns a list of nearest objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered by proximity, the closest one will be first in the array. Alternatively, you use nearObjects command, which doesn't sort results.     position can use the format:  [[x,y,z], ['ClassName',...], radius]  or  [object, ['ClassName',...], radius]   To use it without any ClassName filter:  [object or position, [], radius].   A list of ClassName types (Tanks eg) can be found in CfgVehicles    Since Arma 3 v1.65.138818 it is possible to switch search and sorting mode between 2D and 3D", syntax: "nearestObjects [position, types, radius, 2Dmode]", returns: "position:  Object  or Array in format PositionAGL or Position2D - where to find objects, center position.", example: "nearestObjects [player, ['Car','Tank'], 200];", game: "Armed Assault", version: 1 },
    { id: 1242, name: "nearestTerrainObjects", description: "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array).  In contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.    position can use the format:  [[x,y,z], ['Type',...], radius]  or  [object, ['Type',...], radius]   To use it without any type filter:  [object or position, [], radius]     Possible type names:'TREE', 'SMALL TREE', 'BUSH', 'BUILDING', 'HOUSE', 'FOREST BORDER', 'FOREST TRIANGLE', 'FOREST SQUARE', 'CHURCH', 'CHAPEL', 'CROSS', 'BUNKER', 'FORTRESS', 'FOUNTAIN', 'VIEW-TOWER', 'LIGHTHOUSE', 'QUAY', 'FUELSTATION', 'HOSPITAL', 'FENCE', 'WALL', 'HIDE', 'BUSSTOP', 'ROAD', 'FOREST', 'TRANSMITTER', 'STACK', 'RUIN', 'TOURISM', 'WATERTOWER', 'TRACK', 'MAIN ROAD', 'ROCK', 'ROCKS', 'POWER LINES', 'RAILWAY', 'POWERSOLAR', 'POWERWAVE', 'POWERWIND', 'SHIPWRECK', 'TRAIL'    Since Arma 3 v1.61.136035 it is possible to switch the sorting algorithm off by providing optional param, which significantly increases the performance of this command, especially if the search is performed with large radius.    Since Arma 3 v1.65.138818 it is possible to switch search and sorting mode between 2D and 3D", syntax: "nearestTerrainObjects [position, types, radius, sort, 2Dmode]", returns: "position:  Object  or Array in format PositionAGL or Position2D - where to find objects, center position.", example: "nearestTerrainObjects [player, ['Tree','Bush'], 200];", game: "Arma 3", version: 1.54 },
    { id: 1243, name: "nearObjects", description: "Find objects in a sphere with given radius. The first object in the returned array is not necessarily the closest one. If you need returned objects to be sorted by distance, use nearestObjects. If typeName is given, only objects of given type (or its subtype) are listed.", syntax: "position nearObjects radius", returns: "radius: Number", example: "_list = position player nearObjects 50;", game: "Armed Assault", version: 1 },
    { id: 1244, name: "nearObjectsReady", description: "Check whether all data are loaded to nearObjects will return in reasonable time.", syntax: "position nearObjectsReady radius", returns: "radius: Number -", example: "_twnpos nearObjectsReady 500;//from ALICE", game: "Arma 2", version: 1 },
    { id: 1245, name: "nearRoads", description: "Find the road segments within the circle of given radius.", syntax: "pos nearRoads radius", returns: "radius: Number - search radius in meters", example: "_list = player nearRoads 50;", game: "Arma 2", version: 1 },
    { id: 1246, name: "nearSupplies", description: "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.", syntax: "origin nearSupplies radius", returns: "radius: Number", example: "_list = player nearSupplies 50;", game: "Arma 3", version: 0.5 },
    { id: 1247, name: "nearTargets", description: "Returns a list of targets within the defined range. 'Targets' are not restricted to enemy units.", syntax: "unit nearTargets range", returns: "range: Number", example: "player nearTargets 100;", game: "Armed Assault", version: 1.07 },
    { id: 1248, name: "needReload", description: "Return how much vehicle wants to reload its weapons.", syntax: "Number =  needReload vehicle", returns: "Number Range: 0-1, 0: full mag, 1: empty mag", example: "_seriousness = needReload _vehicle;", game: "Armed Assault", version: 1 },
    { id: 1249, name: "netId", description: "Unique ID of object or group.  As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar", syntax: "netId var", returns: "String", example: "_playerNetId = netId player;", game: "Arma 3", version: 0.5 },
    { id: 1250, name: "netObjNull", description: "A non existing network object. Not used in scripting anywhere in game.", syntax: "netObjNull", returns: "null", example: "netObjNull == netObjNull // Returns false", game: "Arma 3", version: 1 },
    { id: 1251, name: "newOverlay", description: "Creates the new overlay dialog for the specified type of overlay.", syntax: "map newOverlay config", returns: "config: Config -", example: "null", game: "Arma 2", version: 1 },
    { id: 1252, name: "nextMenuItemIndex", description: "Returns the next available menu item index.", syntax: "nextMenuItemIndex map", returns: "Number", example: "null", game: "Arma 2", version: 1 },
    { id: 1253, name: "nextWeatherChange", description: "Return the remaining time (in seconds) over which the current weather change will occur.   When a weather change finishes, the game engine will automatically generate a new random weather change over a realistic time period (minimum of 90 minutes).", syntax: "Number = nextWeatherChange", returns: "null", example: "_seconds = nextWeatherChange;", game: "Armed Assault", version: 1 },
    { id: 1254, name: "nil", description: "Nil value. This value can be used to undefine existing variables.", syntax: "nil", returns: "null", example: "variableToDestroy = nil;", game: "Operation Flashpoint", version: 1 },
    { id: 1255, name: "nMenuItems", description: "Returns the total number of user-added menu items belonging to the given menu.", syntax: "map nMenuItems menuName", returns: "menuName: String - 'file' or 'view'", example: "null", game: "Arma 2", version: 1 },
    { id: 1256, name: "not", description: "not a.  Exactly the same as ! a", syntax: "Boolean = not a", returns: "Boolean", example: "not false", game: "Operation Flashpoint", version: 1 },
    { id: 1257, name: "numberToDate", description: "Convert float number to a date.", syntax: "numberToDate [year,time]", returns: "Array", example: "_date = numberToDate [2008,0.5324]; //[2008,7,13,7,49]", game: "Arma 2", version: 1 },
    { id: 1258, name: "objectCurators", description: "Returns array with all curators which can edit given object.", syntax: "objectCurators obj", returns: "Array", example: "null", game: "Arma 3", version: 1.16 },
    { id: 1259, name: "objectFromNetId", description: "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.", syntax: "objectFromNetId id", returns: "Object", example: "objectFromNetId '2:3'", game: "Arma 3", version: 0.5 },
    { id: 1260, name: "objectParent", description: "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.   Another good use of objectParent is when a static weapon is known and one needs to check if it is assembled or not. objectParent _staticWeapon will return objNull if weapon is unpacked, or backpack object if packed.", syntax: "objectParent object", returns: "Object", example: "_weaponholder = objectParent _mybackpack;", game: "Arma 3", version: 1.5 },
    { id: 1261, name: "objNull", description: "A non-existent Object. To compare non-existent objects use isNull or isEqualTo:  objNull == objNull; // false  isNull objNull; // true  objNull isEqualTo objNull; // true", syntax: "objNull", returns: "str objNull // <NULL-object>", example: "player == player; // false if player is null", game: "Operation Flashpoint", version: 1 },
    { id: 1262, name: "objStatus", description: "Sets the status of an objective that was defined in briefing.html.  Status may be one of:  'ACTIVE'  'FAILED'  'DONE'  'HIDDEN'  To refer to an objective that is named 'OBJ_1', for example, use only the index number in this command (i.e. '1' objStatus 'HIDDEN').", syntax: "objectivenumber objStatus status", returns: "status: String", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1263, name: "onBriefingGroup", description: "Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing.", syntax: "onBriefingGroup soundName", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1264, name: "onBriefingNotes", description: "Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing.", syntax: "onBriefingNotes soundName", returns: "Nothing", example: "onBriefingNotes 'NotesVoiceOver';", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1265, name: "onBriefingPlan", description: "Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing.", syntax: "onBriefingPlan soundName", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1266, name: "onBriefingTeamSwitch", description: "Select a sound declared in the Description.ext of the mission to be played the first time the TeamSwitch tab is selected in the briefing.", syntax: "onBriefingTeamSwitch soundName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 1267, name: "onCommandModeChanged", description: "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command. Groups hc mode must contain at least one group for this command to work (see High Command). Attached code receives _isHighCommand boolean.       i   Since Arma 3 v1.57 a stackable version of this EH is available: CommandModeChanged", syntax: "onCommandModeChanged code", returns: "Nothing", example: "//Examples in-use can be found in:  //ca\modules\HC\data\scripts\HC_GUI.sqf //A3\modules_f\HC\data\scripts\HC_GUI.sqf", game: "Arma 2", version: 1 },
    { id: 1268, name: "onDoubleClick", description: "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state    NOTE: This is old mission editor command.", syntax: "map onDoubleClick command", returns: "command: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1269, name: "onEachFrame", description: "Runs given statement every frame.       i   Since Arma 3 v1.57 a stackable version of this EH is available: EachFrame          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onEachFrame statement", returns: "Nothing", example: "onEachFrame { hintSilent str position player}; //Hints position every frame", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 1270, name: "onGroupIconClick", description: "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike onGroupIconOverEnter and onGroupIconOverLeave, has one more param which returns 1 if RMB was pressed, 0 otherwise.       i   Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconClick", syntax: "onGroupIconClick command", returns: "Nothing", example: "onGroupIconClick {     // Passed values for _this are:     _is3D = _this select 0;     _group = _this select 1;     _wpID = _this select 2;     _RMB = _this select 3;     _posx = _this select 4;     _posy = _this select 5;     _shift = _this select 6;     _ctrl = _this select 7;     _alt = _this select 8;      _message = format ['____ Info ____'];     {_message = _message + format ['\n %1',_x]} forEach _this;     hint _message; }", game: "Arma 2", version: 1 },
    { id: 1271, name: "onGroupIconOverEnter", description: "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon.       i   Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverEnter", syntax: "onGroupIconOverEnter command", returns: "Nothing", example: "onGroupIconOverEnter {     // Passed values for _this are:     _is3D = _this select 0;     _group = _this select 1;     _wpID = _this select 2;     _posx = _this select 3;     _posy = _this select 4;     _shift = _this select 5;     _ctrl = _this select 6;     _alt = _this select 7;      _message = format ['____ Info ____'];     {_message = _message + format ['\n %1',_x]} forEach _this;     hint _message; }", game: "Arma 2", version: 1 },
    { id: 1272, name: "onGroupIconOverLeave", description: "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once.       i   Since Arma 3 v1.57 a stackable version of this EH is available: GroupIconOverLeave", syntax: "onGroupIconOverLeave command", returns: "Nothing", example: "onGroupIconOverLeave {     // Passed values for _this are:     _is3D = _this select 0;     _group = _this select 1;     _wpID = _this select 2;     _posx = _this select 3;     _posy = _this select 4;     _shift = _this select 5;     _ctrl = _this select 6;     _alt = _this select 7;      _message = format ['____ Info ____'];     {_message = _message + format ['\n %1',_x]} forEach _this;     hint _message; }", game: "Arma 2", version: 1 },
    { id: 1273, name: "onHCGroupSelectionChanged", description: "Defines an action performed when high command group selection has been changed.   Command receives 2 variables: _group: Group - last selected/deselected group _isSelected: Boolean - new selection state of the specific group  The code is executed on every hc group selection change until it is  removed via onHCGroupSelectionChanged ''; or onHCGroupSelectionChanged {};  or replaced by onHCGroupSelectionChanged 'SomeOtherCommand(s)'; or onHCGroupSelectionChanged {SomeOtherCommand(s)};      i   Since Arma 3 v1.57 a stackable version of this EH is available: HCGroupSelectionChanged", syntax: "onHCGroupSelectionChanged command", returns: "Nothing", example: "onHCGroupSelectionChanged '';", game: "Arma 2", version: 1 },
    { id: 1274, name: "onMapSingleClick", description: "Define action performed when user clicks in map by executing command string.  the string receives 5 (localised in scope) variables:   _this: Anything - Params passed to onMapSingleClick  _pos: Array - Clicked position  _units: Array - Units which were selected (via function keys) before opening the map (may be non-functional in Arma)  _shift: Boolean - Whether <Shift> was pressed when clicking on the map  _alt: Boolean - Whether <Alt> was pressed when clicking on the map  In Arma 3 the code should return true only if you wish to override default engine handling of the mouse click on map (see example #4)  For older games, when click is processed, code should ultimately return true back to the engine. If false is returned, default processing by the game engine is done. Return value of any other type (including Nothing) is an error. In such case default processing by the game engine is done, and error message may be displayed.  The code is executed on every click, until the Command is  removed via onMapSingleClick '', or replaced by onMapSingleClick 'SomeOtherCommand(s)'      i   Since Arma 3 v1.57 a stackable version of this EH is available: MapSingleClick          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onMapSingleClick command", returns: "Nothing", example: "onMapSingleClick ''SoldierWB' createUnit [_pos, group player]; true';", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1275, name: "onPlayerConnected", description: "This command will execute attached code whenever a player is connected to a MP session. The code will receive a number of special variables:   _id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.  _uid: String - is getPlayerUID of the joining player. In Arma 3 it is also the same as Steam ID.  _name: String - is profileName of the joining player.  _jip: (since Arma 3 v1.49) Boolean - is a flag that indicates whether or not the player joined after the mission has started (Joined In Progress). true - when the player is JIP, otherwise false.  _owner: (since Arma 3 v1.49) Number - is owner id of the joining player. Can be used for kick or ban purposes or just for publicVariableClient.      i   Since Arma 3 v1.57 a stackable version of this EH is available: PlayerConnected          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onPlayerConnected code", returns: "Nothing", example: "onPlayerConnected '[_id, _name] execVM ''PlayerConnected.sqf''';", game: "Armed Assault", version: 1 },
    { id: 1276, name: "onPlayerDisconnected", description: "This command will execute attached code whenever a player is leaving an MP session. The code will receive a number of special variables:   _id: Number - is the unique DirectPlay ID. Quite useless as the number is too big for in-built string representation and gets rounded. It is also the same id used for user placed markers.  _uid: String - is getPlayerUID of the leaving player. In Arma 3 it is also the same as Steam ID.  _name: String - is profileName of the leaving player.  _jip: (since Arma 3 v1.49) Boolean - is a flag that indicated whether or not the player joined after the mission has started (Joined In Progress). true - if the player was JIP, otherwise false.  _owner: (since Arma 3 v1.49) Number - is owner id of the leaving player. Can be used for kick or ban purposes or just for publicVariableClient.      i   Since Arma 3 v1.57 a stackable version of this EH is available: PlayerDisconnected          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onPlayerDisconnected code", returns: "Nothing", example: "onPlayerDisconnected 'diag_log [_id, _uid, _name]';", game: "Armed Assault", version: 1 },
    { id: 1277, name: "onPreloadFinished", description: "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.      i   Since Arma 3 v1.57 a stackable version of this EH is available: PreloadFinished          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onPreloadFinished command", returns: "Nothing", example: "onPreloadFinished {TAG_ReceivingScreenDone = true};", game: "Arma 2", version: 1 },
    { id: 1278, name: "onPreloadStarted", description: "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.      i   Since Arma 3 v1.57 a stackable version of this EH is available: PreloadStarted          In order to keep compatibility between official and community content the functions BIS_fnc_addStackedEventHandler and BIS_fnc_removeStackedEventHandler should be used instead.", syntax: "onPreloadStarted command", returns: "Nothing", example: "onPreloadStarted {diag_log 'preload started'};", game: "Arma 2", version: 1 },
    { id: 1279, name: "onShowNewObject", description: "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position,", syntax: "map onShowNewObject command", returns: "command: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1280, name: "onTeamSwitch", description: "Defines an action performed when the team switch is finished. Commandset receives the following special variables: _from object previous unit, _to object current unit. Consecutive use of onTeamSwitch command will overwrite previously set commandset.       i   Since Arma 3 v1.57 a stackable version of this EH is available: TeamSwitch", syntax: "onTeamSwitch commandset", returns: "Nothing", example: "onTeamSwitch {[_from, _to] execVM 'myTeamSwitchScript.sqf';};", game: "Arma 2", version: 1 },
    { id: 1281, name: "openCuratorInterface", description: "Force opens curator interface.", syntax: "openCuratorInterface", returns: "Detect if user used 'Zeus' key to open curator interface in the absence of event handler for it: findDisplay 46 displayAddEventHandler ['KeyDown', { 	if (inputAction 'CuratorInterface' > 0) then { 		hint 'Curator interface is open'; 	}; 	false }];", example: "openCuratorInterface;", game: "Arma 3", version: 1.16 },
    { id: 1282, name: "openDLCPage", description: "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)", syntax: "openDLCPage dlcID", returns: "Bool - result", example: "null", game: "Arma 3", version: 1.62 },
    { id: 1283, name: "openMap", description: "Shows in-game map. If forced, cannot be closed.", syntax: "openMap show", returns: "Boolean - equivalent of visibleMap", example: "openMap true;", game: "Arma 2", version: 1.03 },
    { id: 1284, name: "openYoutubeVideo", description: "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.", syntax: "openYoutubeVideo youTubeUrl", returns: "Boolean", example: "//Open http://www.youtube.com/watch?v=UBIAbm7Rt78 _isOpened = openYoutubeVideo 'watch?v=UBIAbm7Rt78';", game: "Arma 3", version: 1.22 },
    { id: 1285, name: "opfor", description: "Pre-defined variable for the opfor side.   Alias for east.", syntax: "opfor", returns: "null", example: "if (side player == opfor) then {     hint 'OPFOR'; };", game: "Arma 3", version: 0.5 },
    { id: 1286, name: "or", description: "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely).  Identical to: a  ||  b", syntax: "Boolean = a or b", returns: "b: Boolean - Test condition or variable that returns Boolean.", example: "if ((OBJ1) or (_enemycount == 0)) then {hint 'you win !'}", game: "Operation Flashpoint", version: 1 },
    { id: 1287, name: "orderGetIn", description: "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.", syntax: "unitArray orderGetIn order", returns: "order: Boolean", example: "[_unitOne, _unitTwo] orderGetIn true", game: "Operation Flashpoint", version: 1 },
    { id: 1288, name: "overcast", description: "Return the current overcast level. Zero is clear skies, one is maximum cloud cover.", syntax: "Number = overcast", returns: "null", example: "_cloudLevel = overcast", game: "Armed Assault", version: 1 },
    { id: 1289, name: "overcastForecast", description: "Return the overcast forecast.", syntax: "Number = overcastForecast", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 1290, name: "owner", description: "On server machine, returns the ID of the client where the object is local. Otherwise returns 0. For use on clients clientOwner command is available. To find out the owner of a Group, use groupOwner.", syntax: "owner object", returns: "Number", example: "_clientID = owner _someobject;", game: "Arma 2", version: 1 },
    { id: 1291, name: "param", description: "Extracts a single value with given index from input argument, similar to BIS_fnc_param.  When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.    If extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.", syntax: "param [index, defaultValue, expectedDataTypes, expectedArrayCount]", returns: "index: Number - index of required item in the input array.", example: "[1, 2, 3] call  { 	private _one = param [0, 1]; 	private _two = param [1, 2]; 	private _three = param [2, 3]; 	// ..... };", game: "Arma 3", version: 1.48 },
    { id: 1292, name: "params", description: "Parses input argument into array of private variables, similar to BIS_fnc_param. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.    In addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.", syntax: "params [element1, element2,...elementN]", returns: "elementN: String or Array   If String then it is the name of a private variable (must begin with underscore _, e.g. '_myVar')   If Array then it should be one of the following constructs:  [variableName, defaultValue]  [variableName, defaultValue, expectedDataTypes]  [variableName, defaultValue, expectedDataTypes, expectedArrayCount]", example: "[1, 2, 3] call { 	private ['_one', '_two', '_three']; 	_one = _this select 0; 	_two = _this select 1; 	_three = _this select 2; 	// ..... };  // Same as above, only using params [1, 2, 3] call { 	params ['_one', '_two', '_three']; 	// ..... };", game: "Arma 3", version: 1.48 },
    { id: 1293, name: "parseNumber", description: "An SQF equivalent of C++ atof function. Parses the string, interpreting its content as a floating point number.   The command first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes as many characters as possible that are valid following a syntax resembling that of floating point literals, and interprets them as a numerical value. The rest of the string after the last valid character is ignored and has no effect on the behavior of this command.   If the first sequence of non-whitespace characters in string does not form a valid floating-point number, or if no such sequence exists because either string is empty or contains only whitespace characters, no conversion is performed and the command returns 0.", syntax: "parseNumber string", returns: "Number", example: "_number = parseNumber '0.125'; //0.125", game: "Armed Assault", version: 1 },
    { id: 1294, name: "parseSimpleArray", description: "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For example: [1,'2',true,[4,'five',false]]. The string representation of this array compatible with parseSimpleArray will be '[1,''2'',true,[4,''five'',false]]' accordingly.    This command is built for speed and security and because of this has several limitations. There is limited error reporting about format errors as the command expects well formatted array as argument. To be able to see exact format expected, you can just copy output result of str command applied to an array for reference:  copyToClipboard str str [1,'2',true,[4,'five',false]] (notice the use of double str with copyToClipboard).    In any case here are the explicit rules:  no spaces are permitted between array elements: [1,2,3] - correct, [1, 2, 3] - incorrect!  only double quotes ' supported for Strings: ['hello'] - correct, ['hello'] - incorrect!   use ' to escape ', for example ['hello'] converted to string should look like this: '[''hello'']'  no spaces should exist before or after array brackets: '[1,2,3]' - correct, '[1,2,3] ' - incorrect! To simplify, your constructed array format should be the same as Arma array converted to string with str: _arr1 = getUnitLoadout player; _arr2 = parseSimpleArray str _arr1; hint str (_arr1 isEqualTo _arr2); //true   Because of this strictness the command is on average 3x faster than similar call compile string array method. And because call compile is not required, it is also more secure and primarily intended for use with callExtension to parse the String output into Array.", syntax: "parseSimpleArray stringArray", returns: "Array - valid array", example: "_arr1 = getUnitLoadout player; _arr2 = parseSimpleArray str _arr1; hint str (_arr1 isEqualTo _arr2); //true", game: "Arma 3", version: 1.68 },
    { id: 1295, name: "parseText", description: "Creates a structured text by parsing the given XML description. Do not use parseText when displaying a localized text from stringtable.xml (see notes below).", syntax: "Structured Text = parseText text", returns: "Structured Text", example: "_Stxt = parseText 'First line<img image='data\isniper.paa'/><br/>Second line';", game: "Armed Assault", version: 1 },
    { id: 1296, name: "parsingNamespace", description: "Returns the global namespace attached to config parser.", syntax: "parsingNamespace", returns: "null", example: "parsingNamespace setVariable ['var1',101.23124]; _profVar1 = parsingNamespace getVariable 'var1';", game: "Arma 2", version: 1 },
    { id: 1297, name: "particlesQuality", description: "Returns current settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high", syntax: "particlesQuality", returns: "null", example: "_currentQuality = particlesQuality;", game: "Arma 3", version: 0.5 },
    { id: 1298, name: "pi", description: "pi (180 degrees converted to Radians).", syntax: "Number = pi", returns: "null", example: "_radians = 2*pi", game: "Operation Flashpoint", version: 1 },
    { id: 1299, name: "pickWeaponPool", description: "Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission).", syntax: "pickWeaponPool object", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1300, name: "pitch", description: "Returns the pitch of a persons voice.", syntax: "pitch person", returns: "Number", example: "pitch player", game: "Arma 3", version: 1.02 },
    { id: 1301, name: "pixelGrid", description: "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.", syntax: "pixelGrid", returns: "null", example: "_gridHeight = pixelH * pixelGrid;", game: "Arma 3", version: 1.6 },
    { id: 1302, name: "pixelGridBase", description: "Returns grid size based on screen resolution.", syntax: "pixelGridBase", returns: "null", example: "_gridBaseHeight = pixelH * pixelGridBase;", game: "Arma 3", version: 1.62 },
    { id: 1303, name: "pixelGridNoUIScale", description: "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids   As mentioned in the name of this command, the user interface scale is ignored.", syntax: "pixelGridNoUIScale", returns: "null", example: "_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;", game: "Arma 3", version: 1.62 },
    { id: 1304, name: "pixelH", description: "Returns the height of one pixel for current resolution.", syntax: "pixelH", returns: "null", example: "_pixelHeight = pixelH;", game: "Arma 3", version: 1.6 },
    { id: 1305, name: "pixelW", description: "Returns width of one pixel for current resolution.", syntax: "pixelW", returns: "null", example: "_pixelWidth = pixelW;", game: "Arma 3", version: 1.6 },
    { id: 1306, name: "playableSlotsNumber", description: "Returns the number of available slots in mission per side (both empty and taken).  In singleplayer mission, it returns number of playable units per side.", syntax: "playableSlotsNumber side", returns: "Number", example: "_maxBluforPlayers = playableSlotsNumber blufor;", game: "Arma 3", version: 1.06 },
    { id: 1307, name: "playableUnits", description: "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. This does not include dead players awaiting for respawn.", syntax: "playableUnits", returns: "All non-playable units in a group:_playableInGroup = units group player - playableUnits;", example: "{_x groupChat 'I'm a playable unit.';} forEach playableUnits;", game: "Arma 2", version: 1 },
    { id: 1308, name: "playAction", description: "When used on a person, a smooth transition to the given action will be initiated.   For Arma 3 actions see: playAction/actions.", syntax: "soldier playAction action", returns: "action: String -", example: "soldierOne playAction 'SitDown'", game: "Arma 2", version: 1 },
    { id: 1309, name: "playActionNow", description: "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.   For Arma 3 actions see: playAction/actions.", syntax: "soldier playActionNow action", returns: "action: String -", example: "soldierOne playActionNow 'SitDown';", game: "Arma 2", version: 1 },
    { id: 1310, name: "player", description: "Person controlled by player.  In MP this value is different on each computer and on dedicated server this value is null.  In Intros and Outros this isn't set by default and must be assigned.", syntax: "player", returns: "isPlayerplayableUnitsselectPlayer", example: "player addRating 500;", game: "Operation Flashpoint", version: 1 },
    { id: 1311, name: "playerRespawnTime", description: "Return the player remaining time to respawn.", syntax: "Number =  playerRespawnTime", returns: "Also note that spawning doesn't create a body to use, but allows a player to choose an already existing one as defined either in the mission editor or in a script as player or playable.", example: "waitUntil {playerRespawnTime <= 0}", game: "Armed Assault", version: 1 },
    { id: 1312, name: "playerSide", description: "Returns the player's side. This is valid even when the player controlled person is dead (a difference from side player).", syntax: "playerSide", returns: "Posted on 13 Oct, 2008", example: "if (side man1 == playerSide) then {     hint 'man1 is on your side!'; };", game: "Armed Assault", version: 1 },
    { id: 1313, name: "playersNumber", description: "Return count of players playing on given side. Works only in multiplayer, in singleplayer always returns 0.  Returns number of playable slots taken by a side, not actual number of players of the side present in the mission. As a result, players who claimed a slot in the lobby but didn't start the mission yet are counted in as well.", syntax: "playersNumber side", returns: "Number", example: "_west = playersNumber west; _east = playersNumber east; _civ = playersNumber civilian; hint format ['West:%1 East:%2, Civ:%3', _west, _east, _civ];", game: "Operation Flashpoint: Resistance", version: 1.8 },
    { id: 1314, name: "playGesture", description: "When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional", syntax: "soldier playGesture moveName", returns: "moveName: String", example: "soldierOne playGesture 'Wave'", game: "Arma 2", version: 1 },
    { id: 1315, name: "playMission", description: "The mission is launched (from the main menu). Both campaign and mission are given as their directory name. If the campaign is empty, a single mission is launched. If skipBriefing is true, the intro and briefing are skipped.", syntax: "playMission [campaign, mission, skipBriefing]", returns: "campaign: String", example: "playMission ['XOutrage','x05Negotiator.Noe']", game: "Armed Assault", version: 1 },
    { id: 1316, name: "playMove", description: "When used on person, smooth transition to given move will be done.  List of moves in ArmA 2 List of moves in Armed Assault List of moves in Operation Flashpoint: Resistance", syntax: "unitName playMove moveName", returns: "moveName: String", example: "soldierOne playMove 'Stand'", game: "Operation Flashpoint", version: 1 },
    { id: 1317, name: "playMoveNow", description: "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded.   List of moves in ArmA 2 List of moves in Armed Assault List of moves in Operation Flashpoint: Resistance", syntax: "soldier playMoveNow moveName", returns: "moveName: String -", example: "player playMoveNow 'AmovPercMevaSlowWrflDf'", game: "Arma 2", version: 1 },
    { id: 1318, name: "playMusic", description: "Plays music defined in Description.ext#CfgMusic or config.cpp. To stop the music execute playMusic '' or give the start time which is beyond the music duration playMusic ['SomeMusic', 1000];    For Arma 3 music, see Arma 3 CfgMusic. Since Arma 3 v1.67 one can use Jukebox Utility to preview in-game music.", syntax: "playMusic name", returns: "Nothing", example: "playMusic 'RadioAmbient1';", game: "Operation Flashpoint", version: 1 },
    { id: 1319, name: "playScriptedMission", description: "Load the given world, launch an empty mission and execute the given, expression. Config (optional) can reference to the config entry, replacing description.ext for this mission.", syntax: "playScriptedMission [world,expression,config,ignoreChildWindow]", returns: "world: String", example: "disableSerialization; playScriptedMission ['Stratis',{ 	createCenter west; 	_grp = createGroup west; 	_player = _grp createUnit ['B_Soldier_F',[0,0,0],[],0,'NONE']; 	selectPlayer _player; },missionConfigFile, true];  //Close all displays that could be the background display ... this is essentialy forceEnd command //Closing #0 will cause game to fail _zero = findDisplay(0); { 	if (_x != _zero) then { 		_x closeDisplay 1; 	}; } foreach allDisplays;  failMission 'END1';", game: "Arma 2", version: 1 },
    { id: 1320, name: "playSound", description: "Selects sound from Description.ext#CfgSounds or config.cpp. For Arma 3 sounds see CfgSounds.", syntax: "playSound soundName", returns: "Nothing", example: "playSound 'soundname'", game: "Operation Flashpoint", version: 1 },
    { id: 1321, name: "playSound3D", description: "Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.", syntax: "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance]", returns: "filename: String - see Arma_3:_SoundFiles for available filenames", example: "playSound3D ['A3\Sounds_F\sfx\blip1.wav', player]", game: "Arma 3", version: 0.5 },
    { id: 1322, name: "plus a", description: "Unary plus - returns a copy of valuea.", syntax: "+ valuea", returns: "Number or Array", example: "Unary number - +4", game: "Operation Flashpoint", version: 1 },
    { id: 1323, name: "position", description: "Synonym for getPos.", syntax: "position object", returns: "Array - format PositionAGLS", example: "_pos = position player;", game: "Operation Flashpoint", version: 1.5 },
    { id: 1324, name: "positionCameraToWorld", description: "Transforms position from camera coordinate space to world coordinate space.  Camera axes are relative to camera orientation. x axis goes from left of the camera to right of the camera, z axis goes from underneath the camera to above the camera and y axis goes from back of the camera to where the camera is looking.", syntax: "positionCameraToWorld cameraPos", returns: "Array - Camera world position, format PositionAGL", example: "_worldPos = positionCameraToWorld _cameraPos;", game: "Armed Assault", version: 1 },
    { id: 1325, name: "posScreenToWorld", description: "Convert screen coordinates in map to world coordinates.", syntax: "map posScreenToWorld [x, y]", returns: "[x, y]: Array - format Position2D", example: "null", game: "Armed Assault", version: 1 },
    { id: 1326, name: "posWorldToScreen", description: "Convert world coordinates to screen coordinates in map.", syntax: "map posWorldToScreen position", returns: "position : Array - format Position2D", example: "null", game: "Armed Assault", version: 1 },
    { id: 1327, name: "ppEffectAdjust", description: "Set post process effect parameters", syntax: "effect ppEffectAdjust settings", returns: "settings: Array - array of effect params", example: "colorCorrections' ppEffectAdjust [1,1,-0.01,[0.0,0.0,0.0,0.0],[1.5,1,1.2,0.6],[0.199,0.587,0.114,0.20]];", game: "Arma 2", version: 1 },
    { id: 1328, name: "ppEffectCommit", description: "Commit post process effect in given time.", syntax: "effect ppEffectCommit commit", returns: "commit: Number - duration", example: "colorCorrection' ppEffectCommit 3;", game: "Arma 2", version: 1 },
    { id: 1329, name: "ppEffectCommitted", description: "Check whether given post process effect is committed", syntax: "ppEffectCommitted effect", returns: "Boolean", example: "ppEffectCommitted 'colorCorrection';", game: "Arma 2", version: 1 },
    { id: 1330, name: "ppEffectCreate", description: "Creates Post process effects specified by effect name and priority. Supported effects are:    'RadialBlur'  'ChromAberration'  'WetDistortion'  'ColorCorrections'  'DynamicBlur'  'FilmGrain'  'ColorInversion'", syntax: "ppEffectCreate [name, priority]", returns: "name: String - name of effect type.", example: "_ppGrain = ppEffectCreate ['filmGrain', 2005];", game: "Arma 2", version: 1 },
    { id: 1331, name: "ppEffectDestroy", description: "Destroy Post process effects given by handle or array of handles.", syntax: "ppEffectDestroy effect", returns: "Nothing", example: "ppEffectDestroy _hndl;", game: "Arma 2", version: 1 },
    { id: 1332, name: "ppEffectEnable", description: "Enable / disable Post process effects", syntax: "effect ppEffectEnable enable", returns: "enable: Boolean", example: "colorCorrections' ppEffectEnable true;", game: "Arma 2", version: 1 },
    { id: 1333, name: "ppEffectEnabled", description: "Checks whether given post process effect is enabled", syntax: "ppEffectEnabled effect", returns: "Boolean", example: "_enabled = ppEffectEnabled _hndl;", game: "Arma 3", version: 1.56 },
    { id: 1334, name: "ppEffectForceInNVG", description: "Forces use of Post process effects in NVG.", syntax: "number ppEffectForceInNVG bool", returns: "bool: Boolean", example: "_ppGrain ppEffectForceInNVG true;", game: "Arma 3", version: 0.5 },
    { id: 1335, name: "precision", description: "Return the precision of the given entity, how is the entity able to be precise when moving to given target.", syntax: "precision entity", returns: "Number", example: "if (position _this distance _dangerPos <= precision _this) then {...}; //used in formationCDanger.fsm", game: "Armed Assault", version: 1 },
    { id: 1336, name: "preloadCamera", description: "Preload all textures and models around given Position to avoid visual artifacts after camera is moved.  Should be used before any abrupt camera change/cut.  Returns true once all data is ready.", syntax: "preloadCamera position", returns: "Boolean", example: "waitUntil {preloadCamera markerPos 'cam_location_2'};", game: "Armed Assault", version: 1 },
    { id: 1337, name: "preloadObject", description: "Preload all textures, materials and proxies needed to render given object. Object can be determined either by config class name (CfgVehicles), or by Unit.   Returns true once all data is loaded and ready.", syntax: "Boolean = distance preloadObject object", returns: "object: Object or String", example: "spawn {waitUntil {10 preloadObject 'SoldierW'}}", game: "Armed Assault", version: 1 },
    { id: 1338, name: "preloadSound", description: "Makes sure that a sound can start playing without any delay once it is needed. Command works in Arma 3, but might not be implemented in earlier Arma installments.", syntax: "preloadSound soundName", returns: "Boolean", example: "{ 	waitUntil {preloadSound _x}; } forEach getArray (missionConfigFile >> 'CfgSounds' >> 'sounds');", game: "Armed Assault", version: 1 },
    { id: 1339, name: "preloadTitleObj", description: "Object title -  Preload data the object can be defined in the Description.ext file.", syntax: "preloadTitleObj [name, type]", returns: "name: String defined in Description.ext for the mission", example: "null", game: "Armed Assault", version: 1 },
    { id: 1340, name: "preloadTitleRsc", description: "Resource title - Preload data.  The resource can be defined in the Description.ext file.", syntax: "preloadTitleRsc [name, type]", returns: "name: String defined in Description.ext for the mission", example: "null", game: "Armed Assault", version: 1 },
    { id: 1341, name: "preprocessFile", description: "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and macros defined with #define. Due to the hard-drive access this command executes (and the lack of caching) this command should not be used in time-critical script loops.", syntax: "String = preprocessFile fileName", returns: "String", example: "_content = preprocessFile 'myFunction.sqf';", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1342, name: "preprocessFileLineNumbers", description: "Returns the preprocessed content of the given file. The preprocessor is C-like, it supports comments using // or /* and */ and macros defined with #define. The return is  file content starting with #line 1 'aFilename'    This is how mysterious #line keyword works:   The keyword can be used in any script, even the one made on-the-fly and executed in debug console for example. The format is:  #line <number> '<name>'  followed by new line. <number> could be any positive integer and <name> could be any name. This will be used only if an error occurs in the script. The error will contain the line: File <filename>, line <linenumber>  where <filename> will be the <name> you set and <linenumber> will be <number> + how many lines it is from the #line line. If the error happened on the line right under #line it will add 0 to <number>, if on second line, it will add 1 etc.   It is possible to use more than one #line keywords, but it seems having just one at the top of the script is enough to pinpoint position of the error easily.", syntax: "preprocessFileLineNumbers fileName", returns: "String - file content containing #line 1 'aFilename'", example: "_string = preprocessFileLineNumbers 'A3\ ui_f \scripts\IGUI\RscUnitInfo.sqf'", game: "Armed Assault", version: 1 },
    { id: 1343, name: "primaryWeapon", description: "Returns name of unit's primary weapon (empty string if none).", syntax: "primaryWeapon unit", returns: "String", example: "_pWeap = primaryWeapon player;", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1344, name: "primaryWeaponItems", description: "Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only.", syntax: "primaryWeaponItems unit", returns: "Array -  [silencer, laserpointer/flashlight, optics, bipod]", example: "primaryWeaponItems player;  /* [ 	'muzzle_snds_H',	//silencer 	'acc_pointer_IR',	//laser 	'optic_Aco',		//optics 	'bipod_01_F_blk'	//bipod ] */", game: "Arma 3", version: 0.5 },
    { id: 1345, name: "primaryWeaponMagazine", description: "Returns array containing class name of currently loaded primary weapon magazine (or magazines in case of weapon having grenade launcher), otherwise it returns []. This command is used for infantry weapons only.", syntax: "primaryWeaponMagazine unit", returns: "Array", example: "hint primaryWeaponMagazine player; //['30Rnd_65x39_caseless_mag']", game: "Arma 3", version: 0.7 },
    { id: 1346, name: "priority", description: "Return the priority of the task.", syntax: "priority task", returns: "Number", example: "_prioTsk01 = priority task01", game: "Arma 2", version: 1 },
    { id: 1347, name: "private", description: "Sets a variable to the innermost scope as demonstrated in Example 3.  Since Arma 3 v1.53.132932 private can be used as keyword as shown in Example 4.", syntax: "private variableName", returns: "Nothing", example: "private '_varname';", game: "Operation Flashpoint", version: 1 },
    { id: 1348, name: "processDiaryLink", description: "Open the diary screen on the record specified by link.", syntax: "processDiaryLink link", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 1349, name: "productVersion", description: "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.", syntax: "productVersion", returns: "null", example: "hint str productVersion; //would return ['Arma 2 OA', 'arma2oa', 162, 95208] on Arma 2 OA 1.62.95208", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1350, name: "profileName", description: "Returns profile name.", syntax: "profileName", returns: "null", example: "_myProfileName = profileName;", game: "Arma 3", version: 0.5 },
    { id: 1351, name: "profileNamespace", description: "Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace. A variable can be deleted by setting its value to nil. By default the variables set in this namespace will exist while the game is running. In order to make variables save permanently, use saveProfileNamespace before the game is over. The variables are stored next to the user profile in a file named myUsername.vars.GAMENAME (e.g. in the My Documents\Take On Helicopters folder).", syntax: "profileNamespace", returns: "null", example: "_namespace = profileNamespace;", game: "Take On Helicopters", version: 1 },
    { id: 1352, name: "profileNameSteam", description: "Returns name of the current Steam profile.", syntax: "profileNameSteam", returns: "null", example: "_mySteamProfileName = profileNameSteam;", game: "Arma 3", version: 1.46 },
    { id: 1353, name: "progressLoadingScreen", description: "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])", syntax: "progressLoadingScreen progress", returns: "Nothing", example: "startLoadingScreen ['Loading My Mission']; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", game: "Arma 2", version: 1 },
    { id: 1354, name: "progressPosition", description: "Returns the current position in the progress bar.", syntax: "progressPosition control", returns: "Number", example: "_pos = progressPosition _control;", game: "Arma 2", version: 1 },
    { id: 1355, name: "progressSetPosition", description: "Sets progress position of the progress bar (DialogControls-ProgressBar)", syntax: "control progressSetPosition pos", returns: "pos: Number - 0: no progress; 1: full progress", example: "_control progressSetPosition 0.5", game: "Arma 2", version: 1 },
    { id: 1356, name: "publicVariable", description: "Broadcasts missionNamespace variable and its value to all computers. The data is sent consequently and reliably to all clients. Using publicVariable too frequently in a given period of time can cause other parts of the game to experience bandwidth problems.    Variables broadcast with publicVariable during a mission stay persistent for JIP (Join In Progress) clients. Such persistent variables are synced to the JIP client before the first batch of client side Event Scripts are ran.    The following Types of data are supported:   Number Since OFP version 1.34:  Boolean  Object  Group Since ArmA version 1.00:   String  Text Since ArmA version 1.09:  Array   Code Since Arma 3 version 1.26:  Nothing (nil)   Limitations: Cannot use reserved names, such as 'player' or 'west' or 'side', etc. It is also not possible to transfer references to entities which are local, like scripts, displays, or local objects. Team Member is also not supported.", syntax: "publicVariable varName", returns: "Nothing", example: "publicVariable 'CTFscoreOne';", game: "Operation Flashpoint", version: 1.34 },
    { id: 1357, name: "publicVariableClient", description: "Send the variable value to the client computer - same limitations regarding variable type as publicVariable.  The Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).          In Arma 3 it is possible to broadcast nil value", syntax: "clientID publicVariableClient varName", returns: "varName: String", example: "3 publicVariableClient 'CTFscoreOne';", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1358, name: "publicVariableServer", description: "Send the variable value to the server - same limitations regarding variable type as publicVariable.          In Arma 3 it is possible to broadcast nil value", syntax: "publicVariableServer varName", returns: "Nothing", example: "publicVariableServer 'CTFscoreOne';", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1359, name: "pushBack", description: "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)", syntax: "array pushBack element", returns: "element: Anything", example: "_arr = [1,2,3]; _arr pushBack 4; hint str _arr; //[1,2,3,4]", game: "Arma 3", version: 1.26 },
    { id: 1360, name: "pushBackUnique", description: "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.", syntax: "array pushBackUnique element", returns: "element: Anything", example: "_arr = [1,2,3]; _index = _arr pushBackUnique 3; hint str [_index, _arr]; //[-1,[1,2,3]]", game: "Arma 3", version: 1.56 },
    { id: 1361, name: "putWeaponPool", description: "Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission.", syntax: "putWeaponPool object", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1362, name: "queryItemsPool", description: "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).", syntax: "queryItemsPool name", returns: "Number", example: "null", game: "Arma 3", version: 1.12 },
    { id: 1363, name: "queryMagazinePool", description: "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).", syntax: "Number = queryMagazinePool name", returns: "Number", example: "_num = queryMagazinePool 'M16';", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1364, name: "queryWeaponPool", description: "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).", syntax: "Number = queryWeaponPool name", returns: "Number", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1365, name: "rad", description: "Convert x from Degrees to Radians. 360 degrees is equal to 2 multiplied with pi.", syntax: "Number = rad x", returns: "Number", example: "_radians = rad 180", game: "Operation Flashpoint", version: 1 },
    { id: 1366, name: "radioChannelAdd", description: "Add the units to the custom radio channel.", syntax: "index radioChannelAdd units", returns: "units: Array - list of units", example: "2 radioChannelAdd [player, unit1];", game: "Take On Helicopters", version: 1 },
    { id: 1367, name: "radioChannelCreate", description: "Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see getPlayerChannel). The command will find an unused index in this range and create it when found. Server only.", syntax: "radioChannelCreate [color, label, callSign, units, sentenceType]", returns: "color: Array - RGBA color values", example: "_index = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], 'Q-dance Radio', '%UNIT_NAME', [player1, player2]];", game: "Take On Helicopters", version: 1 },
    { id: 1368, name: "radioChannelRemove", description: "Remove the characters from the custom radio channel.", syntax: "index radioChannelRemove characters", returns: "characters : Array - list of characters", example: "3 radioChannelRemove [myCharacter1, myCharacter2];", game: "Take On Helicopters", version: 1 },
    { id: 1369, name: "radioChannelSetCallSign", description: "Set the custom radio channel's call sign.   Available special parameters:  $KEY (reference to a localized text)  %CHANNEL_LABEL  %UNIT_SIDE  %UNIT_NAME  %UNIT_RANK  %UNIT_ID  %UNIT_REF  %UNIT_GRP_NAME  %UNIT_GRP_LEADER  %UNIT_VEH_NAME  %UNIT_VEH_POSITION", syntax: "index radioChannelSetCallSign callSign", returns: "callSign : String - custom call sign", example: "4 radioChannelSetCallSign '%UNIT_NAME';", game: "Take On Helicopters", version: 1 },
    { id: 1370, name: "radioChannelSetLabel", description: "Set the custom radio channel's label.", syntax: "index radioChannelSetLabel label", returns: "label : String - label", example: "5 radioChannelSetLabel 'Q-dance Radio';", game: "Take On Helicopters", version: 1 },
    { id: 1371, name: "radioVolume", description: "Checks the current radio volume (set by fadeRadio).", syntax: "Number = radioVolume", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 1372, name: "rain", description: "Returns the current value of rain density in range 1...0", syntax: "rain", returns: "null", example: "_rainLevel = rain;", game: "Armed Assault", version: 1 },
    { id: 1373, name: "rainbow", description: "Returns the current rainbow intensity.", syntax: "rainbow", returns: "null", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1374, name: "random", description: "Random real (floating point) value from 0 (inclusive) to x (not inclusive).   Since Arma 3 v1.55.133393 alternative syntax is added, allowing to define Gaussian Distribution params. Uses the same method as setTriggerTimeout command. Quite useful for spawning loot for example, making more valuable items more rare.   Since Arma 3 v1.67.139663 an alternative syntax is available, allowing to generate semi-random number based on provided seed.   Since Arma 3 v1.67.139663 an alternative syntax is available, generating pseudo-random noise texture based on provided seed and returning a single number between 0 (included) and 1 (excluded) at supplied x and y coordinates.", syntax: "random x", returns: "Number", example: "_rNumber = random 1;", game: "Operation Flashpoint", version: 1 },
    { id: 1375, name: "rank", description: "Returns the rank of the given unit. Rank can be one of the following:  'PRIVATE'  'CORPORAL'  'SERGEANT'  'LIEUTENANT'  'CAPTAIN'  'MAJOR'  'COLONEL'", syntax: "rank unitName", returns: "String", example: "_rank = rank player;", game: "Armed Assault", version: 1 },
    { id: 1376, name: "rankId", description: "Return the rank of the given unit for comparison.  Value may be : 0 - Private 1 - Corporal 2 - Sergeant 3 - Lieutenant 4 - Captain 5 - Major 6 - Colonel", syntax: "rankId unit", returns: "Number", example: "_myIdRank = rankId player;", game: "Arma 2", version: 1 },
    { id: 1377, name: "rating", description: "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer.   The rating of the player is displayed as the 'score' at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.", syntax: "Number = rating unitName", returns: "Number", example: "_score = rating player", game: "Operation Flashpoint", version: 1 },
    { id: 1378, name: "rectangular", description: "Checks if a location is rectangular (returns true) or elliptical (returns false).", syntax: "rectangular location", returns: "Boolean", example: "_isRect = rectangular myLocation;", game: "Armed Assault", version: 1.08 },
    { id: 1379, name: "registeredTasks", description: "List all registered task types.", syntax: "registeredTasks member", returns: "Array of Strings", example: "tasklist = registeredTasks teamMember player;", game: "Arma 2", version: 1 },
    { id: 1380, name: "registerTask", description: "Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).", syntax: "teamMember registerTask entryName", returns: "entryName: String", example: "null", game: "Arma 2", version: 1 },
    { id: 1381, name: "reload", description: "Reload all weapons", syntax: "reload unitName", returns: "Nothing", example: "if (needReload player == 1) then {reload player};", game: "Armed Assault", version: 1 },
    { id: 1382, name: "reloadEnabled", description: "Check whether magazine is reloaded whenever emptied.", syntax: "reloadEnabled unitName", returns: "Boolean", example: "null", game: "Armed Assault", version: 1 },
    { id: 1383, name: "remoteControl", description: "Switches on remote control of the unit. Command needs to be executed locally to the player. If driver is remote it will get transferred to players PC.", syntax: "who remoteControl whom", returns: "whom: Object -", example: "player remoteControl driver UAV; driver UAV switchCamera 'Internal'; //switchCamera required //sometimes switchCamera is not needed player remoteControl driver UAV;", game: "Arma 2", version: 1 },
    { id: 1384, name: "remoteExec", description: "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:    Scripted function - scheduled environment (suspension is allowed, i.e. spawn, execVM).   Script command - unscheduled environment (suspension is NOT allowed).     remoteExec can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.", syntax: "params remoteExec [functionName, targets, JIP];", returns: "[functionName, targets, JIP]: Array", example: "// <params> spawn fnc_someScriptedFunction; <params> remoteExec ['fnc_someScriptedFunction', targets, JIP];", game: "Arma 3", version: 1.5 },
    { id: 1385, name: "remoteExecCall", description: "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:    Scripted function - unscheduled environment (suspension is NOT allowed).  Script command - unscheduled environment (suspension is NOT allowed).     remoteExecCall can also be used in SP (the same restrictions apply both to SP and MP). For more information about the usage, security features and advanced jip techniques check the remote execution dedicated section.         While it is true that this function executes the desired scripted command/function by calling it, it does not mean remoteExecCall itself will be executed right away. Therefore, calling remoteExecCall is by no means a replacement for calling scripted commands/functions directly.  Example:  remoteExecCall ['func1']; call func2; // func2 can be executed sooner than func1  call func1; call func2; // func2 will always execute after func1.", syntax: "params remoteExecCall [functionName, targets, JIP]", returns: "[functionName, targets, JIP]: Array", example: "// <params> call fnc_someScriptedFunction; <params> remoteExecCall ['fnc_someScriptedFunction', targets, JIP];", game: "Arma 3", version: 1.5 },
    { id: 1386, name: "remoteExecutedOwner", description: "Returns clientOwner of the PC, which initiated Remote Execution call. If used in SP or outside of remote executed context, the command returns 0. To check if the context was remote executed or remote executed from JIP queue, use isRemoteExecuted and isRemoteExecutedJIP", syntax: "remoteExecutedOwner", returns: "null", example: "_callerRE = remoteExecutedOwner;", game: "Arma 3", version: 1.7 },
    { id: 1387, name: "remove3DENConnection", description: "Remove connection between entities.", syntax: "remove3DENConnection [type, from, to]", returns: "from: Array of Eden Entities - entities which has a connection", example: "remove3DENConnection ['RandomStart',get3DENSelected 'Object','marker_0']", game: "Arma 3", version: 1.56 },
    { id: 1388, name: "remove3DENEventHandler", description: "Removes Eden Editor event handler of given type and ID.    See the list of all Eden Editor Event Handlers.", syntax: "remove3DENEventHandler [type,id]", returns: "id: Number - ID of event handler, returned by add3DENEventHandler", example: "eh = add3DENEventHandler ['onUndo',{systemChat 'Zip...'}]; remove3DENEventHandler ['onUndo',eh];", game: "Arma 3", version: 1.56 },
    { id: 1389, name: "remove3DENLayer", description: "Remove Eden Editor editing layer.", syntax: "remove3DENLayer layerID", returns: "Bool - true if the layer was removed successfully (i.e., correct layer ID was used)", example: "_myLayer = -1 add3DENLayer 'Enemy Base'; remove3DENLayer _myLayer ;", game: "Arma 3", version: 1.56 },
    { id: 1390, name: "removeAction", description: "Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload.  This command has local effect. The action will only be removed on the computer that executes the command.", syntax: "unit removeAction index", returns: "index: Number - action id returned by addAction", example: "player removeAction 0;", game: "Operation Flashpoint", version: 1.2 },
    { id: 1391, name: "removeAll3DENEventHandlers", description: "Removes all Eden Editor event handlers of given type.     See the list of all Eden Editor Event Handlers.", syntax: "removeAll3DENEventHandlers type", returns: "Nothing", example: "removeAll3DENEventHandlers 'onUndo';", game: "Arma 3", version: 1.56 },
    { id: 1392, name: "removeAllActions", description: "Removes all unit's user added actions.", syntax: "removeAllActions unit", returns: "Nothing", example: "removeAllActions player;", game: "Arma 3", version: 0.5 },
    { id: 1393, name: "removeAllAssignedItems", description: "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear. Use removeGoggles and removeHeadgear for those.", syntax: "removeAllAssignedItems unit", returns: "Nothing", example: "removeAllAssignedItems player;", game: "Arma 3", version: 0.5 },
    { id: 1394, name: "removeAllContainers", description: "Removes all containers from the unit.", syntax: "removeAllContainers unit", returns: "Nothing", example: "removeAllContainers player;", game: "Arma 3", version: 0.5 },
    { id: 1395, name: "removeAllCuratorAddons", description: "Restrict access to all addons for given curator.", syntax: "removeAllCuratorAddons curatorObj", returns: "Nothing", example: "removeAllCuratorAddons myCurator;", game: "Arma 3", version: 1.16 },
    { id: 1396, name: "removeAllCuratorCameraAreas", description: "Delete all curator camera areas.", syntax: "removeAllCuratorCameraAreas curatorObj", returns: "Nothing", example: "removeAllCuratorCameraAreas myCurator;", game: "Arma 3", version: 1.16 },
    { id: 1397, name: "removeAllCuratorEditingAreas", description: "Delete all curator edit areas.", syntax: "removeAllCuratorEditingAreas curatorObj", returns: "Nothing", example: "removeAllCuratorEditingAreas myCurator;", game: "Arma 3", version: 1.16 },
    { id: 1398, name: "removeAllEventHandlers", description: "Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds.", syntax: "objectName removeAllEventHandlers handlerType", returns: "handlerType: String - See Event Handlers for list", example: "player removeAllEventHandlers 'killed';", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1399, name: "removeAllHandgunItems", description: "Removes all items from weapon except magazine.", syntax: "removeAllHandgunItems unit", returns: "Nothing", example: "null", game: "Arma 3", version: 0.7 },
    { id: 1400, name: "removeAllItems", description: "Removes all special items from the unit.", syntax: "removeAllItems unit", returns: "Nothing", example: "removeAllItems unitName;", game: "Arma 2", version: 1 },
    { id: 1401, name: "removeAllItemsWithMagazines", description: "Removes all itemsWithMagazines from the uniform, vest and backpack.", syntax: "removeAllItemsWithMagazines unit", returns: "Nothing", example: "removeAllItemsWithMagazines player;", game: "Arma 3", version: 1.04 },
    { id: 1402, name: "removeAllMissionEventHandlers", description: "Removes all mission event handlers of the given type which were added by addMissionEventHandler.", syntax: "removeAllMissionEventHandlers type", returns: "Nothing", example: "removeAllMissionEventHandlers 'Loaded';", game: "Arma 3", version: 0.5 },
    { id: 1403, name: "removeAllMPEventHandlers", description: "Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally.", syntax: "objectName removeAllMPEventHandlers event", returns: "event: String", example: "player removeAllMPEventHandlers 'mpkilled';", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 1404, name: "removeAllMusicEventHandlers", description: "Removes all music track event handlers of given type.", syntax: "removeAllMusicEventHandlers type", returns: "Nothing", example: "removeAllMusicEventHandlers 'MusicStart'", game: "Arma 3", version: 0.5 },
    { id: 1405, name: "removeAllOwnedMines", description: "Removes ownership of all owned mines/explosive devices of the given unit", syntax: "removeAllOwnedMines unit", returns: "Nothing", example: "removeAllOwnedMines player;", game: "Arma 3", version: 1.62 },
    { id: 1406, name: "removeAllPrimaryWeaponItems", description: "Removes all items from weapon except magazine.", syntax: "removeAllPrimaryWeaponItems unit", returns: "Nothing", example: "null", game: "Arma 3", version: 0.7 },
    { id: 1407, name: "removeAllWeapons", description: "Remove all weapons and magazines of the unit.   On vehicles only ammo is removed   Does not remove map, compass, radio. Use   unitname removeweapon 'itemmap' for that purpose.", syntax: "removeAllWeapons unitName", returns: "Nothing", example: "removeAllWeapons player;", game: "Operation Flashpoint", version: 1 },
    { id: 1408, name: "removeBackpack", description: "Removes unit's backpack", syntax: "removeBackpack unit", returns: "Nothing", example: "removeBackpack this;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1409, name: "removeBackpackGlobal", description: "Removes backpack from a unit. (even non-local)", syntax: "removeBackpackGlobal unit", returns: "Nothing", example: "removeBackpackGlobal player;", game: "Arma 3", version: 1.32 },
    { id: 1410, name: "removeCuratorAddons", description: "Restrict curator use of given addons.", syntax: "curatorObj removeCuratorAddons addons", returns: "addons: Array", example: "curatorModule removeCuratorAddons [addon1,addon2]", game: "Arma 3", version: 1.16 },
    { id: 1411, name: "removeCuratorCameraArea", description: "Removes curator camera area.", syntax: "curatorObj removeCuratorCameraArea cameraAreaID", returns: "cameraAreaID: Number", example: "myCurator removeCuratorCameraArea 3;", game: "Arma 3", version: 1.16 },
    { id: 1412, name: "removeCuratorEditableObjects", description: "Unregister objects which can be edited by a curator.", syntax: "curatorObj removeCuratorEditableObjects [[objects],removeCrew]", returns: "[[objects],removeCrew]: Array", example: "curatorModule removeCuratorEditableObjects [[cursorTarget],true]", game: "Arma 3", version: 1.16 },
    { id: 1413, name: "removeCuratorEditingArea", description: "Removes editing area for given curator.", syntax: "curatorObj removeCuratorEditingArea editAreaID", returns: "editAreaID: Number", example: "myCurator removeCuratorEditingArea 3;", game: "Arma 3", version: 1.16 },
    { id: 1414, name: "removeDrawIcon", description: "Removes an icon for an editor object.", syntax: "map removeDrawIcon [object,string identifier]", returns: "[object,string identifier]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1415, name: "removeDrawLinks", description: "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.", syntax: "map removeDrawLinks [from,param type]", returns: "[from,param type]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1416, name: "removeEventHandler", description: "Removes event handler added by addEventHandler.   When any handler is removed, all handler indices higher than the deleted one should be decremented.", syntax: "objectName removeEventHandler [type, index]", returns: "[type, index]: Array", example: "player removeEventHandler ['killed', 0]", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1417, name: "removeFromRemainsCollector", description: "Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector", syntax: "removeFromRemainsCollector remains", returns: "Nothing", example: "removeFromRemainsCollector [unit1, unit2, vehicle1];", game: "Arma 3", version: 1.32 },
    { id: 1418, name: "removeGoggles", description: "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.", syntax: "removeGoggles unit", returns: "Nothing", example: "removeGoggles assaultDiver;", game: "Arma 3", version: 0.5 },
    { id: 1419, name: "removeGroupIcon", description: "Remove icon with given ID from group.", syntax: "group removeGroupIcon iconID", returns: "iconID: Number -", example: "_target removeGroupIcon (_target getvariable 'hc_attackicon');", game: "Arma 2", version: 1 },
    { id: 1420, name: "removeHandgunItem", description: "Removes given weapon item from the handgun weapon cargo space.  As of Arma 3 DEV 1.37, this command also supports weapon magazines.", syntax: "unit removeHandgunItem item", returns: "item: String - Config class", example: "player removeHandgunItem 'muzzle_snds_L';", game: "Arma 3", version: 0.7 },
    { id: 1421, name: "removeHeadgear", description: "Removes headgear from a unit. If unit has no headgear command quietly fails.", syntax: "removeHeadgear unit", returns: "Nothing", example: "removeHeadgear player;", game: "Arma 3", version: 0.5 },
    { id: 1422, name: "removeItem", description: "Removes item from the inventory.", syntax: "unit removeItem item", returns: "item: String", example: "bluforUnit unassignItem 'NVGoggles'; bluforUnit removeItem 'NVGoggles'; opforUnit unassignItem 'NVGoggles_OPFOR'; opforUnit removeItem 'NVGoggles_OPFOR'; independentUnit unassignItem 'NVGoggles_INDEP'; independentUnit removeItem 'NVGoggles_INDEP';", game: "Arma 3", version: 0.5 },
    { id: 1423, name: "removeItemFromBackpack", description: "Removes item from soldier's backpack.", syntax: "unit removeItemFromBackpack item", returns: "item: String", example: "null", game: "Arma 3", version: 1.04 },
    { id: 1424, name: "removeItemFromUniform", description: "Removes item from soldier's uniform. Can be used with magazines and weapons too.", syntax: "unit removeItemFromUniform item", returns: "item: String", example: "null", game: "Arma 3", version: 1.04 },
    { id: 1425, name: "removeItemFromVest", description: "Removes item from soldier's vest.", syntax: "unit removeItemFromVest item", returns: "item: String", example: "null", game: "Arma 3", version: 1.04 },
    { id: 1426, name: "removeItems", description: "Removes all items with given template from the inventory.", syntax: "unit removeItems item", returns: "item: String", example: "player removeItems 'FirstAidKit';", game: "Arma 3", version: 0.5 },
    { id: 1427, name: "removeMagazine", description: "Remove magazine from the unit.   Note: You may create invalid combinations with this function. When doing so, application behaviour is undefined.", syntax: "unitName removeMagazine magazineName", returns: "magazineName: String - see weapons", example: "player removeMagazine 'M16'", game: "Operation Flashpoint", version: 1 },
    { id: 1428, name: "removeMagazineGlobal", description: "Removes the magazine from the unit.", syntax: "unit removeMagazineGlobal magazineName", returns: "magazineName: String", example: "player removeMagazineGlobal '30Rnd_65x39_caseless_mag';", game: "Arma 3", version: 0.76 },
    { id: 1429, name: "removeMagazines", description: "Remove all magazines of given type from the unit.  Note: You may create invalid combinations with this function. When doing so, application behaviour is undefined.", syntax: "unitName removeMagazines magazineName", returns: "magazineName: String", example: "player removeMagazines 'M16';", game: "Operation Flashpoint", version: 1 },
    { id: 1430, name: "removeMagazinesTurret", description: "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.", syntax: "vehicle removeMagazinesTurret [magazineName, turretPath]", returns: "[magazineName, turretPath]: Array", example: "vehicle player removeMagazinesTurret ['60rnd_cmflaremagazine',[-1]]", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 1431, name: "removeMagazineTurret", description: "Removes the magazine from the turret. Use turret path [-1] for driver's turret.  Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.", syntax: "vehicle removeMagazineTurret [magazineName, turretPath]", returns: "[weaponName, turretPath]: Array", example: "vehicle player removeMagazineTurret ['60rnd_cmflaremagazine',[-1]]", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 1432, name: "removeMenuItem", description: "Removes a previously added menu item.", syntax: "map removeMenuItem index", returns: "index: Number - index of menu item to delete", example: "null", game: "Arma 2", version: 1 },
    { id: 1433, name: "removeMissionEventHandler", description: "Removes mission event handler added by addMissionEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.", syntax: "removeMissionEventHandler [type, index]", returns: "index: Number - Index is returned by addMissionEventHandler.", example: "for '_i' from 0 to 4 do {  missionNamespace setVariable [ format ['handler%1',_i],addMissionEventHandler ['Loaded','hint ''_i'';']]; }; removeMissionEventHandler ['Loaded',handler2]; //Remove the third index under type 'Loaded'", game: "Arma 3", version: 0.5 },
    { id: 1434, name: "removeMPEventHandler", description: "Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices highter than the deleted one should decremented", syntax: "unitName removeMPEventHandler [event, index]", returns: "event: String", example: "player removeMPEventHandler ['killed', 0];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 1435, name: "removeMusicEventHandler", description: "Removes specified music track event handler.", syntax: "removeMusicEventHandler [type, id]", returns: "type: String - 'MusicStart' or 'MusicStop'", example: "removeMusicEventHandler ['MusicStart', 12];", game: "Arma 3", version: 0.5 },
    { id: 1436, name: "removeOwnedMine", description: "Removes ownership over a remotely detonatable mine from the unit.", syntax: "unit removeOwnedMine mine", returns: "mine: Object - The mine object", example: "player removeOwnedMine SuperMine;", game: "Arma 3", version: 1.62 },
    { id: 1437, name: "removePrimaryWeaponItem", description: "Removes given weapon item from the primary weapon cargo space.  As of Arma 3 DEV 1.37, this command also supports weapon magazines.", syntax: "unit removePrimaryWeaponItem item", returns: "item: String", example: "player removePrimaryWeaponItem 'acc_flashlight';", game: "Arma 3", version: 0.7 },
    { id: 1438, name: "removeSecondaryWeaponItem", description: "Removes given weapon item from the secondary weapon cargo space. This command also supports weapon magazines.", syntax: "unit removeSecondaryWeaponItem item", returns: "item: String", example: "player removeSecondaryWeaponItem (secondaryWeaponItems select 0);", game: "Arma 3", version: 1.38 },
    { id: 1439, name: "removeSimpleTask", description: "Remove a simple task from the list of simple tasks.", syntax: "person removeSimpleTask task", returns: "task: Task", example: "player removeSimpleTask _tskKillSpongebob", game: "Arma 2", version: 1 },
    { id: 1440, name: "removeSwitchableUnit", description: "Remove a unit from the list of units available for Team Switch.", syntax: "removeSwitchableUnit  unitName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 1441, name: "removeTeamMember", description: "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.", syntax: "team removeTeamMember member", returns: "member: Team Member", example: "_team removeTeamMember _teamMember;", game: "Arma 2", version: 1 },
    { id: 1442, name: "removeUniform", description: "Removes uniform from unit.", syntax: "removeUniform unit", returns: "Nothing", example: "removeUniform player;", game: "Arma 3", version: 0.5 },
    { id: 1443, name: "removeVest", description: "Removes vest from unit.", syntax: "removeVest unit", returns: "Nothing", example: "removeVest player;", game: "Arma 3", version: 0.5 },
    { id: 1444, name: "removeWeapon", description: "Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal.  Note: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.", syntax: "unit removeWeapon weapon", returns: "weapon: String - weapon class name", example: "player removeWeapon 'BAF_L85A2_RIS_SUSAT';", game: "Operation Flashpoint", version: 1 },
    { id: 1445, name: "removeWeaponGlobal", description: "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.", syntax: "unit removeWeaponGlobal weapon", returns: "weapon: String - weapon class name", example: "{ 	_x removeWeaponGlobal 'Laserdesignator'; } forEach allUnits;", game: "Arma 3", version: 0.76 },
    { id: 1446, name: "removeWeaponTurret", description: "Removes weapon from the turret. Use turret path [-1] for driver's turret.", syntax: "vehicle removeWeaponTurret [weaponName, turretPath]", returns: "[weaponName, turretPath]: Array", example: "_tank removeWeaponTurret ['LMG_M200',[0,0]];", game: "Arma 3", version: 1.32 },
    { id: 1447, name: "reportRemoteTarget", description: "Shares the target vehicle via datalink to the Side center for a given time.", syntax: "side reportRemoteTarget [target, time]", returns: "[target, time]: Array", example: "blufor reportRemoteTarget [[[vehicle]] player, 60];", game: "Arma 3", version: 1.7 },
    { id: 1448, name: "requiredVersion", description: "Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned.    Version of format Major.Minor, e.g. 1.30", syntax: "requiredVersion version", returns: "Boolean", example: "if !(requiredVersion '1.09') exitWith {};", game: "Operation Flashpoint", version: 1.21 },
    { id: 1449, name: "resetCamShake", description: "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used.", syntax: "resetCamShake", returns: "null", example: "resetCamShake;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1450, name: "resetSubgroupDirection", description: "Resets direction of subgroup.", syntax: "resetSubgroupDirection unit", returns: "Nothing", example: "resetSubgroupDirection myUnit;", game: "Arma 3", version: 0.5 },
    { id: 1451, name: "resistance", description: "Resistance side.   When used in a format statement (hint format['%1',resistance]), the string returned is 'GUER'.", syntax: "resistance", returns: "null", example: "?((side _unit) == resistance) : hint 'This is a resistance unit!'", game: "Operation Flashpoint", version: 1 },
    { id: 1452, name: "resize", description: "Change array size. Can be used to add or remove elements from an array.", syntax: "arrayName resize count", returns: "count: Number - the new number of elements.", example: "_arrayNum = [0,1,2,3,4]; _arrayNum resize 2; // _arrayNum = [0,1]", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1453, name: "resources", description: "Returns the resources of a team member. Results are local to the PC on which command was executed.", syntax: "resources member", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1454, name: "respawnVehicle", description: "Sets vehicle as respawnable in MP game. The vehicle will be spawned at the locality and coordinates it was prior to destruction. If respawn type is set to base respawn (type 3) and vehicle respawn marker is provided (respawn_vehicle_XXXSIDEXXX), vehicle will spawn on the marker.     NOTE: Command has to be executed where vehicle is local", syntax: "vehicle respawnVehicle [delay, count]", returns: "[delay, count]: Array", example: "car respawnVehicle [5, 3];", game: "Armed Assault", version: 1 },
    { id: 1455, name: "restartEditorCamera", description: "Restarts the mission editor camera (if it was deleted by a script,for example).", syntax: "restartEditorCamera map", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 1456, name: "reveal", description: "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.      The knowledge value will be set to the highest level any unit of the revealing side has about the revealed target. If the revealing side has no knowledge about the revealed target, the value will be set to 1.    Since ARMA 2 OA 1.60 the alternative syntax is available. Values greater than or equal 1.5 reveal the side of the target, too.    The knowledge level can only be increased, not decreased by this command.    In MP targetKnowledge and knowsAbout infos get updated only on the PC where command was executed.", syntax: "toWhom reveal target", returns: "target: Object  which is revealed", example: "_soldierOne reveal _soldierTwo; //soldierOne knowsAbout information about soldierTwo is updated", game: "Operation Flashpoint", version: 1 },
    { id: 1457, name: "revealMine", description: "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)", syntax: "side revealMine mine", returns: "mine: Object", example: "west revealMine _mine;", game: "Arma 3", version: 0.5 },
    { id: 1458, name: "reverse", description: "Reverses given array by reference (modifies the original array, just like resize).", syntax: "reverse array", returns: "Nothing", example: "_arr = [1,2,3]; reverse _arr; hint str _arr; //[3,2,1]", game: "Arma 3", version: 1.24 },
    { id: 1459, name: "reversedMouseY", description: "Return if mouse vertical axe is inverted.", syntax: "reversedMouseY", returns: "null", example: "null", game: "Arma 2", version: 1 },
    { id: 1460, name: "roadAt", description: "Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.", syntax: "roadAt position", returns: "Object - road segment or objNull", example: "_road = roadAt ASLToAGL getPosASL player;", game: "Arma 3", version: 1.58 },
    { id: 1461, name: "roadsConnectedTo", description: "Find the road segments connected to the given road segment.", syntax: "roadsConnectedTo roadSegment", returns: "Array of Objects - connected road segments", example: "_road = (player nearRoads 50) select 0; _connectedRoads = roadsConnectedTo _road;", game: "Arma 2", version: 1 },
    { id: 1462, name: "roleDescription", description: "Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP.", syntax: "roleDescription unit", returns: "String", example: "_playerRole = roleDescription player;", game: "Arma 3", version: 1.48 },
    { id: 1463, name: "ropeAttachedObjects", description: "Returns list of attached objects on ropes", syntax: "ropeAttachedObjects vehicle", returns: "Array", example: "_cargoArray = ropeAttachedObjects heli1;", game: "Arma 3", version: 1.34 },
    { id: 1464, name: "ropeAttachedTo", description: "Returns the object it is attached to by rope", syntax: "ropeAttachedTo vehicle", returns: "Object", example: "_heli = ropeAttachedTo veh1;", game: "Arma 3", version: 1.34 },
    { id: 1465, name: "ropeAttachEnabled", description: "Returns true if vehicle can be attached to ropes", syntax: "ropeAttachEnabled vehicle", returns: "Boolean", example: "ropeAttachEnabled veh1;", game: "Arma 3", version: 1.34 },
    { id: 1466, name: "ropeAttachTo", description: "Attach vehicle to rope with optional offset", syntax: "[veh, toPoint, ropeEndDownDir] ropeAttachTo rope", returns: "toPoint: Array - [x,y,z] offset relative to veh model center", example: "[veh1,[0,0,0],[0,0,-1]] ropeAttachTo (ropes heli1 select 0);", game: "Arma 3", version: 1.34 },
    { id: 1467, name: "ropeCreate", description: "Create a rope (PhysX rope in Arma 3).", syntax: "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", returns: "fromObject: Object - object where rope starts and which fly behavior will be affected", example: "myRope = ropeCreate [vehicle player, 'slingload0', myCargo, [0, 0, 0], 10]; //A3 example", game: "Take On Helicopters", version: 1 },
    { id: 1468, name: "ropeCut", description: "Cut rope and detach rope from vehicle", syntax: "ropeCut [rope, distance]", returns: "distance: Number", example: "ropeCut [ ropes heli1 select 0, 5];", game: "Arma 3", version: 1.34 },
    { id: 1469, name: "ropeDestroy", description: "Destroy a rope.", syntax: "ropeDestroy rope", returns: "Nothing", example: "ropeDestroy myRope;", game: "Take On Helicopters", version: 1 },
    { id: 1470, name: "ropeDetach", description: "Detach a rope from an object.", syntax: "vehicle ropeDetach rope;", returns: "rope: Object", example: "vehicle player ropeDetach myRope;", game: "Take On Helicopters", version: 1 },
    { id: 1471, name: "ropeEndPosition", description: "Return rope end positions in Position3D format", syntax: "ropeEndPosition rope", returns: "Array - [endPos1,endPos2]", example: "_ends = ropeEndPosition (ropes heli1 select 0); _end1 = _ends select 0; _end2 = _ends select 1;", game: "Arma 3", version: 1.34 },
    { id: 1472, name: "ropeLength", description: "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind)", syntax: "ropeLength rope", returns: "Number", example: "_length = ropeLength (ropes heli1 select 0);", game: "Arma 3", version: 1.34 },
    { id: 1473, name: "ropes", description: "Returns a vehicle's rope objects in an Array.", syntax: "ropes vehicle", returns: "Array", example: "hint str (ropes vehicle player);", game: "Arma 3", version: 1.34 },
    { id: 1474, name: "ropeUnwind", description: "Unwind rope to target length. Use relative parameter for changing rope length +/- from current length", syntax: "ropeUnwind [rope, speed, targetLength, relative]", returns: "speed: Number", example: "ropeUnwind [ ropes heli1 select 0, 3, 10];//set rope length to 10m at 3m/s", game: "Arma 3", version: 1.34 },
    { id: 1475, name: "ropeUnwound", description: "False if unwinding in progress, otherwise true", syntax: "ropeUnwound rope", returns: "Boolean", example: "_isUnwound = ropeUnwound (ropes heli1 select 0);", game: "Arma 3", version: 1.34 },
    { id: 1476, name: "rotorsForcesRTD", description: "Returns force produced by rotors.", syntax: "rotorsForcesRTD RTD_helicopter", returns: "Array", example: "_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]", game: "Arma 3", version: 1.34 },
    { id: 1477, name: "rotorsRpmRTD", description: "Returns rotors RPM", syntax: "rotorsRpmRTD RTD_helicopter", returns: "Array", example: "_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor _mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor", game: "Arma 3", version: 1.34 },
    { id: 1478, name: "round", description: "Rounds up or down to the closest integer.", syntax: "Number = round x", returns: "Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 1479, name: "runInitScript", description: "Launch init.sqs or init.sqf scripts.", syntax: "runInitScript", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 1480, name: "safeZoneH", description: "Returns the height of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the Y axis, the value will be positive but resulting Y will end up beyond the bottom border. Therefore in order to calculate Y of the bottom screen border, the length of safeZoneY must be subtracted from safeZoneH, but because it is negative, it must be added instead. _screenBottomBorderY = safeZoneH + safeZoneY. The measurement units depend on the current screen resolution getResolution. See also SafeZone", syntax: "SafeZoneH", returns: "null", example: "_screenHeight = safeZoneH;", game: "Arma 2", version: 1 },
    { id: 1481, name: "safeZoneW", description: "Returns the width of the screen in screen measurement units. Taken from top left corner of the default viewport (0,0) of the screen and going in the same direction as the X axis, the value will be positive but resulting X will end up beyond the right border. Therefore in order to calculate X of the right screen border, the length of safeZoneX must be subtracted from safeZoneW, but because it is negative, it must be added instead. _screenRightBorderX = safeZoneW + safeZoneX. The measurement units depend on the current screen resolution getResolution. See also SafeZone", syntax: "safeZoneW", returns: "null", example: "_screenWidth = safeZoneW;", game: "Arma 2", version: 1 },
    { id: 1482, name: "safeZoneWAbs", description: "Returns SafeZone width (of all monitors, in case there's more than one)", syntax: "safeZoneWAbs", returns: "null", example: "null", game: "Arma 2", version: 1.03 },
    { id: 1483, name: "safeZoneX", description: "Returns the X of the left border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the left border of the screen. Since it is going in opposite way of the X axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone", syntax: "SafeZoneX", returns: "null", example: "_screenLeftBorderX = safeZoneX; // returns a float value < 0", game: "Arma 2", version: 1 },
    { id: 1484, name: "safeZoneXAbs", description: "Returns SafeZone left border (of all monitors, in case there's more than one)", syntax: "safeZoneXAbs", returns: "null", example: "null", game: "Arma 2", version: 1.03 },
    { id: 1485, name: "safeZoneY", description: "Returns the Y of the top border of the screen, which is also a distance in screen measurement units from top left corner of the default viewport (0,0) of the screen to the top border of the screen. Since it is going in opposite way of the Y axis, the value is negative. The measurement units depend on the current screen resolution getResolution. See also SafeZone", syntax: "SafeZoneY", returns: "null", example: "_screenTopBorderY = safeZoneY; // returns a float value < 0", game: "Arma 2", version: 1 },
    { id: 1486, name: "save3DENInventory", description: "Saves current state of entitie's inventory to SQM.", syntax: "save3DENInventory entities", returns: "Nothing", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1487, name: "saveGame", description: "Autosave game (used for Retry).", syntax: "saveGame", returns: "null", example: "saveGame;", game: "Operation Flashpoint", version: 1 },
    { id: 1488, name: "saveIdentity", description: "Saves person's identity to Objects.sav file in campaign directory as entry name.", syntax: "unitName saveIdentity name", returns: "name: String", example: "player saveIdentity 'playerid'", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1489, name: "saveJoysticks", description: "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.", syntax: "saveJoysticks", returns: "null", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1490, name: "saveOverlay", description: "Save the current overlay.", syntax: "saveOverlay map", returns: "Nothing", example: "saveOverlay _map", game: "Arma 2", version: 1 },
    { id: 1491, name: "saveProfileNamespace", description: "Saves the variables stored in profileNamespace to the persistent active user profile.    Warning: this is a file operation, which makes it expensive! It is not recommended to do this at a high frequency in a loop for example. It is however also recommended not to change a large amount of variables and wait long before saving, because certain game crashes may cause a loss of data.    Warning: saving a lot of data can quickly increase the size of the profile variables file, so keep an eye on this.   Warning: TKOH's Heliport status (used in the Career mode for example) is stored in this file, so be mindful of working with this technology to avoid losing data and progress.", syntax: "saveProfileNamespace", returns: "null", example: "saveProfileNamespace;", game: "Take On Helicopters", version: 1 },
    { id: 1492, name: "saveStatus", description: "Saves object's properties to Objects.sav file in campaign directory as entry name.", syntax: "object saveStatus name", returns: "name: String", example: "player saveStatus 'playerstate'", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1493, name: "saveVar", description: "Save variable value into the campaign space. This variable is available to all following missions in the campaign.", syntax: "saveVar varname", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1494, name: "savingEnabled", description: "Check if saving the game is enabled.", syntax: "savingEnabled", returns: "null", example: "if (savingEnabled) then {   hint 'Saving is enabled!'; };", game: "Arma 2", version: 1 },
    { id: 1495, name: "say", description: "Unit will say given sound.  When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound.  A unit that has been killed or does not exist will not say anything.  Compare this with playSound which will always play a sound at the location of the player.  If the camera is not within given range, title is not shown and the sound will not be heard.  Sound is defined in CfgSound of the Description.ext.    NOTE: say will mimic either say2D or say3D depending on whether it is there executed in a cut scene or in a game scene.", syntax: "from say sound", returns: "sound: String - classname of the sound to be played. Defined in CfgSounds including Description.ext", example: "(units player select 1) say ['whisper1',5];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1496, name: "say2D", description: "Plays given sound in 2D", syntax: "from say2D sound", returns: "sound: String - classname of the sound to be played. Defined in CfgSounds including Description.ext", example: "null", game: "Arma 2", version: 1 },
    { id: 1497, name: "say3D", description: "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in 'CfgSounds' of the Description.ext or main config.   NOTE: You can stop say3D sound currently playing in 2 ways: delete the source of the sound (from) with deleteVehicle or kill the source with setDamage for example.", syntax: "from say3D sound", returns: "sound: String - classname of the sound to be played. Defined in CfgSounds including Description.ext", example: "helicopter1 say3D 'Fortunateson'", game: "Arma 2", version: 1 },
    { id: 1498, name: "scopeName", description: "Defines name of current scope. Name is visible in debugger, and name is also used as reference in some commands like breakOut and breakTo. Scope name should be defined only once per scope. Trying to set a different name on the scope that has already defined scope name will result in error.", syntax: "scopeName name", returns: "Nothing", example: "scopeName 'main'; while {true} do { 	scopeName 'loop1'; 	while {true} do { 		scopeName 'loop2'; 		... 	}; };", game: "Armed Assault", version: 1 },
    { id: 1499, name: "score", description: "Returns the person's score in MP.", syntax: "score unit", returns: "Number", example: "_pScore = score player;", game: "Operation Flashpoint", version: 1 },
    { id: 1500, name: "scoreSide", description: "Returns score for the given side.", syntax: "scoreSide side", returns: "Number", example: "_number = scoreSide west;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1501, name: "screenshot", description: "Captures a screenshot and stores it to given filename. PNG is the only available format and the file must have .png extension.     The file is saved into Screenshots folder in the Profile directory. The folder is by default limited to 250 MB to prevent abuse.   To increase the limit, add the following line at the end of the profile file: maxScreenShotFolderSizeMB = 2000; 2000 can be replaced by any value in MB.", syntax: "screenshot filename", returns: "Nothing", example: "maxScreenShotFolderSizeMB = 2000;", game: "Arma 3", version: 1.6 },
    { id: 1502, name: "screenToWorld", description: "Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates).", syntax: "screenToWorld screen", returns: "Array - PositionAGL, world position on surface [x,y,0]", example: "_wPos = screenToWorld [0.5,0.5];", game: "Arma 2", version: 1 },
    { id: 1503, name: "scriptDone", description: "Check if a script is finished running using the Script_(Handle) returned by execVM or spawn.", syntax: "scriptDone handle", returns: "Boolean", example: "@scriptDone _Handle", game: "Armed Assault", version: 1 },
    { id: 1504, name: "scriptName", description: "Assign a user friendly name to the VM script this command is executed from.  Once name is assigned, it cannot be changed.", syntax: "scriptName name", returns: "Nothing", example: "scriptName 'leetScript.sqf';", game: "Arma 2", version: 1 },
    { id: 1505, name: "scriptNull", description: "A non-existing Script or script that has finished (scriptDone). To compare non-existent scripts use isNull or isEqualTo:  scriptNull == scriptNull; // ERROR! == cannot be used with script object  isNull scriptNull; // true  scriptNull isEqualTo scriptNull; // true", syntax: "scriptNull", returns: "str scriptNull; // <NULL-script>", example: "[] spawn { 	_script = scriptNull; 	for '_i' from 1 to 10 do { 		waitUntil {isNull _script}; 		_script = _i spawn { 			hint format ['script %1 started', _this]; 			sleep 1; 			hint format ['script %1 finished', _this]; 			sleep 0.2; 		}; 	}; };", game: "Arma 3", version: 1.32 },
    { id: 1506, name: "scudState", description: "Current state of given Scud launcher. Following states are recognized:   0 - No activity   1 - Launch preparation,  2 - Launch prepared 3 - Ignition   4 - Launched.", syntax: "Number =  scudState scudName", returns: "Number", example: "if ((scudState _scud) == 3) exitWith  {    player sideChat 'SCUD Launch status: Missile Ignition'; };", game: "Operation Flashpoint", version: 1.3 },
    { id: 1507, name: "secondaryWeapon", description: "Returns name of a unit's secondary weapon (empty string if none).", syntax: "secondaryWeapon unit", returns: "String", example: "_sWeap = secondaryWeapon player;", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1508, name: "secondaryWeaponItems", description: "Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only.", syntax: "secondaryWeaponItems unit", returns: "Array -  [silencer, laserpointer/flashlight, optics, bipod]", example: "secondaryWeaponItems player; //['','','','']", game: "Arma 3", version: 0.5 },
    { id: 1509, name: "secondaryWeaponMagazine", description: "Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no secondary weapon or secondary weapon is not loaded. This command is used for infantry weapons only.", syntax: "secondaryWeaponMagazine unit", returns: "Array", example: "hint secondaryWeaponMagazine player; //['NLAW_F']", game: "Arma 3", version: 0.7 },
    { id: 1510, name: "select", description: "Selects an element from an array, config entry from Config or substring from a string or a range from an array.", syntax: "array  select index", returns: "index: Number - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.", example: "[1,2,3,4] select 2; //result is 3 position player select 2; //result is Z coordinate of player position", game: "Operation Flashpoint", version: 1 },
    { id: 1511, name: "selectBestPlaces", description: "Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.", syntax: "selectBestPlaces [position, radius, expression, precision, sourcesCount]", returns: "position: Object, Position3D or Position2D", example: "myPlaces = selectBestPlaces [position player, 50, 'meadow + 2*hills', 1, 5];", game: "Arma 2", version: 1 },
    { id: 1512, name: "selectDiarySubject", description: "Select the subject page in a log.", syntax: "person selectDiarySubject subject", returns: "subject: String  -", example: "null", game: "Arma 2", version: 1 },
    { id: 1513, name: "selectedEditorObjects", description: "Returns a list of currently selected editor objects.", syntax: "selectedEditorObjects map", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1514, name: "selectEditorObject", description: "Select an editor object. Does not un-select previously selected objects.", syntax: "map selectEditorObject object", returns: "object: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1515, name: "selectionNames", description: "Returns the list of model selections", syntax: "selectionNames object;", returns: "Array - List of selection names", example: "_house= 'Land_i_House_Small_02_V3_F' createVehicle _pos; selectionNames _house; //[ //	'door_1','door_2','damt_1','door_handle_1','door_handle_2','glass_1_hide', //	'glass_2_hide','glass_3_hide','glass_1_unhide','glass_2_unhide','glass_3_unhide', //	'glass_4_hide','glass_4_unhide' //]", game: "Arma 3", version: 1.58 },
    { id: 1516, name: "selectionPosition", description: "Search for selection in the object model (first in the memory level, then in geometry LODs).   Returns position in model space. In A1 it returns the initial position of the selection, in A2/3 position of the selection (e.g. when it is animated) in render time scope. If a selection does not exist [0,0,0] is returned.", syntax: "object selectionPosition selectionName", returns: "selectionName: String", example: "_inModelPosition = player selectionPosition 'head_hit';", game: "Armed Assault", version: 1 },
    { id: 1517, name: "selectLeader", description: "Select a group's leader. In MP the group has to be local to the PC executing the command. Locality of the group can be checked with local command and group ownership with groupOwner command.", syntax: "groupName selectLeader unitName", returns: "unitName: Object", example: "group player selectLeader player;", game: "Armed Assault", version: 1 },
    { id: 1518, name: "selectMax", description: "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0.  nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", syntax: "selectMax array", returns: "Anything - element with maximum numerical value", example: "_max = selectMax [1,2,3,4,5]; //5", game: "Arma 3", version: 1.66 },
    { id: 1519, name: "selectMin", description: "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only.  Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", syntax: "selectMin array", returns: "Anything - element with minimum numerical value", example: "_min = selectMin [1,2,3,4,5]; //1", game: "Arma 3", version: 1.66 },
    { id: 1520, name: "selectNoPlayer", description: "Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP.", syntax: "selectNoPlayer", returns: "null", example: "selectNoPlayer; hint str player; //<NULL-object>", game: "Arma 2", version: 1 },
    { id: 1521, name: "selectPlayer", description: "Moves player into given unit. In Arma 3 it is now not possible to selectPlayer into unit occupied by another player. Also avoid selecting player into editor placed units in multiplayer, as it may, on occasion, lead to some undefined behaviour. If you need to selectPlayer into another unit, consider creatingUnit dynamically.", syntax: "selectPlayer unitName", returns: "Nothing", example: "selectPlayer bob;", game: "Armed Assault", version: 1 },
    { id: 1522, name: "selectRandom", description: "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom", syntax: "selectRandom array", returns: "Anything - random value", example: "_randomElement = selectRandom [1,2,3,4,5];", game: "Arma 3", version: 1.56 },
    { id: 1523, name: "selectWeapon", description: "Selects the given weapon.  Note: For weapons that have more than one muzzle, you have to input the muzzlename and not the weaponName.   The only weapons that have muzzleNames seem to be rifles with grenade launchers, handgrenades, smokeshells and satchels.   In all other cases the weaponName must be used. Fortunately, in OFP, in most cases, both names are the same. But check.   In ArmA the weaponNames and muzzleNames are different.   For muzzle names see cfgWeapons.    NOTE: The unit must be local to the PC on which command is executed.", syntax: "unitName selectWeapon muzzleName", returns: "muzzleName: String", example: "_soldier1 selectWeapon 'LAWLauncher';", game: "Operation Flashpoint", version: 1.27 },
    { id: 1524, name: "selectWeaponTurret", description: "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.", syntax: "vehicle selectWeaponTurret [weapon, turretPath]", returns: "[weapon, turretPath]: Array", example: "MBT_Kuma selectWeaponTurret ['LMG_coax',[0]];", game: "Arma 3", version: 1.12 },
    { id: 1525, name: "sendAUMessage", description: "Send the command to the list of clients.", syntax: "sendAUMessage [clientList, command]", returns: "clientList: Array", example: "sendAUMessage [[dpnid1, dpnid2], 'ConnectTo: 192.168.1.66']", game: "Arma 3", version: 0.5 },
    { id: 1526, name: "sendSimpleCommand", description: "Sends a simple command to the vehicle's driver / gunner.   Gunner commands  FIRE  CEASE FIRE  MANUAL FIRE  CANCEL MANUAL FIRE  KEY FIRE Driver commands  FORWARD  STOP  BACK  FAST  KEY FAST  SLOW  KEY SLOW  LEFT  RIGHT  KEY UP  KEY DOWN", syntax: "vehicleName sendSimpleCommand command", returns: "command: String", example: "vehicle player sendSimpleCommand 'STOP';", game: "Armed Assault", version: 1 },
    { id: 1527, name: "sendTask", description: "Create a new AI task (subtask of parentTask). Type is name of registered task type.", syntax: "sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]", returns: "[receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1528, name: "sendTaskResult", description: "Send a result of the task to the task sender.", syntax: "task sendTaskResult [state,result,sentence]", returns: "[state,result,sentence]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1529, name: "sendUDPMessage", description: "Send message to given address using UDP protocol. Returns false if the message has not been delivered   Note: Not implemented (see talk page for more info).", syntax: "sendUDPMessage [ip, port, message]", returns: "port: Number", example: "_bool = sendUDPMessage ['192.168.0.1', 2302, 'Here goes you message...'];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1530, name: "serverCommand", description: "Executes a server command. Which command is available for execution can be found with serverCommandAvailable and whether or not it can be executed with serverCommandExecutable.     If serverCommand is executed on a client, it must be executed from UI event handler (ctrlAddEventHandler, displayAddEventHandler), such as onButtonDown or other User_Interface_Event_Handlers.     As of Arma 3 v1.39 serverCommand can be used on dedicated server and headless clients. This requires a password, both set in server.cfg and passed to the command itself (See Alt Syntax).", syntax: "serverCommand command", returns: "Boolean - always true for some reason (since A3 v1.39 also false if a non valid command is used ('#blah'))", example: "serverCommand '#logout';", game: "Arma 2", version: 1.05 },
    { id: 1531, name: "serverCommandAvailable", description: "Returns true if given serverCommand is available on current machine, false if not. Here is the general table of availability of Arma 3 server commands:     Available to anyone #login, #userlist,  #beclient,  #vote  Available to any admin (voted in / logged in) or server host #kick, #debug  Available to logged in admin or server host #lock, #unlock, #maxping, #maxdesync, #maxpacketloss  Available to any admin (voted in / logged in) #logout, #restart, #mission, #missions, #reassign, #monitor, #init  Available to logged in admin #shutdown, #restartserver, #exec, #beserver, #monitords, #logentities, #exportjipqueue  Available to logged in admin on certain game builds #captureframe, #enabletest, #disabletest To check if server command could be executed in current environment use serverCommandExecutable. For more information on what each server command does, see Multiplayer Server Commands.   NOTE: When password variant of serverCommand is used on dedicated server, the table above does not apply as everything is available to it.", syntax: "serverCommandAvailable command", returns: "Boolean", example: "_can = serverCommandAvailable '#kick';", game: "Arma 2", version: 1.05 },
    { id: 1532, name: "serverCommandExecutable", description: "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.", syntax: "serverCommandExecutable command", returns: "Boolean", example: "_can = serverCommandAvailable '#kick';", game: "Arma 3", version: 1.34 },
    { id: 1533, name: "serverName", description: "Returns name of the hosting server in MP, '' in SP.", syntax: "serverName", returns: "null", example: "null", game: "Arma 3", version: 1.48 },
    { id: 1534, name: "serverTime", description: "Server time synchronized to clients. Returns always 0 in Singleplayer.  Note that in ArmA2 1.05 Final, this command only returns the time since the Server was actually started.    NOTE: serverTime is available to both server and clients and shows the same value when synced. The only time it is not synced is on the server, right after server restart and only for the first 300 seconds. Client side serverTime is synced from the start. serverTime is also different from server time and server diag_tickTime", syntax: "serverTime", returns: "null", example: "hint format ['Synced server time : %1', serverTime];", game: "Arma 2", version: 1 },
    { id: 1535, name: "set", description: "Changes the element at the given (zero-based) index of the array.  If the element does not exist, resize index+1 is called to create it.", syntax: "array set [index, value]", returns: "[index, value]: Array", example: "_arrayOne set [0, 'Hello'];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1536, name: "set3DENAttribute", description: "Set one of entity attributes.      !   Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!", syntax: "entity set3DENAttribute [class, value]", returns: "class: String - attribute name", example: "player set3DENAttribute ['allowDamage',false ];", game: "Arma 3", version: 1.56 },
    { id: 1537, name: "set3DENAttributes", description: "Set entity attributes.    An attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.       !   Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!", syntax: "set3DENAttributes [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]", returns: "class: String - attribute name", example: "set3DENAttributes [[get3DENSelected 'Object','ControlMP',true ]];", game: "Arma 3", version: 1.56 },
    { id: 1538, name: "set3DENGrid", description: "Sets the grid increment for the given transformation type.  Transformation types:  Rotation - 'r'  Translation - 't'  Scale - 's'", syntax: "set3DENGrid [type,value]", returns: "value: Number - transformation increment", example: "set3DENGrid ['t',100];// 100m movement increment", game: "Arma 3", version: 1.56 },
    { id: 1539, name: "set3DENIconsVisible", description: "Toggle visibility of Eden Editor icons.", syntax: "set3DENIconsVisible [showMap, showScene]", returns: "showMap : Bool - visibility in the map", example: "set3DENIconsVisible [ false, false ];", game: "Arma 3", version: 1.56 },
    { id: 1540, name: "set3DENLayer", description: "Set layer for Eden Entity.", syntax: "entity set3DENLayer layerID", returns: "layerID: Number - layer ID as returned by add3DENLayer command", example: "_myLayer = -1 add3DENLayer 'CTRG'; player set3DENLayer _myLayer;", game: "Arma 3", version: 1.56 },
    { id: 1541, name: "set3DENLinesVisible", description: "Toggle visibility of Eden Editor lines.", syntax: "set3DENLinesVisible [showMap, showScene]", returns: "showMap : Bool - visibility in the map", example: "set3DENLinesVisible [ false, false ];", game: "Arma 3", version: 1.56 },
    { id: 1542, name: "set3DENLogicType", description: "Sets the new type of Logic object(s). For other objects use set3DENObjectType", syntax: "objects set3DENLogicType classname", returns: "classname: String - name of the cfgVehicles class", example: "[get3DENSelected 'logic' select 0] set3DENLogicType 'MiscOR_F';", game: "Arma 3", version: 1.7 },
    { id: 1543, name: "set3DENMissionAttributes", description: "Set scenario attributes.    An attribute is identified by its property (data when it's engine-drive attribute) value in config. For the list of all attributes with their properties, see Setting Attributes.       !   Attributes are available only within the Eden Editor workspace. You cannot access them in scenario preview or exported scenario!", syntax: "set3DENMissionAttributes [[<section>,<class1>,<value1>], ..., [<section >,<classN>,<valueN>]]", returns: "class: String - attribute name", example: "set3DENMissionAttributes [['Multiplayer','respawn',3],['Multiplayer','respawnDelay',10]];", game: "Arma 3", version: 1.56 },
    { id: 1544, name: "set3DENModelsVisible", description: "Enables or disables lines visibility in 3DEN", syntax: "set3DENModelsVisible [map, scene]", returns: "scene: Bool", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1545, name: "set3DENObjectType", description: "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType", syntax: "objects set3DENObjectType classname", returns: "classname: String - name of the cfgVehicles class", example: "[ get3DENMouseOver select 1] set3DENObjectType 'B_crew_F'; // turns object under cursor into a blufor crewman", game: "Arma 3", version: 1.56 },
    { id: 1546, name: "set3DENSelected", description: "Changes selection in 3den to what is inside entities array.", syntax: "set3DENSelected entities", returns: "Nothing", example: "null", game: "Arma 3", version: 1.56 },
    { id: 1547, name: "setAccTime", description: "Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4].", syntax: "setAccTime accFactor", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1548, name: "setAirplaneThrottle", description: "Sets a wanted throttle position, works only on player's vehicle.", syntax: "airplane setAirplaneThrottle value", returns: "value: Number - Wanted throttle", example: "null", game: "Arma 3", version: 1.7 },
    { id: 1549, name: "setAirportSide", description: "Set owning side of the airport. ID is the number to identify which airport on the island you want to check.", syntax: "id setAirportSide side", returns: "side: Side", example: "0 setAirportSide east", game: "Armed Assault", version: 1.08 },
    { id: 1550, name: "setAmmo", description: "Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed.", syntax: "unit setAmmo [weapon, count]", returns: "[weapon, count]: Array", example: "player setAmmo [handgunWeapon player, 10];", game: "Arma 3", version: 0.5 },
    { id: 1551, name: "setAmmoCargo", description: "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo.  The actual quantity to work with is determined by the model's class in CfgVehicles", syntax: "vehicleName setAmmoCargo ammoCargo", returns: "ammoCargo: Number", example: "_ammoTruck1 setAmmoCargo 0.5;", game: "Operation Flashpoint", version: 1 },
    { id: 1552, name: "setAmmoOnPylon", description: "Set count of ammo in magazine on pylon", syntax: "vehicle setAmmoOnPylon [pylon name/index, ammo count]", returns: "[pylon name/index, ammo count] : Array", example: "(vehicle player) setAmmoOnPylon [1, 12];", game: "Arma 3", version: 1.7 },
    { id: 1553, name: "setAnimAimPrecision", description: "Set aimPrecision value of the current animation state (parameter aimPrecision)", syntax: "unit setAnimAimPrecision value", returns: "value: Number", example: "null", game: "Arma 3", version: 1.54 },
    { id: 1554, name: "setAnimSpeedCoef", description: "Sets a coefficient for animation speed", syntax: "unit setAnimSpeedCoef coef", returns: "coef: Number", example: "player setAnimSpeedCoef 0.75;", game: "Arma 3", version: 1.54 },
    { id: 1555, name: "setAperture", description: "Sets custom camera aperture (-1 to do it automatically).", syntax: "setAperture aperture", returns: "Nothing", example: "setAperture 0.3;", game: "Armed Assault", version: 1 },
    { id: 1556, name: "setApertureNew", description: "Sets custom camera aperture ([-1] to do it automatically).", syntax: "setApertureNew [min, std, max, stdLum]", returns: "min: Number", example: "setApertureNew [0.3, 0.2, 0.1, 1];", game: "Arma 3", version: 0.5 },
    { id: 1557, name: "setArmoryPoints", description: "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created.", syntax: "setArmoryPoints points", returns: "Nothing", example: "setArmoryPoints (armoryPoints + 20);", game: "Arma 2", version: 1 },
    { id: 1558, name: "setAttributes", description: "Returns a structured text created by the given structured or plain text by setting attributes to the given values.", syntax: "text setAttributes [name1, value1, name2, value2, ...]", returns: "[name1, value1, name2, value2, ...]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 1559, name: "setAutonomous", description: "Sets UAV autonomous mode.", syntax: "uav setAutonomous bool", returns: "bool: Boolean", example: "uav setAutonomous true;", game: "Arma 3", version: 1.16 },
    { id: 1560, name: "setBehaviour", description: "Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of:   'CARELESS' 'SAFE' 'AWARE' 'COMBAT' 'STEALTH'.   See this page for details of the effect of this command on AI units. For Arma 3 see Arma_3_AI_Behavior", syntax: "groupName setBehaviour behaviour", returns: "behaviour: String", example: "_group1 setBehaviour 'SAFE';", game: "Operation Flashpoint", version: 1 },
    { id: 1561, name: "setBleedingRemaining", description: "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.", syntax: "unit setBleedingRemaining time", returns: "time: Number", example: "_unit setBleedingRemaining 60;", game: "Arma 3", version: 0.5 },
    { id: 1562, name: "setCameraInterest", description: "Set camera interest for given entity. Camera interest is by default 0. Any unit which is speaking has its camera interest raised to 50. Camera interest is used to focus camera to control depth of field in cutscenes. Combination of camera interest, unit position of the screen, unit movement, unit type, and some other properties is used to determine which unit to focus at. Higher camera interest increases the chance of the unit being focused.", syntax: "entity setCameraInterest interest", returns: "interest: Number", example: "_soldier setCameraInterest 50;", game: "Armed Assault", version: 1 },
    { id: 1563, name: "setCamShakeDefParams", description: "Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person.", syntax: "setCamShakeDefParams [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]", returns: "duration: Number", example: "setCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1564, name: "setCamShakeParams", description: "Set camera shake parameters.  Will not have any effect until shake is started via addCamShake.", syntax: "setCamShakeParams  [posCoef, vertCoef, horzCoef, bankCoef, interpolation]", returns: "vertCoef: Number - Strength of vertical camera pan (up/down), practical range: 0-10", example: "setCamShakeParams [0.1, 1, 1, 1, true];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1565, name: "setCamUseTI", description: "Activates thermal vision. Mode index defines what sort of thermal vision it is:   0 - White Hot  1 - Black Hot  2 - Light Green Hot / Darker Green cold  3 - Black Hot / Darker Green cold  4 - Light Red Hot /Darker Red Cold  5 - Black Hot / Darker Red Cold  6 - White Hot . Darker Red Cold  7 - Thermal (Shade of Red and Green, Bodies are white)   This command only works with camCreate created camera that is currently the main camera for the player (see example).", syntax: "Bool setCamUseTI modeIndex", returns: "modeIndex: Number - Ti mode", example: "true setCamUseTI 1;", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1566, name: "setCaptive", description: "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger 'detected by' conditions for its original side.    Using a number (instead of a boolean) for the status has no further effect on the engine's behavior, but can be used by captiveNum to keep track of the captivity status at a finer resolution (e.g. handcuffed, grouped, etc.). The numbered status syntax was introduced in Arma 2.", syntax: "unitName setCaptive status", returns: "status: Boolean  - true means captive", example: "_soldier1 setCaptive true;", game: "Operation Flashpoint", version: 1 },
    { id: 1567, name: "setCenterOfMass", description: "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", syntax: "myObject setCenterOfMass [com, time]", returns: "com: Array - [x,y,z] offset relative to the model centre", example: "myObject setCenterOfMass [[0,-1,0],0.5];", game: "Arma 3", version: 1.02 },
    { id: 1568, name: "setCollisionLight", description: "Switches collision lights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions 'CollisionLightOn'/'CollisionLightOff'", syntax: "vehicle setCollisionLight set", returns: "set: Boolean", example: "heli setCollisionLight true;", game: "Arma 3", version: 1.32 },
    { id: 1569, name: "setCombatMode", description: "Set group combat mode (engagement rules). Mode may be one of:   'BLUE' (Never fire)  'GREEN' (Hold fire - defend only)  'WHITE' (Hold fire, engage at will)  'YELLOW' (Fire at will)  'RED' (Fire at will, engage at will)", syntax: "groupName setCombatMode mode", returns: "mode: String", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1570, name: "setCompassOscillation", description: "Sets compass oscillation.", syntax: "setCompassOscillation [angle, frequencyMin, frequencyMax]", returns: "angle: Number", example: "setCompassOscillation [1, 1, 1];", game: "Arma 3", version: 0.5 },
    { id: 1571, name: "setCuratorCameraAreaCeiling", description: "Sets maximal height to which curator camera can move.", syntax: "curatorObj setCuratorCameraAreaCeiling height", returns: "height: Number (in metres)", example: "myCurator setCuratorCameraAreaCeiling 50;", game: "Arma 3", version: 1.16 },
    { id: 1572, name: "setCuratorCoef", description: "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).", syntax: "curatorObj setCuratorCoef [action,coef]", returns: "[action,coef]: Array", example: "curatorModule setCuratorCoef ['Place', 1]", game: "Arma 3", version: 1.16 },
    { id: 1573, name: "setCuratorEditingAreaType", description: "Set whether curator can edit in all editing areas (true) or outside of them (false).", syntax: "curatorObj setCuratorEditingAreaType bool", returns: "bool: Boolean", example: "curatorModule setCuratorEditingAreaType true", game: "Arma 3", version: 1.16 },
    { id: 1574, name: "setCuratorWaypointCost", description: "Sets cost of waypoints (used for placing, editing and deleting).", syntax: "curatorObj setCuratorWaypointCost cost", returns: "cost: Number", example: "myCUrator setCuratorWaypointCost 0.1;", game: "Arma 3", version: 1.16 },
    { id: 1575, name: "setCurrentChannel", description: "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure. Correspondence between channel and number:  0 = Global  1 = Side  2 = Command  3 = Group  4 = Vehicle  5 = Direct  6-15 = Custom Radio (see radioChannelCreate)", syntax: "setCurrentChannel channel", returns: "Boolean", example: "_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active", game: "Arma 3", version: 1.42 },
    { id: 1576, name: "setCurrentTask", description: "Set the task as a current task of the person.", syntax: "object setCurrentTask task", returns: "task: Task - the task you want to select", example: "player setCurrentTask tskKillSpongebob;", game: "Arma 2", version: 1 },
    { id: 1577, name: "setCurrentWaypoint", description: "Sets the currently active waypoint for a group.", syntax: "groupName setCurrentWaypoint waypoint", returns: "waypoint: Array - format Waypoint", example: "_grp setCurrentWaypoint [_grp, 1];", game: "Armed Assault", version: 1.05 },
    { id: 1578, name: "setCustomAimCoef", description: "Set custom aim precision coefficient for weapon sway", syntax: "unit setCustomAimCoef coef", returns: "coef: Number", example: "player setCustomAimCoef 1;", game: "Arma 3", version: 1.54 },
    { id: 1579, name: "setDamage", description: "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead. (This function is an alias of setDammage and was introduced to fix the obvious spelling error in the original function name)   Since Arma 3 v1.67 there is an alternative syntax to this command allowing to switch off destruction effects.", syntax: "object setDamage damage", returns: "damage: Number", example: "_soldier1 setDamage 1;", game: "Operation Flashpoint", version: 1.5 },
    { id: 1580, name: "setDammage", description: "Damage / repair object.  Damage 0 means fully functional, damage 1 means completely destroyed / dead.   Alias of setDamage, which was introduced to fix a spelling error in this operator's name.", syntax: "object setDammage damage", returns: "damage: Number", example: "_soldier1 setDammage 1;", game: "Operation Flashpoint", version: 1 },
    { id: 1581, name: "setDate", description: "Sets the actual mission date and time.", syntax: "setDate [year, month, day, hour, minute]", returns: "Nothing", example: "setDate [1986, 2, 25, 16, 0];  //(4:00pm February 25, 1986)", game: "Armed Assault", version: 1 },
    { id: 1582, name: "setDebriefingText", description: "Sets debriefing text for endType defined in CfgDebriefing.", syntax: "endType setDebriefingText [title, description]", returns: "[title, description]: Array", example: "_currentObjective = (taskDescription (currentTask player)) select 2; 'endDeath' setDebriefingText ['You Lose','All of your men were killed while assaulting the ' + _currentObjective];", game: "Arma 3", version: 0.5 },
    { id: 1583, name: "setDefaultCamera", description: "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)", syntax: "setDefaultCamera [position, direction]", returns: "direction: Array - format Vector3D - direction of the camera", example: "setDefaultCamera [[5000,5000,200],[1,1,-1]];", game: "Arma 3", version: 1.1 },
    { id: 1584, name: "setDestination", description: "Set the destination for path planning of the pilot.  Possible values for planningMode are:   'DoNotPlan' - used when not moving  'DoNotPlanFormation' - used in formation when simple path testing is used  'LEADER PLANNED' - used for formation leader (full path finding used)  'LEADER DIRECT' - used for DirectGo (like getin, supply)  'FORMATION PLANNED' - used in formation when full path finding is used  'VEHICLE PLANNED' - used for vehicle driver  Works best when used on agents", syntax: "object setDestination [position, planningMode, forceReplan]", returns: "[position, planningMode, forceReplan]: Array", example: "bob setDestination [screenToWorld [0.5,0.5], 'LEADER PLANNED', true]", game: "Armed Assault", version: 1 },
    { id: 1585, name: "setDetailMapBlendPars", description: "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.", syntax: "setDetailMapBlendPars [fullDetail, noDetail]", returns: "fullDetail: Number - threshold distance in metres up to which the terrain will have full texture detail", example: "setDetailMapBlendPars [20, 50];", game: "Arma 3", version: 1.02 },
    { id: 1586, name: "setDir", description: "Sets object heading. Angles are measured in degrees clockwise from north. The accepted heading range is from 0 to 360 Negative angles represent a counter-clockwise angle and the angle can be of any size.", syntax: "object setDir heading", returns: "heading: Number", example: "_soldier1 setDir 45", game: "Operation Flashpoint", version: 1 },
    { id: 1587, name: "setDirection", description: "Set's the orientation of a location. It's area and map icon (if it's type uses an icon) will be rotated to this orientation.", syntax: "location setDirection direction", returns: "direction: Number", example: "location1 = createLocation ['VegetationPalm', getPos player, 200, 200];   location1 setText 'Benargee's Palm Tree';  location1 setDirection 45;", game: "Armed Assault", version: 1.08 },
    { id: 1588, name: "setDrawIcon", description: "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.", syntax: "map setDrawIcon [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]", returns: "[object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1589, name: "setDriveOnPath", description: "Sets the path to follow for AI driver", syntax: "vehicleName setDriveOnPath [points]", returns: "points: Array - List of points [x,y,z]", example: "null", game: "Arma 3", version: 1.68 },
    { id: 1590, name: "setDropInterval", description: "Set interval of emitting particles from particle source. In Arma 3 hardcoded limit of how many particles can exist at the same time is 18000. Correspondence between CfgCloudlets class param name and command param: particleSource setDropInterval interval;", syntax: "particleSource setDropInterval interval", returns: "interval: Number", example: "particleSource setDropInterval interval;", game: "Armed Assault", version: 1 },
    { id: 1591, name: "setDynamicSimulationDistance", description: "Sets activation distance of Arma_3_Dynamic_Simulation for given category", syntax: "category setDynamicSimulationDistance distance", returns: "distance: Number", example: "Group' setDynamicSimulationDistance 1000;", game: "Arma 3", version: 1.68 },
    { id: 1592, name: "setDynamicSimulationDistanceCoef", description: "Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class", syntax: "class setDynamicSimulationDistanceCoef multiplier", returns: "multiplier: Number - Distance multiplier", example: "IsMoving' setDynamicSimulationDistanceCoef 3;", game: "Arma 3", version: 1.68 },
    { id: 1593, name: "setEditorMode", description: "Sets map mode to MAP,3D or PREVIEW.", syntax: "map setEditorMode mode", returns: "mode: String -", example: "null", game: "Arma 2", version: 1 },
    { id: 1594, name: "setEditorObjectScope", description: "This command defines the level of access a user has to editor objects.  'objects' is an array of either Editor Objects (eg ['_unit_0']) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects.  'editorType' is the editor type to effect (eg 'unit', 'vehicle', 'center') or '' for all types.  'condition' is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. '_x' can be used in the string as reference to the ingame representation of the currently processed array member.  'scope' is one of 'HIDE', 'VIEW', 'SELECT', 'LINKTO', 'LINKFROM', 'ALLNODRAG', 'ALLNOTREE', 'ALLNOCOPY', 'ALLNOSELECT' or 'ALL'.  'subordinatesAlso' is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.", syntax: "map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]", returns: "[objects, editorType, condition, scope, subordinatesAlso]: Array -", example: "_map setEditorObjectScope [ [],'vehicle', 'side effectiveCommander _x != side player', 'HIDE', false]", game: "Arma 2", version: 1 },
    { id: 1595, name: "setEffectCondition", description: "The statement is executed when the trigger or waypoint is activated and the effects are launched depending on the result.  If the result is a boolean and true, the effect is launched. If the result is an object, the effect is launched if the result is the player or the player vehicle. If the result is an array, the effect is launched if the result contains the player or the player vehicle.", syntax: "trigger setEffectCondition statement", returns: "statement: String", example: "_triggerObj setEffectCondition 'thisList';", game: "Armed Assault", version: 1 },
    { id: 1596, name: "setFace", description: "Set person's face. For a list of available faces, check Category:CfgIdentities.", syntax: "person setFace face", returns: "face: String", example: "soldier1 setFace 'WhiteHead_02'", game: "Operation Flashpoint", version: 1 },
    { id: 1597, name: "setFaceAnimation", description: "Set facial animation phase (eye blinking), blink is in the range from 0 to 1.", syntax: "person setFaceAnimation blink", returns: "blink: Number", example: "_soldier1 setFaceAnimation 0.5;", game: "Operation Flashpoint", version: 1 },
    { id: 1598, name: "setFatigue", description: "Sets the person's fatigue, from 0 to 1.", syntax: "unit setFatigue value", returns: "value: Number", example: "player setFatigue 1;", game: "Arma 3", version: 0.5 },
    { id: 1599, name: "setFeatureType", description: "Enable/disable object as a feature/landmark. Possible feature types:  0 - Feature disabled  1 - Object is always visible within object view distance  2 - Object is always visible within terrain view distance The limit is 500 map/static objects and 200 dynamic objects including config features and auto features (flying helicopters, airplanes). When limit is reached, function returns false.", syntax: "object setFeatureType type", returns: "type: Number - the desired feature type", example: "building setFeatureType 2;", game: "Arma 3", version: 1.68 },
    { id: 1600, name: "setFlagAnimationPhase", description: "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use BIS_fnc_animateFlag", syntax: "flag setFlagAnimationPhase phase", returns: "phase: Number - 0...1", example: "_flag1 setFlagAnimationPhase 0.5;", game: "Arma 3", version: 1.68 },
    { id: 1601, name: "setFlagOwner", description: "Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole. A flag owned by a logic has no visual representation.", syntax: "flag setFlagOwner owner", returns: "owner: Object", example: "_flag1 setFlagOwner _soldier1;", game: "Operation Flashpoint", version: 1 },
    { id: 1602, name: "setFlagSide", description: "Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with setFlagTexture, if the command executed where unit is local effect of the command will be global and JIP compatible.", syntax: "flag setFlagSide side", returns: "side: Side", example: "_flag1 setFlagSide east;", game: "Operation Flashpoint", version: 1 },
    { id: 1603, name: "setFlagTexture", description: "Sets flag texture.  If texture is '', flag is not drawn.  Custom texture can be used, as long as it is in *.jpg format, and has dimensions of 200px*200px.  The page Flag Textures shows which textures are available in each game.    NOTE: In MP this command has to be executed where Flag Pole is local. If you add Flag Pole in the editor, it will be local to the server, so executing setFlagTexture on the server will change flag texture on all clients. The command is also persistent and is synchronised for JIP clients.", syntax: "flag setFlagTexture texture", returns: "texture: String", example: "_flagE setFlagTexture '\ca\misc\data\sever_vlajka.paa';", game: "Operation Flashpoint", version: 1 },
    { id: 1604, name: "setFog", description: "Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog.   NOTE: Since Arma 3 this command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.   A little information about how Alt Syntax works. The fogValue is normal fog value that could be set independently with original setFog command. fogBase is the ASL altitude at which the fog will start. 0 is the sea level. fogDecay is how defined the fog start is. The more defined, the denser is the fog. 1 (or -1) are the max values. If it is positive the fog will be generated below fogBase line, if negative, above it. If fogDecay is small, the fog will transition more smoothly from no fog to full fog, and because of that it will cross fogBase line by quite a lot, depending on how small is fogDecay value. Current values of fogDecay and fogBase can be retrieved with fogParams", syntax: "time setFog fog", returns: "fog: Number - new value in range 1...0", example: "15 setFog 0.5;", game: "Operation Flashpoint", version: 1 },
    { id: 1605, name: "setFormation", description: "Set group formation. Formation is one of:   'COLUMN'  'STAG COLUMN'  'WEDGE'  'ECH LEFT'  'ECH RIGHT'  'VEE'  'LINE'  'FILE' (ArmA)  'DIAMOND' (ArmA)", syntax: "group setFormation formation", returns: "formation: String", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1606, name: "setFormationTask", description: "Set the current task of the formation member.", syntax: "object setFormationTask task", returns: "task: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 1607, name: "setFormDir", description: "Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overriden by movement direction.", syntax: "group setFormDir heading", returns: "heading: Number", example: "_group1 setFormDir 180;", game: "Operation Flashpoint", version: 1 },
    { id: 1608, name: "setFriend", description: "Sets how friendly side1 is with side2. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly.  Intended to be used on mission start. Changing value during mission can cause unexpected errors in AI behavior. See also Side relations.", syntax: "side1 setFriend [side2 , value]", returns: "[side2 , value]: Array", example: "west setFriend [resistance, 0];", game: "Armed Assault", version: 1 },
    { id: 1609, name: "setFromEditor", description: "Set if given team member was inserted directly from editor.", syntax: "teamMember setFromEditor fromEditor", returns: "fromEditor: Boolean", example: "_teamMember setFromEditor true", game: "Arma 2", version: 1 },
    { id: 1610, name: "setFSMVariable", description: "Set variable to given value in the variable space of given FSM.  The FSM handle is the number returned by the execFSM command.", syntax: "handle setFSMVariable [name, value]", returns: "[name,value]: Array", example: "_handle = execFSM 'test.fsm'; _handle setFSMVariable ['_foo', 23];", game: "Arma 2", version: 1 },
    { id: 1611, name: "setFuel", description: "Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed.", syntax: "vehicle setFuel amount", returns: "amount: Number", example: "_jeepOne setFuel 0.5;", game: "Operation Flashpoint", version: 1 },
    { id: 1612, name: "setFuelCargo", description: "Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1) Note, the carrying capacity of each side's refuel trucks differ.", syntax: "vehicle setFuelCargo amount", returns: "amount : Number", example: "_refuelTruckOne setFuelCargo 0;", game: "Operation Flashpoint", version: 1 },
    { id: 1613, name: "setGroupIcon", description: "Set group icons properties.", syntax: "group setGroupIcon [id, icon, offset]", returns: "id: Number - The icon ID returned by addGroupIcon", example: "null", game: "Arma 2", version: 1 },
    { id: 1614, name: "setGroupIconParams", description: "Set group icons parameters. [color,string,float,bool]", syntax: "group setGroupIconParams properties", returns: "properties: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1615, name: "setGroupIconsSelectable", description: "Sets if group icons raises onclick and onover events.", syntax: "setGroupIconsSelectable bool", returns: "Object -  always objNull", example: "setGroupIconsSelectable true;", game: "Arma 2", version: 1 },
    { id: 1616, name: "setGroupIconsVisible", description: "Sets if group icons are visible.", syntax: "setGroupIconsVisible array", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 1617, name: "setGroupId", description: "Sets a group's identity, how it will be displayed in chat, for example. While groups on the different sides can have identical ids, the groups on the same side cannot. When given id exists already, the group which currently has it will simply swap it with the current id of the group for which this id is intended. For example: group1 = createGroup west;  group2 = createGroup west;  group1 setGroupId ['Active Group']; group2 setGroupId ['Inactive Group'];  systemChat groupId group1; //'Active Group'; systemChat groupId group2; //'Inactive Group';  group2 setGroupId ['Active Group'];  systemChat groupId group1; //'Inactive Group'; systemChat groupId group2; //'Active Group';  The identity setup could also consist of format keywords (marked with %) and param keywords taken from CfgWorlds config. Basically it is like format command but with some special group keywords. For Arma 3 possible values are:    %GroupSquad  'Squad1' -> 1  'Squad2' -> 2  'Squad3' -> 3  'Squad4' -> 4 %GroupPlatoon  'Platoon1' -> 1  'Platoon2' -> 2  'Platoon3' -> 3  'Platoon4' -> 4 %GroupCompany  'CompanyAlpha' -> Alpha  'CompanyBravo' -> Bravo  'CompanyCharlie' -> Charlie  'CompanyDelta' -> Delta  'CompanyEcho' -> Echo  'CompanyFoxtrot' -> Foxtrot  'CompanyGolf' -> Golf  'CompanyHotel' -> Hotel  'CompanyIndia' -> India  'CompanyKilo' -> Kilo  'CompanyLima' -> Lima  'CompanyMike' -> Mike  'CompanyNovember' -> November  'CompanyOscar' -> Oscar  'CompanyPapa' -> Papa  'CompanyQuebec' -> Quebec  'CompanyRomeo' -> Romeo  'CompanySierra' -> Sierra  'CompanyTango' -> Tango  'CompanyUniform' -> Uniform  'CompanyVictor' -> Victor  'CompanyWhiskey' -> Whiskey  'CompanyXray' -> X-Ray  'CompanyYankee' -> Yankee  'CompanyZulu' -> Zulu %GroupNames  'Alpha' -> Alpha  'Bravo' -> Bravo  'Charlie' -> Charlie  'Delta' -> Delta  'Echo' -> Echo  'Foxtrot' -> Foxtrot  'Golf' -> Golf  'Hotel' -> Hotel  'November' -> November  'Kilo' -> Kilo  'Yankee' -> Yankee  'Zulu' -> Zulu  'Two' -> Two  'Three' -> Three  'Buffalo' -> Buffalo  'Guardian' -> Guardian  'Convoy' -> Convoy  'Fox' -> Fox %GroupColors  'GroupColor1' -> Black  'GroupColor2' -> Red  'GroupColor3' -> Green  'GroupColor4' -> Blue  'GroupColor5' -> Yellow  'GroupColor6' -> Orange  'GroupColor7' -> Pink  'GroupColor0' ->  'Six' -> Six  For global variant of this command use setGroupIdGlobal.", syntax: "group setGroupId [nameFormat, nameParam1, ..., nameParamN]", returns: "[nameFormat, nameParam1, ..., nameParamN]: Array", example: "group1 = createGroup west;  group2 = createGroup west;  group1 setGroupId ['Active Group']; group2 setGroupId ['Inactive Group'];  systemChat groupId group1; //'Active Group'; systemChat groupId group2; //'Inactive Group';  group2 setGroupId ['Active Group'];  systemChat groupId group1; //'Inactive Group'; systemChat groupId group2; //'Active Group';", game: "Operation Flashpoint", version: 1 },
    { id: 1618, name: "setGroupIdGlobal", description: "A global equivalent of  setGroupId", syntax: "group setGroupIdGlobal [nameFormat, nameParam1, ..., nameParamN]", returns: "[nameFormat, nameParam1, ..., nameParamN]: Array", example: "null", game: "Arma 3", version: 1.48 },
    { id: 1619, name: "setGroupOwner", description: "Changes the ownership of a group (and all its units) to a given client. Group leader can't be a player. Only works when called from a server. Returns true if locality was changed. For agents use setOwner command.", syntax: "group setGroupOwner clientID", returns: "clientID: Number - clientID of the new owner", example: "_localityChanged = _someGroup setGroupOwner (owner _playerObject);", game: "Arma 3", version: 1.4 },
    { id: 1620, name: "setGusts", description: "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.", syntax: "time setGusts value", returns: "value: Number", example: "60 setGusts 0.75;", game: "Arma 3", version: 0.5 },
    { id: 1621, name: "setHideBehind", description: "Sets the data for hiding. objectWhereHide can be taken using findCover. hidePosition can be taken using getHideFrom. Command is not functional in ArmA 2.          This command is not implemented", syntax: "object setHideBehind [objectWhereHide, hidePosition]", returns: "[objectWhereHide, hidePosition]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 1622, name: "setHit", description: "Damage / repair part of object. The object must be local to the computer where command is executed.  Damage 0 means fully functional, damage 1 means completely destroyed / dead. Note: Some part names are in Czech; see translation table.", syntax: "object setHit [part, damage, useEffects]", returns: "object: Object -", example: "vehicle player setHit ['motor', 1]", game: "Arma 2", version: 1 },
    { id: 1623, name: "setHitIndex", description: "Set the current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.  0: no damage  1: full damage", syntax: "vehicle setHitIndex [hitPartIndex, damage, useEffects]", returns: "[hitPartIndex, damage]: - Array", example: "vehicle player setHitIndex [1, 1];", game: "Arma 3", version: 1.5 },
    { id: 1624, name: "setHitPointDamage", description: "Set the current level of damage for a specific Hit Point (specified by its config class).  0: no damage  1: full damage See also BIS_fnc_setHitPointDamage for setting hit with dependency", syntax: "vehicle setHitPointDamage [hitPointName, damage, useEffects]", returns: "[hitPointName, damage]: Array", example: "vehicle player setHitPointDamage ['hitEngine2', 1.0];", game: "Take On Helicopters", version: 1 },
    { id: 1625, name: "setHorizonParallaxCoef", description: "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).", syntax: "setHorizonParallaxCoef coef", returns: "Nothing", example: "setHorizonParallaxCoef 1;", game: "Arma 3", version: 0.5 },
    { id: 1626, name: "setHUDMovementLevels", description: "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.", syntax: "setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]", returns: "minSpeed: Number - Units: m/s", example: "setHUDMovementLevels [20,30,-1,-1,0.23,2.1,[0,0,0]]", game: "Arma 3", version: 0.5 },
    { id: 1627, name: "setIdentity", description: "Set identity of person. Identities are defined in Description.ext of the mission or campaign. For a list of available faces, glasses and speakers check Category:CfgIdentities.", syntax: "person setIdentity identity", returns: "identity: String", example: "_soldier1 setIdentity 'MyLittleSoldier';", game: "Operation Flashpoint", version: 1 },
    { id: 1628, name: "setImportance", description: "Sets the importance value of location.", syntax: "location setImportance value", returns: "value: Number", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1629, name: "setLeader", description: "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.", syntax: "team setLeader leader", returns: "leader: Team Member", example: "null", game: "Arma 2", version: 1 },
    { id: 1630, name: "setLightAmbient", description: "Set ambient color of light. This includes surfaces that face away from the light, unlike setLightColor.", syntax: "light setLightAmbient [r, g, b]", returns: "[r, g, b]: Array", example: "myLight setLightAmbient [0.5,0,0]; //produces red light around the origin source", game: "Armed Assault", version: 1 },
    { id: 1631, name: "setLightAttenuation", description: "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).", syntax: "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]", returns: "[start, constant, linear, quadratic, hardlimitstart, hardlimitend]: Array", example: "myLight setLightAttenuation [2,4,4,0,9,10];", game: "Arma 3", version: 0.5 },
    { id: 1632, name: "setLightBrightness", description: "Set brightness of light.", syntax: "light setLightBrightness brightness", returns: "brightness: Number", example: "myLight setLightBrightness 2;", game: "Armed Assault", version: 1 },
    { id: 1633, name: "setLightColor", description: "Set diffuse color of light. Illuminates surfaces that are facing the light.", syntax: "light setLightColor [r, g, b]", returns: "[r, g, b]: Array", example: "myLight setLightColor [0.5,0,0]; //produces red", game: "Armed Assault", version: 1 },
    { id: 1634, name: "setLightDayLight", description: "Sets if light can be used during the day.", syntax: "light setLightDayLight bool", returns: "bool: Boolean", example: "myLight setLightDayLight true;", game: "Arma 3", version: 0.5 },
    { id: 1635, name: "setLightFlareMaxDistance", description: "Sets max distance where the flare is visible.", syntax: "light setLightFlareMaxDistance distance", returns: "distance: Number", example: "myLight setLightFlareMaxDistance 500;", game: "Arma 3", version: 0.5 },
    { id: 1636, name: "setLightFlareSize", description: "Sets relative size of the flare for the light.", syntax: "light setLightFlareSize size", returns: "size: Number", example: "myLight setLightFlareSize 5;", game: "Arma 3", version: 0.5 },
    { id: 1637, name: "setLightIntensity", description: "Sets intensity of light.", syntax: "light setLightIntensity value", returns: "value: Number", example: "myLight setLightIntensity 4;", game: "Arma 3", version: 0.5 },
    { id: 1638, name: "setLightnings", description: "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.   NOTE: This command will have no effect (even though the value of lightnings changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.", syntax: "time setLightnings value", returns: "value: Number", example: "1800 setLightnings 0.7;", game: "Arma 3", version: 0.5 },
    { id: 1639, name: "setLightUseFlare", description: "Sets if light has flare.", syntax: "light setLightUseFlare bool", returns: "bool: Boolean", example: "myLight setLightUseFlare true;", game: "Arma 3", version: 0.5 },
    { id: 1640, name: "setLocalWindParams", description: "Sets parameters for helicopter rotor wash. Visually it affects how much the grass and bushes bend under a helicopter and how big is the area of the effect. Default [1.0, 1.0].", syntax: "setLocalWindParams [strength, diameter]", returns: "strength: Number - down-force wind strength", example: "setLocalWindParams [10, 5];", game: "Arma 3", version: 0.5 },
    { id: 1641, name: "setMagazineTurretAmmo", description: "Sets ammo count to given amount for given turret.          Broken when vehicle has multiple magazines of the same type", syntax: "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]", returns: "[magazineClass, ammoCount, turretPath]: Array", example: "null", game: "Arma 3", version: 1.34 },
    { id: 1642, name: "setMarkerAlpha", description: "Sets the marker alpha. The marker is modified on all computers in a network session.   When alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.   Alpha can be numbers and fractions.", syntax: "marker setMarkerAlpha alpha", returns: "alpha: Number -", example: "my_marker' setMarkerAlpha 0.5;", game: "Arma 2", version: 1 },
    { id: 1643, name: "setMarkerAlphaLocal", description: "Sets the marker alpha. The marker is only modified on the computer where the command is called.   When alpha equals 1, the marker is visible, but if alpha equals 0, then the marker is invisible.   Alpha can be numbers and fractions.", syntax: "marker setMarkerAlphaLocal alpha", returns: "alpha: Number -", example: "my_marker' setMarkerAlphaLocal 0.5;", game: "Arma 2", version: 1 },
    { id: 1644, name: "setMarkerBrush", description: "Selects the fill texture for the marker ('RECTANGLE' or 'ELLIPSE'). Brush is the name of the subclass in CfgMarkerBrushes.     brush can be:  'Solid'  'SolidFull' (A3 only)  'Horizontal'  'Vertical'  'Grid'  'FDiagonal'  'BDiagonal'  'DiagGrid'  'Cross'  'Border'  'SolidBorder'", syntax: "markerName setMarkerBrush brush", returns: "brush: String", example: "Marker1' setMarkerBrush 'DIAGGRID';", game: "Armed Assault", version: 1 },
    { id: 1645, name: "setMarkerBrushLocal", description: "Selects the fill texture for the marker ('RECTANGLE' or 'ELLIPSE'). Brush is the name of the subclass in CfgMarkerBrushes.     brush can be:  'Solid'  'SolidFull' (A3 only)  'Horizontal'  'Vertical'  'Grid'  'FDiagonal'  'BDiagonal'  'DiagGrid'  'Cross'  'Border' (A2/A3 only)  'SolidBorder' (OA/A3 only)", syntax: "markerName setMarkerBrushLocal brush", returns: "brush: String", example: "Marker1' setMarkerBrushLocal 'DiagGrid';", game: "Armed Assault", version: 1.04 },
    { id: 1646, name: "setMarkerColor", description: "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3", syntax: "markerName setMarkerColor color", returns: "color: String", example: "MarkerOne' setMarkerColor 'ColorBlack';", game: "Operation Flashpoint", version: 1.21 },
    { id: 1647, name: "setMarkerColorLocal", description: "Sets marker color for the given marker locally. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3", syntax: "markerName setMarkerColorLocal color", returns: "color: String", example: "MarkerOne' setMarkerColorLocal 'ColorBlack';", game: "Armed Assault", version: 1.04 },
    { id: 1648, name: "setMarkerDir", description: "Sets the orientation of the marker. Angle is in degrees.", syntax: "markerName setMarkerDir angle", returns: "angle: Number", example: "Marker1' setMarkerDir 90;", game: "Armed Assault", version: 1 },
    { id: 1649, name: "setMarkerDirLocal", description: "Sets the orientation of the marker. Angle is in degrees.", syntax: "markerName setMarkerDirLocal angle", returns: "angle: Number", example: "Marker1' setMarkerDirLocal 90;", game: "Armed Assault", version: 1.04 },
    { id: 1650, name: "setMarkerPos", description: "Moves the marker. Pos format is Position2D.", syntax: "markerName setMarkerPos pos", returns: "pos: Array - format Position2D", example: "MarkerOne' setMarkerPos getMarkerPos 'MarkerTwo'", game: "Operation Flashpoint", version: 1 },
    { id: 1651, name: "setMarkerPosLocal", description: "Moves the marker. Pos format is Position2D.", syntax: "markerName setMarkerPosLocal pos", returns: "pos: Array - format Position2D", example: "MarkerOne' setMarkerPosLocal getMarkerPos 'MarkerTwo';", game: "Armed Assault", version: 1.04 },
    { id: 1652, name: "setMarkerShape", description: "Selects the shape (type) of the marker.  Shape can be 'ICON', 'RECTANGLE', 'ELLIPSE' or 'POLYLINE'.", syntax: "markerName setMarkerShape shape", returns: "shape: String", example: "Marker1' setMarkerShape 'RECTANGLE';", game: "Armed Assault", version: 1 },
    { id: 1653, name: "setMarkerShapeLocal", description: "Selects the shape (type) of the marker.  Shape can be 'ICON', 'RECTANGLE' or 'ELLIPSE'.", syntax: "markerName setMarkerShapeLocal shape", returns: "shape: String", example: "Marker1' setMarkerShapeLocal 'RECTANGLE';", game: "Armed Assault", version: 1.04 },
    { id: 1654, name: "setMarkerSize", description: "Set marker size. Size is in format [a-axis, b-axis].", syntax: "markerName setMarkerSize [a-axis, b-axis]", returns: "[a-axis, b-axis]: Array", example: "MarkerOne' setMarkerSize [100, 200];", game: "Operation Flashpoint", version: 1.21 },
    { id: 1655, name: "setMarkerSizeLocal", description: "Set marker size. Size is in format [a-axis, b-axis].", syntax: "markerName setMarkerSizeLocal [a-axis, b-axis]", returns: "[a-axis, b-axis]: Array", example: "MarkerOne' setMarkerSizeLocal [100, 200];", game: "Armed Assault", version: 1.04 },
    { id: 1656, name: "setMarkerText", description: "Sets the text label of an existing marker.", syntax: "markerName setMarkerText text", returns: "text: String", example: "Marker1' setMarkerText 'You are here.';", game: "Armed Assault", version: 1 },
    { id: 1657, name: "setMarkerTextLocal", description: "Sets the text label of an existing marker.", syntax: "markerName setMarkerTextLocal text", returns: "text: String", example: "Marker1' setMarkerTextLocal 'You are here.';", game: "Armed Assault", version: 1.04 },
    { id: 1658, name: "setMarkerType", description: "Set marker type. See cfgMarkers for a list of standard markers.", syntax: "markerName setMarkerType type", returns: "type: String - See cfgMarkers", example: "MarkerOne' setMarkerType 'Warning';", game: "Operation Flashpoint", version: 1 },
    { id: 1659, name: "setMarkerTypeLocal", description: "Set marker type. See cfgMarkers for a list of standard markers.", syntax: "markerName setMarkerTypeLocal type", returns: "type: String. See cfgMarkers.", example: "MarkerOne' setMarkerTypeLocal 'Warning';", game: "Armed Assault", version: 1.04 },
    { id: 1660, name: "setMass", description: "Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", syntax: "myObject setMass [mass, time]", returns: "[mass, time]: Array", example: "myObject setMass [10,0.5];", game: "Arma 3", version: 1.02 },
    { id: 1661, name: "setMimic", description: "Set person's facial expression. Following mimic values are recognized:   'Default'  'Normal'  'Smile'  'Hurt'  'Ironic'  'Sad'  'Cynic'  'Surprised'  'Agresive'  'Angry'  Since Arma 2 OA 1.6*, these values are used :  'neutral'  'dead'  'danger'  'hurt'  'aware'  'safe'  'combat'", syntax: "person setMimic mimic", returns: "mimic: String. as above", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1662, name: "setMousePosition", description: "Moves mouse pointer to specified position on the screen. x and y could be any number, but will be clipped so mouse never leaves the screen area.", syntax: "setMousePosition [x, y]", returns: "x: Number - x in screen coordinates", example: "setMousePosition [0.5, 0.5];", game: "Armed Assault", version: 1 },
    { id: 1663, name: "setMusicEffect", description: "Defines the music track played on activation.  Track is a subclass name of CfgMusic. In addition, '$STOP$' (stops the current music track).", syntax: "trigger setMusicEffect track", returns: "track: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 1664, name: "setMusicEventHandler", description: "Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them.", syntax: "setMusicEventHandler [type, function]", returns: "type: String - 'MusicStart' or 'MusicStop'", example: "_ehID = setMusicEventHandler ['MusicStart', 'hint str _this'];", game: "Arma 3", version: 1.02 },
    { id: 1665, name: "setName", description: "Sets the name of a location or a person. In Arma 3 this can be used to set name of a person but only in single player.", syntax: "object setName name", returns: "name: String", example: "myLocation setName 'My Location Name';", game: "Armed Assault", version: 1.08 },
    { id: 1666, name: "setNameSound", description: "Sets the nameSound of a person.", syntax: "person setNameSound name", returns: "name: String", example: "unit1 setNameSound 'dixon';", game: "Arma 3", version: 1.02 },
    { id: 1667, name: "setObjectArguments", description: "Set object arguments in mission editor.", syntax: "map setObjectArguments [object,[name1,value1,...]]", returns: "[object,[name1,value1,...]]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1668, name: "setObjectMaterial", description: "Sets material of object selection. The selection number is defined through the  hiddenselection[]={} array in the vehicle's config (starting with 0).", syntax: "obj setObjectMaterial [selectionNumber, material]", returns: "[selectionNumber, material]: Array", example: "car setObjectMaterial [0,'A3\Structures_F\Data\Windows\window_set.rvmat']; car setObjectMaterial [1,'A3\Structures_F\Data\Windows\window_set.rvmat'];", game: "Arma 3", version: 0.5 },
    { id: 1669, name: "setObjectMaterialGlobal", description: "Set the material of the given selection on all computers in a network session.", syntax: "obj setObjectMaterialGlobal [selection, material]", returns: "[selection,material]: Array", example: "player setObjectMaterialGlobal [0, 'A3\Structures_F\Data\Windows\window_set.rvmat'];", game: "Arma 3", version: 1.54 },
    { id: 1670, name: "setObjectProxy", description: "Set the proxy object associated with the given editor object.", syntax: "map setObjectProxy [object,proxy object]", returns: "[object,proxy object]: Array -", example: "_map setObjectProxy ['_group_0', vehicle (leader _group)];", game: "Arma 2", version: 1 },
    { id: 1671, name: "setObjectTexture", description: "Textures object selection with texture named in array.   Array has the form [selectionNumber, 'Texture'].   The selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).   NOTES:   Not all objects could be textured this way. To find out, run getObjectTextures command on an object. Empty array [] usually indicates it cannot be textured.  All textures must have resolution 2^x / 2^y (e.g. 16 / 16, 16 / 32, 64 / 256, 512 / 512, etc). The largest texture size commonly supported by graphics cards and RV engine is 4096x4096", syntax: "object setObjectTexture [selectionNumber,texture]", returns: "[selectionNumber,texture]: Array", example: "_objectname setObjectTexture [0, '\pboname\texture.paa']; _objectname setObjectTexture [1, '\pboname\texture2.paa'];", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1672, name: "setObjectTextureGlobal", description: "Set the texture of the given selection on all computers in a network session.   NOTES:   Do not put global commands such this one into init field in editor and expect it to work in Multiplayer. See Talk:setObjectTextureGlobal for the explanation.  Not all objects could be textured this way. To find out, run getObjectTextures command on an object. Empty array [] usually indicates it cannot be textured.  All textures must have resolution 2^x / 2^y (e.g. 16 / 16, 16 / 32, 64 / 256, 512 / 512, etc). The largest texture size commonly supported by graphics cards and RV engine is 4096x4096", syntax: "obj setObjectTextureGlobal [selection, texture]", returns: "[selection,texture]: Array", example: "player setObjectTextureGlobal [0, '\MyAddon\blue.paa'];", game: "Arma 3", version: 1.06 },
    { id: 1673, name: "setObjectViewDistance", description: "Sets the rendering distance of objects (and shadows).", syntax: "setObjectViewDistance distance", returns: "Nothing", example: "setObjectViewDistance 2000;", game: "Arma 3", version: 0.5 },
    { id: 1674, name: "setOvercast", description: "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds.", syntax: "time setOvercast overcast", returns: "overcast: Number - Range 0 to 1", example: "86400 setOvercast 1; skipTime 24;  //to remain on the same date: skipTime -24; 86400 setOvercast 1; skipTime 24;", game: "Operation Flashpoint", version: 1 },
    { id: 1675, name: "setOwner", description: "From server machine, change the ownership of an object to a given client. Returns true if locality was changed.  Since Arma 3 v1.40, this command should not be used to transfer ownership of units with AI (agents are an exception to this rule).  Using command in an unintended way will display an on-screen warning and log a message to .rpt file.  To transfer ownership of all AI units in a group properly, use setGroupOwner instead.", syntax: "object setOwner clientID", returns: "clientID: Number - clientID of the new owner", example: "_someObject setOwner 12;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1676, name: "setOxygenRemaining", description: "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.", syntax: "unit setOxygenRemaining value", returns: "value: Number", example: "player setOxygenRemaining 0; // Drowns player", game: "Arma 3", version: 0.5 },
    { id: 1677, name: "setParticleCircle", description: "Updates particle source, creates particles in circle with given radius. Velocity is transformed and added to total velocity. Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleCircle [ 	circleRadius, 	circleVelocity ];", syntax: "particleSource setParticleCircle [radius, velocity]", returns: "[radius, velocity]: Array", example: "particleSource setParticleCircle [ 	circleRadius, 	circleVelocity ];", game: "Armed Assault", version: 1 },
    { id: 1678, name: "setParticleClass", description: "Set parameters from existing config class. ClassName is name of the class from CfgCloudlets.   Since version 1.11.114706 you can use setParticleParams to overwrite many values set by config class, particularity those defined in ParticleArray.", syntax: "source setParticleClass className", returns: "className: String", example: "_source01 = '#particlesource' createVehicleLocal _pos01; _source01 setParticleClass 'ObjectDestructionFire1Smallx'; _source01 attachTo [_object,[0,0,0]];", game: "Arma 3", version: 0.5 },
    { id: 1679, name: "setParticleFire", description: "Set fire parameters to particle effect.  Note: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleFire [ 	coreIntensity, 	coreDistance, 	damageTime ];", syntax: "source setParticleFire [coreIntensity, coreDistance, damageTime]", returns: "[coreIntensity, coreDistance, damageTime]: Array", example: "particleSource setParticleFire [ 	coreIntensity, 	coreDistance, 	damageTime ];", game: "Arma 3", version: 1.08 },
    { id: 1680, name: "setParticleParams", description: "Set parameters to particle source. Array is in format ParticleArray.   Since Arma 3 version 1.11.114706 you can use this command to overwrite many values set by setParticleClass, particularity those defined in ParticleArray. Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleParams [ 	[ 		particleShape, 		particleFSNtieth, 		particleFSIndex, 		particleFSFrameCount, 		particleFSLoop 	], 	animationName, 	particleType, 	timerPeriod, 	lifeTime, 	position, 	moveVelocity, 	rotationVelocity, 	weight, 	volume, 	rubbing, 	size, 	color, 	animationSpeed, 	randomDirectionPeriod, 	randomDirectionIntensity, 	onTimerScript, 	beforeDestroyScript, 	this, 	angle, 	onSurface, 	bounceOnSurface, 	emissiveColor ];", syntax: "particleSource setParticleParams array", returns: "array: Array - format ParticleArray", example: "particleSource setParticleParams [ 	[ 		particleShape, 		particleFSNtieth, 		particleFSIndex, 		particleFSFrameCount, 		particleFSLoop 	], 	animationName, 	particleType, 	timerPeriod, 	lifeTime, 	position, 	moveVelocity, 	rotationVelocity, 	weight, 	volume, 	rubbing, 	size, 	color, 	animationSpeed, 	randomDirectionPeriod, 	randomDirectionIntensity, 	onTimerScript, 	beforeDestroyScript, 	this, 	angle, 	onSurface, 	bounceOnSurface, 	emissiveColor ];", game: "Armed Assault", version: 1 },
    { id: 1681, name: "setParticleRandom", description: "Sets randomization of particle source parameters. Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleRandom [ 	lifeTimeVar, 	positionVar, 	moveVelocityVar, 	rotationVelocityVar, 	sizeVar, 	colorVar, 	randomDirectionPeriodVar, 	randomDirectionIntensityVar, 	angleVar, 	bounceOnSurfaceVar ];", syntax: "particleSource setParticleRandom [lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]", returns: "[lifeTime, position, moveVelocity, rotationVelocity, size, color, randomDirectionPeriod, randomDirectionIntensity, {angle}, bounceOnSurface]: Array", example: "particleSource setParticleRandom [ 	lifeTimeVar, 	positionVar, 	moveVelocityVar, 	rotationVelocityVar, 	sizeVar, 	colorVar, 	randomDirectionPeriodVar, 	randomDirectionIntensityVar, 	angleVar, 	bounceOnSurfaceVar ];", game: "Armed Assault", version: 1 },
    { id: 1682, name: "setPilotCameraDirection", description: "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).", syntax: "object setPilotCameraDirection Vector3D", returns: "Vector3D: Array - [x,y,z] - format Vector3D relative to the model centre (In a similar fashion to PositionRelative)", example: "vehicle player setPilotCameraDirection [0,1,0] //re-centers the camera", game: "Arma 3", version: 1.64 },
    { id: 1683, name: "setPilotCameraRotation", description: "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", syntax: "object setPilotCameraRotation rotation", returns: "rotation: Array - [x,y] - format [yaw (turn), pitch (elevation)]. Values are in radians, positive values are left yaw and down pitch from the center.", example: "vehicle player setPilotCameraRotation [ rad 90, rad 45 ]", game: "Arma 3", version: 1.64 },
    { id: 1684, name: "setPilotCameraTarget", description: "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera.  To track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type. Using objNull will unlock the camera", syntax: "bool = object setPilotCameraTarget target", returns: "target: Object or Array - format PositionASL", example: "_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];", game: "Arma 3", version: 1.64 },
    { id: 1685, name: "setPilotLight", description: "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions 'LightOn'/'LightOff'", syntax: "vehicle setPilotLight set", returns: "set: Boolean", example: "car setPilotLight true;", game: "Arma 3", version: 1.32 },
    { id: 1686, name: "setPiPEffect", description: "Sets Render Target's visual effect (Picture-in-Picture).   0: Normal - [0]  1: Night Vision - [1]  2: Thermal - [2]  3: Color Correction - [3, enabled, brightness, contrast, offset, blend [r,g,b,a], lerp [r,g,b,a], rgb [r,g,b,a]]  4: Mirror - [4] <currently not working>  5: Chromatic Aberration - [5, enabled, powerx, powery, (bool) aspectCorrection] <currently not working>  6: Film Grain - [6, enabled, intensity, sharpness, grainsize, intensityx1, intensityx2, (bool) monochromatic] <currently not working>  7: Thermal Inverted [7]", syntax: "name setPiPEffect [effect, optionalParam1, ..., optionalParamN]", returns: "[effect, optionalParam1, ..., optionalParamN] : Array", example: "rendersurface' setPiPEffect [0];", game: "Take On Helicopters", version: 1 },
    { id: 1687, name: "setPitch", description: "Sets the pitch of a persons voice.", syntax: "person setPitch pitch", returns: "pitch: Number", example: "unit1 setPitch 1", game: "Arma 3", version: 1.02 },
    { id: 1688, name: "setPlayable", description: "Create MP role for the unit. The roles created this way are used for Join In Progress and Team Switch.   NOTE: Currently in Arma 3 this command does nothing.          Doesn't work as intended", syntax: "setPlayable unitName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 1689, name: "setPlayerRespawnTime", description: "Set the time interval to wait on player respawn. It is set to mission default on mission start again.", syntax: "setPlayerRespawnTime interval", returns: "Nothing", example: "setPlayerRespawnTime 5;", game: "Arma 2: Operation Arrowhead", version: 1.57 },
    { id: 1690, name: "setPos", description: "Sets object position.", syntax: "object setPos pos", returns: "pos: Array - [x,y,z] format Position", example: "player setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10];  //the same as above using modelToWorld: player setPos (player modelToWorld [0,0,10]);  //the same as above using vectorAdd: player setPos (getPos player vectorAdd [0,0,10]);", game: "Operation Flashpoint", version: 1 },
    { id: 1691, name: "setPosASL", description: "Sets the object position above sea level. The pos array uses the PositionASL format.", syntax: "object setPosASL pos", returns: "pos: Array - format PositionASL", example: "player setPosASL [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2];", game: "Armed Assault", version: 1 },
    { id: 1692, name: "setPosASL2", description: "Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center.           Appears to be broken", syntax: "obj setPosASL2 pos", returns: "pos: Array", example: "player setPosASL2 [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2]", game: "Arma 2", version: 1 },
    { id: 1693, name: "setPosASLW", description: "Sets the object position above sea surface. The pos array uses the PositionASLW format.", syntax: "obj setPosASLW pos", returns: "pos: Array - format PositionASLW", example: "_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];", game: "Arma 3", version: 0.5 },
    { id: 1694, name: "setPosATL", description: "Sets the position of an object relative to the terrain.", syntax: "object setPosATL pos", returns: "pos: Array - format PositionATL", example: "player setPosATL [getPosATL player select 0, (getPosATL player select 1) - 10, getPosATL player select 2];", game: "Arma 2", version: 1.03 },
    { id: 1695, name: "setPosition", description: "Sets the position of a location.", syntax: "location setPosition pos", returns: "pos: Array - format Position", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1696, name: "setPosWorld", description: "Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0].", syntax: "object setPosWorld position", returns: "position: PositionWorld", example: "_obj setPosWorld getPosWorld _obj;", game: "Arma 3", version: 1.32 },
    { id: 1697, name: "setPylonLoadOut", description: "Will add missile to vehicle pylon, TransportPylonsComponent in config is required", syntax: "vehicle setPylonLoadOut [pylon name/index, magazine name, forced, turret];", returns: "[pylon name/index, magazine name, forced = false, turret = [] (empty for pilot)] : Array", example: "(vehicle player) setPylonLoadOut ['pylon1', ''];", game: "Arma 3", version: 1.7 },
    { id: 1698, name: "setPylonsPriority", description: "Overrides default pylons priorities", syntax: "vehicle setPylonsPriority [priority pylon1, priority pylon2, ...]", returns: "[priority pylon 1, priority pylon 2,..., priority pylon n] : Array", example: "(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];", game: "Arma 3", version: 1.7 },
    { id: 1699, name: "setRadioMsg", description: "Sets radio trigger menu title text (0 -> 0 -> map radio). Use 'NULL' to disable radio slot. Use '' to restore default title", syntax: "index setRadioMsg text", returns: "text: String", example: "1 setRadioMsg 'Click meeeeeeeeee'; //changes title of radio Alpha", game: "Operation Flashpoint", version: 1 },
    { id: 1700, name: "setRain", description: "Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change. A rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7.    NOTE: Since Arma 3 this command is MP synchronised, if executed on server, the changes will propagate globally. If executed on client effect is temporary as it will soon change to the server setting.", syntax: "time setRain rain", returns: "rain: Number - new rain value in range 0...1", example: "60 setRain 1;", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1701, name: "setRainbow", description: "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", syntax: "time setRainbow value", returns: "value: Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1702, name: "setRandomLip", description: "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking.", syntax: "unit setRandomLip bool", returns: "bool: Boolean", example: "player setRandomLip true;", game: "Arma 3", version: 0.5 },
    { id: 1703, name: "setRank", description: "Sets rank of given unit.  Possible values: PRIVATE, CORPORAL, SERGEANT, LIEUTENANT, CAPTAIN, MAJOR or COLONEL.            Since Arma 3 v1.67 this command is", syntax: "unitName setRank rank", returns: "rank: String", example: "player setRank 'COLONEL'", game: "Armed Assault", version: 1 },
    { id: 1704, name: "setRectangular", description: "Set the shape of a location to be either rectangular or elliptical. Locations default shape is elliptical.", syntax: "location setRectangular set", returns: "set: Boolean - true set rectangular, false set elliptical", example: "myLocation setRectangular true;", game: "Armed Assault", version: 1.08 },
    { id: 1705, name: "setRepairCargo", description: "Set amount of repair resources in cargo space of repair vehicle. Amount 1 is full cargo.", syntax: "vehicleName setRepairCargo amount", returns: "amount: Number range 0 to 1", example: "_repairTruck1 setRepairCargo 0", game: "Operation Flashpoint", version: 1 },
    { id: 1706, name: "setShadowDistance", description: "Sets the shadows rendering distance.", syntax: "setShadowDistance value", returns: "Nothing", example: "setShadowDistance 1000", game: "Arma 3", version: 0.5 },
    { id: 1707, name: "setShotParents", description: "Sets vehicle and instigator pair for the given projectile.", syntax: "projectile setShotParents [vehicle, instigator]", returns: "[vehicle, instigator]: Array", example: "myProjectile setShotParents [vehicle bob, bob];", game: "Arma 3", version: 1.66 },
    { id: 1708, name: "setSide", description: "Sets a location's side. The default side is Unknown.", syntax: "location setSide side", returns: "side: Side", example: "myLocation setSide resistance", game: "Armed Assault", version: 1.08 },
    { id: 1709, name: "setSimpleTaskAlwaysVisible", description: "Makes the given task allways visible or not.", syntax: "taskID setSimpleTaskAlwaysVisible state", returns: "state: Bool", example: "null", game: "Arma 3", version: 1.58 },
    { id: 1710, name: "setSimpleTaskCustomData", description: "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.", syntax: "task setSimpleTaskCustomData [IconPath, tooltip, description]", returns: "iconPath: String - icon path", example: "null", game: "Arma 3", version: 1.58 },
    { id: 1711, name: "setSimpleTaskDescription", description: "Attach descriptions to the simple task.", syntax: "task setSimpleTaskDescription [description, descriptionShort, descriptionHUD]", returns: "[description, descriptionShort, descriptionHUD]: Array", example: "mytask setSimpleTaskDescription ['Today you have to kill Spongebob','Kill Spongebob','Here he is!'];", game: "Arma 2", version: 1 },
    { id: 1712, name: "setSimpleTaskDestination", description: "Attach a destination to the simple task.", syntax: "task setSimpleTaskDestination pos", returns: "pos: Array - format Position", example: "_tskGoHere setSimpleTaskDestination (getMarkerPos 'obj1');", game: "Arma 2", version: 1 },
    { id: 1713, name: "setSimpleTaskTarget", description: "Attach a target to the simple task. Overrides setSimpleTaskDestination.", syntax: "task setSimpleTaskTarget [target, precisePosition]", returns: "target: Object", example: "task setSimpleTaskTarget [targetVehicle, true];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 1714, name: "setSimpleTaskType", description: "Attach type to the simple task. See Default Task Types.", syntax: "task setSimpleTaskType taskType", returns: "taskType: String - Type of task", example: "(currentTask player) setSimpleTaskType 'attack';", game: "Arma 3", version: 1.58 },
    { id: 1715, name: "setSimulWeatherLayers", description: "Sets number of simul weather layers, affects quality of simul weather clouds.", syntax: "setSimulWeatherLayers layers", returns: "Nothing", example: "null", game: "Arma 3", version: 1 },
    { id: 1716, name: "setSize", description: "Sets the size (radius)  of a location.  The width  is 2 * x, the height is 2 * y.", syntax: "location setSize size", returns: "size: Array", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1717, name: "setSkill", description: "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.", syntax: "vehicleName setSkill skill", returns: "skill: Number Range 0 to 1", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1718, name: "setSkill array", description: "Sets sub-skill level of an unit / commander unit.   Value of sub-skill may vary from 0 to 1.  Possible sub-skill types are: aimingAccuracy aimingShake aimingSpeed endurance spotDistance spotTime courage reloadSpeed commanding general", syntax: "unitName setSkill [type, skill]", returns: "[type, skill]: Array", example: "null", game: "Armed Assault", version: 1 },
    { id: 1719, name: "setSlingLoad", description: "Creates sling loading from first object to second object if possible. To unload cargo, pass objNull as second param.", syntax: "vehicle setSlingLoad cargo", returns: "cargo: Object", example: "_success = heli1 setSlingLoad veh1;", game: "Arma 3", version: 1.34 },
    { id: 1720, name: "setSoundEffect", description: "Defines the different sound effects.    Sound - plays a 2D sound from CfgSounds  Voice - plays a 3D sound from CfgSounds  SoundEnv - plays an environmental sound from CfgEnvSounds  SoundDet (only for triggers) - creates a dynamic sound object attached to a trigger defined in CfgSFX  To stop any sound, deactivate the trigger (might take up to 0.5 sec to stop) or delete the trigger (immediate). Also use '$NONE$' to skip the sound (1st item), when there is none to be used (Example 3, 4, 5).", syntax: "trigger setSoundEffect [sound, voice, soundEnv, soundDet]", returns: "[sound, voice, soundEnv, soundDet]: Array of strings", example: "_trigger setSoundEffect ['Alarm', '', '', ''];", game: "Armed Assault", version: 1 },
    { id: 1721, name: "setSpeaker", description: "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server:     [bob, 'Male02GRE'] remoteExecCall ['setSpeaker', 0];", syntax: "person setSpeaker speaker", returns: "speaker: String - The used voice type", example: "unit1 setSpeaker 'Male02GRE';", game: "Arma 3", version: 1.02 },
    { id: 1722, name: "setSpeech", description: "Add speech to location.", syntax: "location setSpeech speech", returns: "speech: String", example: "null", game: "Arma 3", version: 1.12 },
    { id: 1723, name: "setSpeedMode", description: "Set group speed mode. Mode may be one of:   'LIMITED' (half speed)  'NORMAL' (full speed, maintain formation)  'FULL' (do not wait for any other units in formation)", syntax: "groupName setSpeedMode mode", returns: "mode: String", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1724, name: "setStamina", description: "Set units' stamina (seconds until depletion)", syntax: "unit setStamina stamina", returns: "stamina: Number", example: "player setStamina 42;", game: "Arma 3", version: 1.54 },
    { id: 1725, name: "setStaminaScheme", description: "Set stamina bar color. The scheme can be 'Normal', 'FastDrain', 'Exhausted' or 'Default'.", syntax: "setStaminaScheme scheme", returns: "Nothing", example: "setStaminaScheme 'Default';", game: "Arma 3", version: 1.54 },
    { id: 1726, name: "setStatValue", description: "Sets a value to a given stat.   A list of possible StatNames can be found here: StatNames  Its important to note that most Stats are restricted to scripts in certain paths.  For example 'ExpWarlockDown' is restricted to scripts in any subdirectory of 'a3\Missions_F_Exp\Campaign\Missions\'", syntax: "setStatValue [name, value]", returns: "name: String", example: "setStatValue ['ExpWarlockDown', 1]; //Unlocks the 'Warlock Down' Steam achivement", game: "Arma 3", version: 1.18 },
    { id: 1727, name: "setSuppression", description: "Sets the person's suppression, from 0 to 1.", syntax: "unit setSuppression value", returns: "value: Number", example: "AI_unit_1 setSuppression 1;", game: "Arma 3", version: 1.42 },
    { id: 1728, name: "setSystemOfUnits", description: "Set system of units.", syntax: "setSystemOfUnits value", returns: "Nothing", example: "myNum = 5; myNumNew = setSystemOfUnits myNum;", game: "Arma 3", version: 0.5 },
    { id: 1729, name: "setTargetAge", description: "Sets how the target is known to the other centers. They behave like the target was seen age seconds ago.  Possible age values are: 'ACTUAL', '5 MIN', '10 MIN', '15 MIN', '30 MIN', '60 MIN', '120 MIN' or 'UNKNOWN'.", syntax: "object setTargetAge age", returns: "age: String As above", example: "player setTargetAge '10 MIN'", game: "Armed Assault", version: 1 },
    { id: 1730, name: "setTaskResult", description: "Set a result of the task.", syntax: "task setTaskResult [state,result]", returns: "[state,result]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1731, name: "setTaskState", description: "Set the state of a given task.  State value may be one of: 'None' 'Created' 'Assigned' 'Succeeded' 'Failed' 'Canceled'", syntax: "task setTaskState state", returns: "state: String", example: "_tskKillSpongebob setTaskState 'Succeeded';", game: "Arma 2", version: 1 },
    { id: 1732, name: "setTerrainGrid", description: "Operation Flashpoint, VBS1: Set desired terrain resolution (in meters).  For default landscapes, supported resolutions are:  50 - smoothest, less lag  25 - default in multiplayer  12.5 - default in singleplayer  6.25  3.125 - bumpiest, higher lag  If you select unsupported resolutions, nearest supported value is used instead.   Armed Assault, VBS2: Terrain resolution is fixed, determined by the world created. This function controls terrain LOD instead (the distance in which the terrain mesh resolution starts to degrade). Higher number means less vertices are used for terrain rendering, making distant hills less smooth. Value 12.5 corresponds to selecting Terrain Detail Normal in Video options, 50 to Very Low, 3.125 to Very High.", syntax: "setTerrainGrid grid", returns: "Nothing", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1733, name: "setText", description: "Sets the text associated with a location. This text will be displayed on the game map at the location's position.", syntax: "location setText text", returns: "text: String", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1734, name: "setTimeMultiplier", description: "Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems.", syntax: "setTimeMultiplier value", returns: "Nothing", example: "setTimeMultiplier 60;", game: "Arma 3", version: 1.26 },
    { id: 1735, name: "setTitleEffect", description: "Defines the title effect via [Type, Effect, Text] where  'Type' can be  'NONE',  'OBJECT',  'Text' defines the shown object , a subclass of CfgTitles.  'RES'  'Text' defines a resource class, a subclass of RscTitles. 'TEXT' The 'Text' is shown as text itself. 'Effect' defines a subtype: 'PLAIN', 'PLAIN DOWN', 'BLACK', 'BLACK FADED', 'BLACK OUT', 'BLACK IN', 'WHITE OUT' or 'WHITE IN'.", syntax: "trigger setTitleEffect [type, effect, text]", returns: "[type, effect, text]: Array of strings. See above", example: "null", game: "Armed Assault", version: 1 },
    { id: 1736, name: "setTriggerActivation", description: "Defines the trigger activation type.   See ArmA:Mission Editor - Triggers for a thorough overview of triggers and its fields for activation, effects, etc.   Since Arma 3 v1.67, 'ANYPLAYER' activation can be used to detect any player.", syntax: "trigger setTriggerActivation [by, type, repeating]", returns: "by: String - Who activates trigger. Can be 'NONE' or   Side: 'EAST', 'WEST', 'GUER', 'CIV', 'LOGIC', 'ANY', 'ANYPLAYER' (Since Arma 3 v1.67)  Radio: 'ALPHA', 'BRAVO', 'CHARLIE', 'DELTA', 'ECHO', 'FOXTROT', 'GOLF', 'HOTEL', 'INDIA', 'JULIET'  Object: 'STATIC', 'VEHICLE', 'GROUP', 'LEADER', 'MEMBER'  Status: 'WEST SEIZED', 'EAST SEIZED' or 'GUER SEIZED'", example: "_trigger setTriggerActivation ['WEST', 'EAST D', true]", game: "Armed Assault", version: 1 },
    { id: 1737, name: "setTriggerArea", description: "Defines the area monitored by the given trigger. The area could be either rectangular or elliptical. Since Arma 3 v1.59.135137 it is possible to define 3 dimensional area to monitor by specifying extra param for the area height (see pic).    Just like with a and b dimensions, c dimension will alter area in opposite directions from the trigger position along z axis. Therefore if the trigger position is on the surface, half of the trigger area will be above the surface and half below. To place the whole area above the surface, adjust trigger position (move it up c meters). If c is not specified or <= 0, the trigger area considered infinitely tall, like in old triggers.", syntax: "trigger setTriggerArea [a, b, angle, isRectangle, c]", returns: "[a, b, angle, isRectangle, c]: Array", example: "_trigger setTriggerArea [100, 50, 45, false];", game: "Armed Assault", version: 1 },
    { id: 1738, name: "setTriggerStatements", description: "Defines trigger condition, activation and deactivation statements. Trigger condition has to return Boolean. true will activate the trigger, false will deactivate it (only if activation is set to repeat). thisList returns the same result as list command, which includes all entities in the trigger area that are capable of activating the trigger. Dead entities are excluded as well as crew in vehicles, vehicles themselves are included.", syntax: "trigger setTriggerStatements [condition, activation, deactivation]", returns: "[condition, activation, deactivation]: Array", example: "_trg setTriggerStatements ['this', 'hint 'trigger on'', 'hint 'trigger off'']", game: "Armed Assault", version: 1 },
    { id: 1739, name: "setTriggerText", description: "Sets the text label attached to the trigger object. This is used for example as a radio slot label for radio activated triggers.", syntax: "trigger setTriggerText text", returns: "text: String", example: "null", game: "Armed Assault", version: 1 },
    { id: 1740, name: "setTriggerTimeout", description: "Defines the time between condition satisfaction and trigger activation (randomly from min to max, with an average value mid). If the last argument is true, the condition must be fullfilled all the time.    For a normal trigger, min, mid and max are used to generate random duration according to Gaussian Distribution. For a 'Seized' type of trigger, the duration value is generated using side ruling power", syntax: "trigger setTriggerTimeout [min, mid, max, interruptable]", returns: "[min, mid, max, interruptable]: Array", example: "_trigger setTriggerTimeout [5, 10, 7, false];", game: "Armed Assault", version: 1 },
    { id: 1741, name: "setTriggerType", description: "Sets the type of action processed by the trigger after activation (no action, a waypoints switch or an end of mission):   'NONE'  'EAST G' - Guarded by OPFOR - use createGuardedPoint instead!  'WEST G' - Guarded by BLUFOR - use createGuardedPoint instead!  'GUER G' - Guarded by Independent - use createGuardedPoint instead!  'SWITCH' - Switch waypoints/break loop (see Triggers)  'END1' - End #1  'END2' - End #2  'END3' - End #3  'END4' - End #4  'END5' - End #5  'END6' - End #6  'LOOSE' - Lose //it is not a typo on the wiki, it is indeed misspelt in the game engine.  'WIN' - (not found in ArmA)", syntax: "trigger setTriggerType action", returns: "action: String", example: "_trigger setTriggerType 'END1'", game: "Armed Assault", version: 1 },
    { id: 1742, name: "setType", description: "Changes a location to the specified class. Location classes are defined in CfgLocationTypes.", syntax: "location setType name", returns: "name: String", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1743, name: "setUnconscious", description: "Since Arma 3 v1.63.136889, this command sets unit into incapacitated state and lifeState command returns 'INCAPACITATED'. Animation played while incapacitated depends on the injuries received.", syntax: "unit setUnconscious set", returns: "set: Boolean -", example: "_unit setUnconscious true;", game: "Arma 2", version: 1 },
    { id: 1744, name: "setUnitAbility", description: "Sets skill of given unit. Unlike with setSkill it is possible to use values > 1 with this command, and even though skill will correctly return set value, the actual unit ability will be capped to max available.", syntax: "unit setUnitAbility skill", returns: "skill: Number", example: "_unit setUnitAbility 1;", game: "Armed Assault", version: 1 },
    { id: 1745, name: "setUnitLoadout", description: "Creates a loadout from given inventory structure and applies it to a unit.          This command is not final and might be changed in a near future.", syntax: "unit setUnitLoadout [loadout, rearm]", returns: "loadout: Array - loadout array from getUnitLoadout", example: "_loadout = getUnitLoadout player_1 ; player_2 setUnitLoadout _loadout;//Copies loadout from player_1 and applies it to player_2", game: "Arma 3", version: 1.58 },
    { id: 1746, name: "setUnitPos", description: "Set unit position rules. Mode may be one of:   'DOWN' - unit goes prone and stays prone.  'UP' - unit stands and stays standing.  'MIDDLE' - Kneel Position. ArmA version 1.04 (Unit will not kneel if it is unarmed)  'AUTO' - unit chooses mode according to circumstances.", syntax: "unit setUnitPos mode", returns: "mode: String - as above", example: "_soldier setUnitPos 'UP';", game: "Operation Flashpoint", version: 1 },
    { id: 1747, name: "setUnitPosWeak", description: "Set unit position rules. Mode may be one of:   'DOWN' - person goes prone and stays prone.  'UP' - person stands and stays standing.  'Middle' - Kneel Position. ArmA version 1.04  'AUTO' - person chooses mode according to circumstances.", syntax: "unit setUnitPosWeak mode", returns: "mode: String - as above", example: "_soldier disableAI 'FSM'; _soldier setUnitPosWeak 'DOWN';", game: "Armed Assault", version: 1.04 },
    { id: 1748, name: "setUnitRank", description: "Sets rank of given unit.  Possible rank values, and the associated rating that is automatically given:  PRIVATE: 0  CORPORAL: 500  SERGEANT: 1500  LIEUTENANT: 2500  CAPTAIN: 3500  MAJOR: 5000  COLONEL: 7500           Since Arma 3 v1.67 this command is", syntax: "unitName setUnitRank rank", returns: "rank: String As above", example: "null", game: "Armed Assault", version: 1 },
    { id: 1749, name: "setUnitRecoilCoefficient", description: "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.", syntax: "unitName setUnitRecoilCoefficient coefficient", returns: "coefficient: Number", example: "player setUnitRecoilCoefficient 10", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1750, name: "setUnitTrait", description: "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.   Default traits are:   audibleCoef (scalar)  camouflageCoef (scalar)  engineer (bool)  explosiveSpecialist (bool)  loadCoef (scalar)  medic (bool)  UAVHacker (bool)", syntax: "unit setUnitTrait [skill_name, value, isCustom]", returns: "value: Bool or Number - Value (see above)", example: "player setUnitTrait ['Medic',true];", game: "Arma 3", version: 1.58 },
    { id: 1751, name: "setUnloadInCombat", description: "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.", syntax: "vehicle setUnloadInCombat [allowCargo, allowTurrets]", returns: "[allowCargo, allowTurrets]: Array", example: "_veh setUnloadInCombat [true, false];", game: "Arma 3", version: 1.36 },
    { id: 1752, name: "setUserActionText", description: "Changes user added action (see addAction) menu item text.     Since Arma 3 v1.61.136587 it is possible to set 2 more optional texts, one for background and one for foreground when action is displayed on the screen (showWindow = true)", syntax: "object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]", returns: "[actionIndex, textMenu, textWindowBackground, textWindowForeground] : Array", example: "_id = player addAction ['Hello', '']; player setUserActionText [_id, 'Good Bye'];", game: "Arma 3", version: 0.5 },
    { id: 1753, name: "setUserMFDvalue", description: "Store user value in MFD, limit is 10, user0...user9.", syntax: "vehicle setUserMFDvalue [index, value]", returns: "index: Number - index of custom MFD user actions", example: "BIS_Plane setUserMFDvalue [0,1]; // user0 in MFD will return 1", game: "Arma 3", version: 1.7 },
    { id: 1754, name: "setVariable", description: "Set variable to given value in the variable space of given element.   To remove a variable, set it to nil (e.g. player setVariable ['varname', nil];).   When variable is set on Task, it is not actually set on task itself, but on FSM attached to the task. So if there is no FSM setVariable will not work.   All available variable spaces which support setVariable:  Namespace setVariable Array  Object setVariable Array  Group setVariable Array  Team_Member setVariable Array  Task setVariable Array  Location setVariable Array  Control setVariable Array (since Arma 3 v1.55.133553)  Display setVariable Array (since Arma 3 v1.55.133553)          In Arma 3 it is possible to broadcast nil value", syntax: "varspace setVariable [name, value, public]", returns: "[name, value, public]: Array", example: "player setVariable ['varname', nil];", game: "Armed Assault", version: 1 },
    { id: 1755, name: "setVectorDir", description: "Set object's direction vector. Up vector will remain unchanged.", syntax: "object setVectorDir [x,y,z]", returns: "[x,y,z]: Array", example: "player setVectorDir [0,0,1]", game: "Armed Assault", version: 1 },
    { id: 1756, name: "setVectorDirAndUp", description: "Sets orientation of an object. The command takes 2 vector arrays, one for vectorDir and one for vectorUp. Default object orientation will always have vectorDir pointing forward (North) along Y axis and vectorUp pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below.   When attaching object to an object the axes are relative to the object that gets the attachment. If it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up.    The setDir command is incompatible with setVectorDirAndUp and should not be used together on the same object. Using setVectorDirAndUp alone should be sufficient for any orientation.    In Multiplayer, setVectorDirAndUp must be executed on the machine where the object it applied to is local.", syntax: "vehicle setVectorDirAndUp [[x1, y1, z1],[x2, y2, z2]]", returns: "[[x1, y1, z1],[x2, y2, z2]]: Array", example: "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; BRICK setVectorDirAndUp [ 	[ sin _y * cos _p,cos _y * cos _p,sin _p], 	[ [ sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", game: "Armed Assault", version: 1.09 },
    { id: 1757, name: "setVectorUp", description: "Set object's up vector. Direction of the object remain unchanged. Default object's vectorUp is [0,0,1].  In Multiplayer, setVectorUp must be executed on the machine where the object it applied to is local.", syntax: "object setVectorUp [x, y, z]", returns: "[x, y, z]: Array", example: "_obj setVectorUp [0,0,-1];", game: "Armed Assault", version: 1 },
    { id: 1758, name: "setVehicleAmmo", description: "Sets how much ammunition (compared to a full state defined by the vehicle type) the vehicle has. Note that the ammo will be added only to local turrets. To check locality of turret use turretLocal.  The value ranges from 0 to 1.", syntax: "vehicleName setVehicleAmmo value", returns: "value: Number - 0: empty, 1: full", example: "player setVehicleAmmo 0;", game: "Armed Assault", version: 1 },
    { id: 1759, name: "setVehicleAmmoDef", description: "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.", syntax: "unit setVehicleAmmoDef value", returns: "value: Number - From 0 (no ammo) to 1 (fully loaded).", example: "player setVehicleAmmoDef 0;", game: "Arma 3", version: 0.5 },
    { id: 1760, name: "setVehicleArmor", description: "Sets the armor (or health for men) state of the vehicle (a value from 0 to 1).   Works like setDamage only in reverse: player setVehicleArmor 1 is the same as player setDamage 0, and player setVehicleArmor 0 is the same as player setDamage 0.97", syntax: "vehicleName setVehicleArmor value", returns: "value: Number range 0 to 1", example: "player setVehicleArmor 0.5;", game: "Armed Assault", version: 1 },
    { id: 1761, name: "setVehicleCargo", description: "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded.  Can also be used to unload a specific loaded vehicle or all loaded vehicles.", syntax: "vehicle setVehicleCargo cargo", returns: "cargo: Object", example: "_success = blackfish setVehicleCargo offroad; //true", game: "Arma 3", version: 1.62 },
    { id: 1762, name: "setVehicleId", description: "Sets id (integer value) to vehicle. By this id vehicle is referenced by triggers and waypoints.", syntax: "vehicleName setVehicleId id", returns: "id: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 1763, name: "setVehicleLock", description: "Sets vehicle lock. Possible values:     'UNLOCKED'   'DEFAULT'  'LOCKED'  'LOCKEDPLAYER'", syntax: "vehicleName setVehicleLock lockState", returns: "lockState: String see above", example: "_veh1 setVehicleLock 'LOCKED';", game: "Armed Assault", version: 1 },
    { id: 1764, name: "setVehiclePosition", description: "Moves the object to a given position (same as createVehicle placement algorithm). Uses either the position that's defined by the position param, or one of the marker positions from the markers array. The object is placed inside a circle with position as its center and placement as its radius. The type of placement could also be controlled with special.     If position is in water and vehicle can float, it is placed on water surface, otherwise it is placed on the ground, even if ground is under water. If roof surfaces support walking, units will be placed on roofs if such position is given.", syntax: "object setVehiclePosition [position, markers, placement, special]", returns: "[position, markers, placement, special]: Array", example: "player setVehiclePosition [[1000,2000], ['Pos1','Pos2','Pos3'], 0, 'CAN_COLLIDE'];", game: "Armed Assault", version: 1 },
    { id: 1765, name: "setVehicleRadar", description: "Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.", syntax: "vehicle setVehicleRadar rules", returns: "rules: Number - a flag, 0 - automatic, 1 - forced on, 2 - forced off", example: "_vehicle setVehicleRadar 1;", game: "Arma 3", version: 1.7 },
    { id: 1766, name: "setVehicleReceiveRemoteTargets", description: "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.", syntax: "vehicle setVehicleReceiveRemoteTargets bool", returns: "bool: Boolean", example: "(vehicle player) setVehicleReceiveRemoteTargets true;", game: "Arma 3", version: 1.7 },
    { id: 1767, name: "setVehicleReportOwnPosition", description: "Sets that the vehicle will share its own position via datalink to the Side center.", syntax: "vehicle setVehicleReportOwnPosition report", returns: "report: Boolean", example: "(vehicle player) setVehicleReportOwnPosition true;", game: "Arma 3", version: 1.7 },
    { id: 1768, name: "setVehicleReportRemoteTargets", description: "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.", syntax: "vehicle setVehicleReportRemoteTargets bool", returns: "bool: Boolean", example: "(vehicle player) setVehicleReportRemoteTargets true;", game: "Arma 3", version: 1.7 },
    { id: 1769, name: "setVehicleTIPars", description: "Sets the 'heat' state of different vehicle parts (for TI detection).  This allows simulation of heated up parts of a vehicle without it actually having to utilize them. (0: cold, 1: hot)", syntax: "vehicle setVehicleTIPars [engine, wheels, weapon]", returns: "[engine, wheels, weapon]: Array", example: "vehicle player setVehicleTIPars [1,1,1];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1770, name: "setVehicleVarName", description: "Sets string representation of an object to a custom string. For example it is possible to return 'MyFerrari' instead of default 'ce06b00# 164274: offroad_01_unarmed_f.p3d' when querying object as string:  hint str _offroad; //MyFerrari When a vehicle is created and named in the editor, the name becomes both the variable containing the vehicle object and the string representation of the vehicle object. vehicleVarName on the other hand is only string representation of the object. So if you want to refer to the actual object by its vehicleVarName, an extra step needed to assign the object to a variable of the same name. For example to see and refer to offroad as myFerrari: _offroad setVehicleVarName 'MyFerrari'; MyFerrari = _offroad; In multiplayer environment setVehicleVarName has to be executed on every PC if you want the custom name to be known everywhere. If vehicle is created and named in the editor, the vehicle name will be known globally automatically.   To reset vehicleVarName and str representation of the object to original form set vehicleVarName to an empty string: _offroad setVehicleVarName '';", syntax: "object setVehicleVarName name", returns: "name: String", example: "hint str _offroad; //MyFerrari", game: "Armed Assault", version: 1 },
    { id: 1771, name: "setVelocity", description: "Set velocity (speed vector) of a vehicle.   Units are in metres per second.", syntax: "vehicleName setVelocity [x, y, z]", returns: "[x, y, z]: Array", example: "_truck1 setVelocity [20, 0, 0];", game: "Operation Flashpoint: Resistance", version: 1.8 },
    { id: 1772, name: "setVelocityModelSpace", description: "Sets the velocity (speed vector) of the given vehicle relative to its model.", syntax: "vehicle setVelocityModelSpace [x, y, z]", returns: "[x, y, z]: Array - relative direction vector", example: "car setVelocityModelSpace [0, 10, 0]; //pushes car forward", game: "Arma 3", version: 1.68 },
    { id: 1773, name: "setVelocityTransformation", description: "Interpolate and sets vectors. For additional info see this resource.", syntax: "objectName setVelocityTransformation [position1, position2, velocity1, velocity2, direction1, direction2, up1, up2, time]", returns: "position1: Number", example: "_tracker setVelocityTransformation [ 	getPosASL _currentPos, 	getPosASL _nextPos, 	velocity _currentVelocity, 	velocity _nextVelocity, 	vectorDir _currentVectorDir, 	vectorDir _nextVectorDir, 	vectorUp _currentVectorUp, 	vectorUp _nextVectorUp, 	_timeDiff ];", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 1774, name: "setViewDistance", description: "Set rendering distance, in metres. Default is 900m (in OFP) or 1,200m (in ArmA), accepted range is 500m to 5,000m (in OFP) or 10,000m (in ArmA). Setting view distance to <= 0 resets the value to the one set in Options->Video->General->Visibility->Overall", syntax: "setViewDistance distance", returns: "Nothing", example: "setViewDistance 2250;", game: "Operation Flashpoint", version: 1 },
    { id: 1775, name: "setVisibleIfTreeCollapsed", description: "Sets whether or not the object is visible even if the tree is collapsed.", syntax: "map setVisibleIfTreeCollapsed [object, visible]", returns: "[object, visible]: Array", example: "_map setVisibleIfTreeCollapsed ['_unit_0', true]", game: "Arma 2", version: 1 },
    { id: 1776, name: "setWaves", description: "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.   NOTE: This command will have no effect (even though the value of waves changes) unless Manual Override option is selected in the editor in the Intel, which is normally off.", syntax: "time setWaves value", returns: "value: Number", example: "180 setWaves .5;", game: "Arma 3", version: 0.5 },
    { id: 1777, name: "setWaypointBehaviour", description: "Switches the unit behaviour when the waypoint becomes active.     Possible values are:  'UNCHANGED'  'CARELESS'  'SAFE'  'AWARE'  'COMBAT'  'STEALTH'  See the AIBehaviour page for details of the effect of this command on AI units.", syntax: "waypoint setWaypointBehaviour mode", returns: "mode: String As Above", example: "[_grp, 2] setWaypointBehaviour 'AWARE';", game: "Armed Assault", version: 1 },
    { id: 1778, name: "setWaypointCombatMode", description: "The group combat mode is switched when the waypoint becomes active.     Possible mode values are:  'NO CHANGE' (No change)  'BLUE' (Never fire)  'GREEN' (Hold fire - defend only)  'WHITE' (Hold fire, engage at will)  'YELLOW' (Fire at will)  'RED' (Fire at will, engage at will)", syntax: "waypoint setWaypointCombatMode mode", returns: "mode: String", example: "[_grp, 2] setWaypointCombatMode 'RED';", game: "Armed Assault", version: 1 },
    { id: 1779, name: "setWaypointCompletionRadius", description: "The completion radius allows units to call the waypoint completed once they are inside of the given circle.", syntax: "waypoint setWaypointCompletionRadius radius", returns: "radius: Number", example: "[grp, 2] setWaypointCompletionRadius 30;", game: "Arma 2", version: 1 },
    { id: 1780, name: "setWaypointDescription", description: "Sets the description shown in the HUD while the waypoint is active.", syntax: "waypoint setWaypointDescription text", returns: "text: String", example: "[_grp, 2] setWaypointDescription 'Move here.';", game: "Armed Assault", version: 1 },
    { id: 1781, name: "setWaypointForceBehaviour", description: "Forces the behavior of waypoint, disables AUTOCOMBAT.", syntax: "waypoint setWaypointForceBehaviour state", returns: "state: Boolean - Force or not", example: "[grp, 2] setWaypointForceBehaviour true;", game: "Arma 3", version: 1.58 },
    { id: 1782, name: "setWaypointFormation", description: "Switches the group formation when the waypoint becomes active.     Possible values are:   'NO CHANGE'  'COLUMN'  'STAG COLUMN'  'WEDGE'  'ECH LEFT'  'ECH RIGHT'  'VEE'  'LINE'  'FILE'  'DIAMOND'", syntax: "waypoint setWaypointFormation formation", returns: "formation: String", example: "[_grp, 2] setWaypointFormation 'LINE';", game: "Armed Assault", version: 1 },
    { id: 1783, name: "setWaypointHousePosition", description: "For waypoints attached to a house, this defines the target house position.", syntax: "waypoint setWaypointHousePosition pos", returns: "pos: Number", example: "[_grp, 2] setWaypointHousePosition 1;", game: "Armed Assault", version: 1 },
    { id: 1784, name: "setWaypointLoiterRadius", description: "Assignes loiter radius to waypoint", syntax: "waypoint setWaypointLoiterRadius radius", returns: "radius: Number", example: "[_grp, 2] setWaypointLoiterRadius 200;", game: "Arma 3", version: 1 },
    { id: 1785, name: "setWaypointLoiterType", description: "Sets the waypoint loiter type.", syntax: "waypoint setWaypointLoiterType type", returns: "type: String", example: "[_grp, 2] setWaypointLoiterType 'CIRCLE';", game: "Arma 3", version: 1 },
    { id: 1786, name: "setWaypointName", description: "Changes the waypoint name.", syntax: "waypoint setWaypointName name", returns: "name: String", example: "[_grp,2] setWaypointName 'myName';", game: "Arma 3", version: 0.5 },
    { id: 1787, name: "setWaypointPosition", description: "Moves the waypoint to a random position in a circle with the given center and radius.", syntax: "waypoint setWaypointPosition [center, radius]", returns: "[center, radius]: Array", example: "[_grp, 2] setWaypointPosition [position player, 0];", game: "Armed Assault", version: 1 },
    { id: 1788, name: "setWaypointScript", description: "Attaches a script to a scripted waypoint. In early versions of Arma, command consisted of a script name and additional script arguments and the script had to use SQS-Syntax. The script receives the following arguments in _this variable: [group, position, target] + [the optional passed arguments]. The optional arguments are appended to the end of the return array.   In Arma 3, command argument can be a String with code, a reference to .sqf script (it will have to explicitly end with .sqf) or a reference to .sqs script.   See Mission editor Description for more information about scripted waypoints.", syntax: "waypoint setWaypointScript command", returns: "command: String", example: "[_grp, 2] setWaypointScript 'find.sqs player';", game: "Armed Assault", version: 1 },
    { id: 1789, name: "setWaypointSpeed", description: "Switches the group speed mode when the waypoint becomes active.     Possible values are:  'UNCHANGED'  'LIMITED'  'NORMAL'  'FULL'", syntax: "waypoint setWaypointSpeed mode", returns: "mode: String", example: "[_grp, 2] setWaypointSpeed 'FULL';", game: "Armed Assault", version: 1 },
    { id: 1790, name: "setWaypointStatements", description: "The waypoint is done only when the condition is fulfilled. When the waypoint is done, the statement expression is executed.     Within the Condition & Statement code string:  this refers to the group leader  thisList refers to an array containing each unit in the group", syntax: "waypoint setWaypointStatements [condition, statement]", returns: "[condition, statement]: Array", example: "new_wp setWaypointStatements ['true', 'hint 'hello'; hint 'goodbye''];", game: "Armed Assault", version: 1 },
    { id: 1791, name: "setWaypointTimeout", description: "Defines the time between condition satisfaction and waypoint finish (randomly from min to max, with an average value mid).", syntax: "waypoint setWaypointTimeout [min, mid, max]", returns: "[min, mid, max]: Array", example: "[_grp, 2] setWaypointTimeout [5, 10, 6];", game: "Armed Assault", version: 1 },
    { id: 1792, name: "setWaypointType", description: "Changes the waypoint type.   Type can be:  'MOVE'  'DESTROY'  'GETIN'  'SAD'  'JOIN'  'LEADER'  'GETOUT'  'CYCLE'  'LOAD'  'UNLOAD'  'TR UNLOAD'  'HOLD'  'SENTRY'  'GUARD' (for use with GUARDED BY trigger or createGuardedPoint)  'TALK'  'SCRIPTED'  'SUPPORT'  'GETIN NEAREST'  'DISMISS'  'LOITER' (new in Arma 3)  'AND' (only for game logics)  'OR' (only for game logics)  More details at Waypoint types.", syntax: "waypoint setWaypointType type", returns: "type: String", example: "[_grp, 2] setWaypointType 'HOLD';", game: "Armed Assault", version: 1 },
    { id: 1793, name: "setWaypointVisible", description: "Sets the visibility of the waypoint.", syntax: "waypoint setWaypointVisible visible", returns: "visible: Boolean", example: "[grp, 2] setWaypointVisible false;", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 1794, name: "setWeaponReloadingTime", description: "Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.", syntax: "vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime]", returns: "[gunner, muzzleName, reloadTime]: Array", example: "_done = _vehicle setWeaponReloadingTime [gunner (vehicle player), currentMuzzle (gunner (vehicle player)), 0.5];", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 1795, name: "setWind", description: "Set current (forced == false) or permanent (forced == true) wind vector.  NOTE: The effect is global only if command is executed on the server. Wind set locally will sync back to server value in a while.", syntax: "setWind [x, y, forced]", returns: "x: Number Easterly component (in m/s, positive = to the east)", example: "setWind [10, 10, true];", game: "Arma 2", version: 1 },
    { id: 1796, name: "setWindDir", description: "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.    NOTE: Effect is global only when executed on the server. On clients wind direction will sync to server value in a while.", syntax: "time setWindDir value", returns: "value: Number - Azimuth.", example: "60 setWindDir 180", game: "Arma 3", version: 0.5 },
    { id: 1797, name: "setWindForce", description: "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.", syntax: "time setWindForce wind", returns: "wind: Number", example: "1800 setWindForce 0.5", game: "Arma 3", version: 0.5 },
    { id: 1798, name: "setWindStr", description: "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", syntax: "time setWindStr value", returns: "value: Number", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1799, name: "setWPPos", description: "Set waypoint position", syntax: "waypoint setWPPos pos", returns: "pos: Array - format Position2D", example: "[_groupOne, 1] setWPPos markerPos 'MarkerOne';", game: "Operation Flashpoint", version: 1.21 },
    { id: 1800, name: "show3DIcons", description: "Toggle the drawing of 3D icons.", syntax: "map show3DIcons bool", returns: "bool: Boolean -", example: "null", game: "Arma 2", version: 1 },
    { id: 1801, name: "showChat", description: "Shows/hides the whole chat window.", syntax: "showChat bool", returns: "Nothing", example: "showChat false;", game: "Arma 3", version: 0.5 },
    { id: 1802, name: "showCinemaBorder", description: "Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control.", syntax: "showCinemaBorder show", returns: "Nothing", example: "showCinemaBorder false;", game: "Operation Flashpoint", version: 1 },
    { id: 1803, name: "showCommandingMenu", description: "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.   If commanding menu has 'expression' set up, the expression will receive the following arguments when user activated the menu item:  Local variable  _target: Object - Target under the cursor. This works in both 3D and 2D (when cursor is over the unit icon on the map).  Local variable _pos: Array - Cursor position.  Local variable _is3D: Boolean - false if cursor is over the map, otherwise true.", syntax: "showCommandingMenu name", returns: "Nothing", example: "showCommandingMenu '';", game: "Arma 2", version: 1 },
    { id: 1804, name: "showCompass", description: "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true)", syntax: "showCompass show", returns: "Nothing", example: "showCompass false;", game: "Operation Flashpoint", version: 1 },
    { id: 1805, name: "showCuratorCompass", description: "Hides or shows compass in curator interface.", syntax: "showCuratorCompass bool", returns: "Nothing", example: "showCuratorCompass true;", game: "Arma 3", version: 1.16 },
    { id: 1806, name: "showGPS", description: "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false)", syntax: "showGPS show", returns: "Nothing", example: "showGPS true;", game: "Operation Flashpoint", version: 1 },
    { id: 1807, name: "showHUD", description: "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.   Appearance of HUD can also be controlled with showHUD param in description.ext. NOTE: As of Arma 3 v1.49.131879 there is a showHUD[] array param, that is identical in format to the extended showHUD command. When showHUD[] array param is present in description.ext, it will disable showHUD command entirely, allowing mission makers to permanently alter visibility of some HUD elements.", syntax: "showHUD enable", returns: "Nothing", example: "showHUD false;", game: "Arma 2", version: 1 },
    { id: 1808, name: "showLegend", description: "Show/hide map legend.", syntax: "map showLegend bool", returns: "bool: Boolean -", example: "null", game: "Arma 2", version: 1 },
    { id: 1809, name: "showMap", description: "Enable Map (default true)", syntax: "showMap show", returns: "Nothing", example: "showMap false", game: "Operation Flashpoint", version: 1 },
    { id: 1810, name: "shownArtilleryComputer", description: "Checks whether the player has the artillery computer currently open.", syntax: "shownArtilleryComputer", returns: "null", example: "if ( shownArtilleryComputer ) then { hint 'Artillery Computer shown on screen'; };", game: "Arma 3", version: 0.5 },
    { id: 1811, name: "shownChat", description: "Returns true if chat window is enabled. Chat window can be disabled with showChat command.", syntax: "shownChat", returns: "null", example: "_bool = shownChat;", game: "Arma 3", version: 1.36 },
    { id: 1812, name: "shownCompass", description: "Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command.", syntax: "shownCompass", returns: "null", example: "if (shownCompass) then {hint 'You have Compass enabled'};", game: "Operation Flashpoint", version: 1 },
    { id: 1813, name: "shownCuratorCompass", description: "Returns true if compass is shown.", syntax: "shownCuratorCompass", returns: "null", example: "null", game: "Arma 3", version: 1.16 },
    { id: 1814, name: "showNewEditorObject", description: "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.", syntax: "map showNewEditorObject [type,class,side,position]", returns: "[type,class,side,position]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1815, name: "shownGPS", description: "Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command.", syntax: "shownGPS", returns: "null", example: "if (shownGPS) then {hint 'You have GPS reciever enabled'};", game: "Operation Flashpoint", version: 1 },
    { id: 1816, name: "shownHUD", description: "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).", syntax: "shownHUD", returns: "null", example: "_hudStatus = shownHUD;", game: "Arma 3", version: 1.52 },
    { id: 1817, name: "shownMap", description: "Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command.", syntax: "shownMap", returns: "null", example: "if (shownMap) then {hint 'You have Map enabled'};", game: "Operation Flashpoint", version: 1 },
    { id: 1818, name: "shownPad", description: "Checks if client has Notepad enabled.", syntax: "shownPad", returns: "null", example: "if (shownPad) then {hint 'You have Notepad enabled.'};", game: "Operation Flashpoint", version: 1 },
    { id: 1819, name: "shownRadio", description: "Check if player has Radio enabled.", syntax: "shownRadio", returns: "null", example: "if (shownRadio) then {hint 'You have Radio enabled.'};", game: "Operation Flashpoint", version: 1 },
    { id: 1820, name: "shownScoretable", description: "Returns the state of the score table set with showScoretable command.          Since Arma 3 v1.63.137869, the previous functionality of this command (score table visibility check) is moved to visibleScoretable command. Please update your scripts and sorry for any inconvinience.", syntax: "shownScoretable", returns: "null", example: "_state = shownScoretable;", game: "Arma 3", version: 1.6 },
    { id: 1821, name: "shownUAVFeed", description: "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed", syntax: "shownUAVFeed", returns: "null", example: "_bool = shownUAVFeed;", game: "Arma 3", version: 1.16 },
    { id: 1822, name: "shownWarrant", description: "Check if player has ID card enabled. Obsolete command.", syntax: "Boolean = shownWarrant", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1823, name: "shownWatch", description: "Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.", syntax: "shownWatch", returns: "null", example: "if (shownWatch) then {hint 'You have Watch enabled'};", game: "Operation Flashpoint", version: 1 },
    { id: 1824, name: "showPad", description: "Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2.", syntax: "showPad show", returns: "Nothing", example: "showPad false", game: "Operation Flashpoint", version: 1 },
    { id: 1825, name: "showRadio", description: "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true)", syntax: "showRadio show", returns: "Nothing", example: "showRadio false", game: "Operation Flashpoint", version: 1 },
    { id: 1826, name: "showScoretable", description: "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be  closed manually, when it is force closed, it cannot be opened manually.", syntax: "showScoretable force", returns: "Nothing", example: "showScoretable 1;", game: "Arma 3", version: 1.6 },
    { id: 1827, name: "showSubtitles", description: "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.", syntax: "showSubtitles enable", returns: "Boolean", example: "showSubtitles false;", game: "Arma 2", version: 1 },
    { id: 1828, name: "showUAVFeed", description: "Shows/hides video feed transmitted from UAV. When enabled, the video is streamed to following texture  '#(argb,512,512,1)r2t(uavpipsingleview,1.25)' in the feed window. The feed window IGUI display idd is 315. The actual feed control idc is 102.  _UAVFeedDisplay = uiNamespace getVariable 'RscAvCamera';", syntax: "showUAVFeed show", returns: "Boolean - always true unless error", example: "_UAVFeedDisplay = uiNamespace getVariable 'RscAvCamera';", game: "Arma 3", version: 1.16 },
    { id: 1829, name: "showWarrant", description: "Enable ID card (default false). Obsolete command.", syntax: "showWarrant show", returns: "Nothing", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1830, name: "showWatch", description: "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true)", syntax: "showWatch show", returns: "Nothing", example: "showWatch false;", game: "Operation Flashpoint", version: 1 },
    { id: 1831, name: "showWaypoint", description: "Sets the condition determining when the waypoint is shown.   Possible values are:  'NEVER' - never show it  'EASY' - show only in cadet mode  'ALWAYS' - always show it", syntax: "waypoint showWaypoint show", returns: "show: String - see description", example: "[_grp, 2] showWaypoint 'ALWAYS';", game: "Armed Assault", version: 1 },
    { id: 1832, name: "showWaypoints", description: "Shows/Hides task HUD markers and waypoints that will fade out in time. Dependable on difficulty settings.", syntax: "showWaypoints enabled", returns: "Nothing", example: "null", game: "Arma 3", version: 1 },
    { id: 1833, name: "side", description: "Returns the side of a unit, vehicle, object or location. Once dead, a unit will be on the civilian side. Query the side of the Group to get a reliable result.    When used in conjunction with a format statement hint format['%1', side player], the returned strings are: 'WEST', 'EAST', 'GUER', 'CIV', 'LOGIC', 'ENEMY' (eg: renegades), 'FRIENDLY', 'AMBIENT LIFE', 'EMPTY' or 'UNKNOWN'.", syntax: "side object", returns: "Side", example: "if (side player == west) then {hint 'Player is on the West side'};", game: "Operation Flashpoint", version: 1 },
    { id: 1834, name: "sideAmbientLife", description: "Returns side of ambient life, for example ambient life placed in Eden Editor.", syntax: "sideAmbientLife", returns: "null", example: "_sideAmbientLife = sideAmbientLife;", game: "Arma 3", version: 1.58 },
    { id: 1835, name: "sideChat", description: "Types text to the side radio channel. Must have assigned 'ItemRadio' to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", syntax: "unitName sideChat chatText", returns: "chatText: String - message to transmit", example: "_soldierOne sideChat 'Show this text';", game: "Operation Flashpoint", version: 1.34 },
    { id: 1836, name: "sideEmpty", description: "Returns empty side, for example static buildings in Eden Editor.", syntax: "sideEmpty", returns: "null", example: "_sideEmpty = sideEmpty;", game: "Arma 3", version: 1.58 },
    { id: 1837, name: "sideEnemy", description: "The enemy side (used for renegades). Unit of this side is enemy to everyone.  To become one, you can attack members of your own side or use addRating.  When below a rating of -2000 units switch automatically to this side.", syntax: "sideEnemy", returns: "null", example: "if (side player == sideEnemy) then {     hint 'We've got a renegade!'; };", game: "Operation Flashpoint: Resistance", version: 1.78 },
    { id: 1838, name: "sideFriendly", description: "The Friendly side (used for captives).", syntax: "Side = sideFriendly", returns: "null", example: "null", game: "Operation Flashpoint: Resistance", version: 1.78 },
    { id: 1839, name: "sideLogic", description: "The Logic side.  Side of Game Logics and Modules.", syntax: "sideLogic", returns: "null", example: "if (side _obj == sideLogic) then {     hint 'It's a logic!'; };", game: "Operation Flashpoint: Resistance", version: 1.9 },
    { id: 1840, name: "sideRadio", description: "Sends the audio message to the side radio channel. Must have assigned 'ItemRadio' to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).   Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit sideRadio radioName", returns: "radioName: String - class name from CfgRadio", example: "_soldierOne sideRadio 'messageOne';", game: "Operation Flashpoint", version: 1 },
    { id: 1841, name: "sideUnknown", description: "The unknown side.  Used when the side of a unit is unknown, e.g. for spotted targets with insufficient information.", syntax: "sideUnknown", returns: "null", example: "//soldier1 and soldier2 of different sides and out of sight soldier1 reveal soldier2; hint str (soldier1 nearTargets 1000); //returns: [[[1557.96,5047.4,1.32402],'SoldierWB',UNKNOWN,0.0155183,soldier2,5]] soldier1 reveal [soldier2,1.5]; //returns: [[[1556.52,5050.08,1.32402],'SoldierWB',WEST,0.0211193,soldier2,5]]", game: "Arma 2", version: 1 },
    { id: 1842, name: "simpleTasks", description: "Return all simple tasks assigned to given person.", syntax: "simpleTasks person", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1843, name: "simulationEnabled", description: "Check if the entity has enabled simulation.", syntax: "simulationEnabled entity", returns: "Boolean", example: "null", game: "Arma 2", version: 1 },
    { id: 1844, name: "simulCloudDensity", description: "Returns density of clouds at given position.", syntax: "simulCloudDensity pos", returns: "Number", example: "simulCloudDensity (getPos player)", game: "Arma 3", version: 1 },
    { id: 1845, name: "simulCloudOcclusion", description: "Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds).", syntax: "simulCloudOcclusion [pos1,pos2]", returns: "pos1: Position", example: "canSeeSun = (simulCloudOcclusion == 0)", game: "Arma 3", version: 1 },
    { id: 1846, name: "simulInClouds", description: "Returns if given position is in clouds.", syntax: "simulInClouds pos", returns: "Boolean", example: "simulInClouds (getPos player)", game: "Arma 3", version: 1 },
    { id: 1847, name: "simulWeatherSync", description: "Synchronizes Simul Weather with Arma weather, generates all keyframes.", syntax: "simulWeatherSync", returns: "null", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1848, name: "sin", description: "Sine of x, argument in Degrees.", syntax: "Number = sin x", returns: "Number", example: "_sine = sin 30;//result is 0.5", game: "Operation Flashpoint", version: 1 },
    { id: 1849, name: "size", description: "Returns a location's size.", syntax: "size location", returns: "Array = in format [x,y] in meters", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1850, name: "sizeOf", description: "Returns the diameter of bounding sphere of the object of given type in meters. Size returned is usually bigger than the biggest size of the object along any of the axes. For example if object is 10 x 4 x 5 the sizeOf value returned expected to be around 10. If you need to estimate the size of the object more precisely, use boundingBox or boundingBoxReal.  NOTE: The object has to be present in current mission to be able to read its size (otherwise zero will be returned).", syntax: "Number = sizeOf type", returns: "Number", example: "_dimension = sizeOf 'M1Abrams'; //returns 10.7833", game: "Armed Assault", version: 1.08 },
    { id: 1851, name: "skill", description: "Returns current level of ability of person, in range between 0 and 1. Skill 1 is highest skill.", syntax: "skill unitName", returns: "Number", example: "null", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 1852, name: "skillFinal", description: "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).", syntax: "unitName skillFinal sub-skill", returns: "sub-skill: String Possible values are:  'aimingAccuracy'  'aimingShake'  'aimingSpeed'  'endurance'  'spotDistance'  'spotTime'  'courage'  'reloadSpeed'  'commanding'  'general'", example: "null", game: "Arma 3", version: 1.08 },
    { id: 1853, name: "skipTime", description: "Jumps the specified number of hours forward or backward. The time of day and tides are adjusted, but no changes are made to any units. If present, the lower level of clouds instantly jump to the position they would be in if time had passed normally.", syntax: "skipTime duration", returns: "Nothing", example: "skipTime 5;", game: "Operation Flashpoint", version: 1 },
    { id: 1854, name: "sleep", description: "Suspends code execution for given time in seconds. The sleep precision is given by a framerate, the delay given is the minimal delay expected. Must be called inside of a context which is interruptible, i.e. a script executed by execVM or spawn.   Notes  this command only guarantees that the code will be suspended 'at least' the given amount of time, however it often is more and on occasion is a lot more if script scheduler is particular busy  this command will suspend the script indefinitely if game simulation is paused in SP. To avoid this, use uiSleep.", syntax: "sleep delay", returns: "Nothing", example: "[] spawn {sleep 5; hint 'after 5 sec...'};", game: "Armed Assault", version: 1 },
    { id: 1855, name: "sliderPosition", description: "Return current thumb position of slider idc of topmost user dialog.", syntax: "sliderPosition idc", returns: "Number", example: "_slidepos1 = sliderPosition 105;", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1856, name: "sliderRange", description: "Return limits, as an Array [min, max] of slider idc of topmost user dialog.", syntax: "sliderRange idc", returns: "Array - [min, max]", example: "_slidelimits1 = sliderRange 105;", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1857, name: "sliderSetPosition", description: "Set current thumb position of slider idc of topmost user dialog.", syntax: "sliderSetPosition [idc, pos]", returns: "idc: Number of control", example: "sliderSetPosition [101, 50];", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1858, name: "sliderSetRange", description: "Set limits of slider idc of topmost user dialog.", syntax: "sliderSetRange [idc, min, max]", returns: "idc: Number of control", example: "sliderSetRange [101, 0, 100];", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1859, name: "sliderSetSpeed", description: "Set speed of slider with id idc of topmost user dialog.  Click to arrow - move by line  Click to scale outside thumb - move by page.", syntax: "sliderSetSpeed [idc,line,page]", returns: "idc: Number of control", example: "sliderSetSpeed [101, 0.5, 2];", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1860, name: "sliderSpeed", description: "Return speed, as an Array [min, max] of slider idc of topmost user dialog.", syntax: "sliderSpeed idc", returns: "Array - [min, max]", example: "_slidespeed1 = sliderSpeed 105;", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1861, name: "slingLoadAssistantShown", description: "Returns true of Sling Load Assistant is open", syntax: "slingLoadAssistantShown", returns: "null", example: "waitUntil {slingLoadAssistantShown};  hint 'You lack rudimentary motor skills and basic eye-hand coordination.'; //scold user for unethical practices", game: "Arma 3", version: 1.34 },
    { id: 1862, name: "soldierMagazines", description: "Get array with all magazines of the given unit.", syntax: "soldierMagazines unit", returns: "Array", example: "soldierMagazines player;", game: "Arma 3", version: 0.5 },
    { id: 1863, name: "someAmmo", description: "Check if unit has some ammo.", syntax: "Boolean = someAmmo unitName", returns: "Boolean", example: "? not (someAmmo _loon1) : hint 'Loon1 is out of ammo!'", game: "Operation Flashpoint", version: 1 },
    { id: 1864, name: "sort", description: "Attempts to sort given array either in ascending (true) or descending (false) order. All array elements should be one of the following types:  String - array of strings (['a','b','c'...])  Number - array of numbers ([1,2,3...])  Array - array of subarrays ([['a',1,2],['b',3,4],['c',5,6]...]). Subarrays should be of the same structure. Subarray elements other than String or Number will be ignored during sorting. Mixed arrays (['a',1,[true]...]) are not supported and results are undefined.", syntax: "array sort order", returns: "order: Boolean - true: ascending, false: descending", example: "_arr = [5.21725,1.30859,4,5.03028,1]; _arr sort true; hint str _arr; //[1,1.30859,4,5.03028,5.21725]", game: "Arma 3", version: 1.44 },
    { id: 1865, name: "soundVolume", description: "Check current sound volume (set by fadeSound).", syntax: "Number = soundVolume", returns: "null", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1866, name: "spawn", description: "Adds given code to the scheduler. Exactly when the code will be executed is unknown, it depends on how busy is the engine and how filled up is the scheduler. Therefore spawn does not wait for the supplied code to finish, instead, spawn returns a Script handle to the scheduler task. scriptDone command can be used to check the code completion. Additional arguments are passed to the code in local variable _this. Since Arma 3 v1.55 the script handle also exists inside the code in _thisScript variable.", syntax: "arguments spawn code", returns: "code: Code", example: "_handle = [] spawn {player globalChat 'Hello world!'};", game: "Armed Assault", version: 1 },
    { id: 1867, name: "speaker", description: "Returns the speaker of a person.", syntax: "speaker person", returns: "String", example: "speaker player", game: "Arma 3", version: 1.02 },
    { id: 1868, name: "speed", description: "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:  3.6 * (velocityModelSpace _obj select 1)", syntax: "speed object", returns: "Number", example: "if (speed _truck1 >= 100) then {hint 'You're going too fast!'};", game: "Operation Flashpoint", version: 1 },
    { id: 1869, name: "speedMode", description: "Returns speed mode of the group, which can be any of the following:   'LIMITED'  'NORMAL'  'FULL'", syntax: "String = speedMode groupName", returns: "String", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1870, name: "splitString", description: "An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters. In addition, if empty string '' is used for delimiters, str is split by each character.", syntax: "str splitString delimiters", returns: "delimiters: String - one or more characters, each used as a separate delimiter.", example: "_str = '- This, is a sample string.' splitString '-,. '; // ['This','is','a','sample','string'] _str joinString ' '; // 'This is a sample string'", game: "Arma 3", version: 1.5 },
    { id: 1871, name: "sqrt", description: "Returns square root of x.", syntax: "Number =  sqrt x", returns: "Number", example: "_sq = 9^0.5;  //Result is 3 _sq = 9^(1/2);  //Result is 3", game: "Operation Flashpoint", version: 1 },
    { id: 1872, name: "squadParams", description: "Returns data about squad of given unit loaded from squad.xml.  All items in returned array are String.", syntax: "squadParams unit", returns: "Array - [[squadNick,squadName,squadEmail,squadWeb,squadPicture,squadTitle],[memberId,memberNick,memberName,memberEmail,memberIcq,memberRemark]]", example: "_info = squadParams player;", game: "Arma 3", version: 1.18 },
    { id: 1873, name: "stance", description: "Returns the stance of given unit - can be 'STAND', 'CROUCH', 'PRONE', 'UNDEFINED' (for example, swimming) or '' (on non-human object)", syntax: "stance unit", returns: "String", example: "if (stance player == 'STAND') then { hint 'I am standing now!'; };", game: "Arma 3", version: 0.5 },
    { id: 1874, name: "startLoadingScreen", description: "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed. The loading screen does not end by itself and needs endLoadingScreen command, so make sure there is one at the end of loading operation.           NOTE: The game simulation is disabled during Loading Screen operation (at least in SP), therefore any use of sleep command will pause the game indefinitely. If you have to 'sleep', use uiSleep  By default (if custom resource is not provided) startLoadingScreen will use 'RscDisplayNotFreeze' resource. If you are using custom resource (could be also defined in description.ext), the following resource's controls are supported by the engine:   idc = 101; - text (type = 0;) or picture (type = 48;). The text will be set to the text provided by the command param.   idc = 103; - progress (type = 8;) or animated texture (type = 45;). This control indicates global hardcoded mission loading progress and is useless after mission is loaded.  idc = 104; - progress (type = 8;). This control's progress is initially set to 0 and can be manipulated with progressLoadingScreen command.", syntax: "startLoadingScreen [text, resource]", returns: "text: String", example: "startLoadingScreen ['Loading My Mission, please wait...'];", game: "Arma 2", version: 1 },
    { id: 1875, name: "step", description: "Optionally can set step. If you want to count down, step must be specified, and set negative. Default value is 1.", syntax: "for step stepSize", returns: "stepSize: Number", example: "null", game: "Armed Assault", version: 1 },
    { id: 1876, name: "stop", description: "Stop AI unit. Stopped unit will not be able to move, fire, or change its orientation to follow a watched object. It may still change the stance if deemed appropriate (e.g. under fire). Use disableAI to disable specific AI capabilities.", syntax: "unitName stop toggle", returns: "toggle: Boolean", example: "loon1 stop true", game: "Operation Flashpoint", version: 1 },
    { id: 1877, name: "stopEngineRTD", description: "Instant engines stop.", syntax: "stopEngineRTD heli", returns: "Array", example: "null", game: "Take On Helicopters", version: 1 },
    { id: 1878, name: "stopped", description: "Check if unit is stopped by stop command.", syntax: "Boolean = stopped unitName", returns: "Boolean", example: "? (stopped _loon1) : hint 'Loon1 is stopped'", game: "Operation Flashpoint", version: 1 },
    { id: 1879, name: "str", description: "Converts any value into a string by placing ' and ' around the argument. Since Arma 3 v1.63.137891 this command will correctly escape all ' inside a string:  // Before the fix: hint str 'string '' string'; // 'string ' string' <- invalid string call compile str 'string '' string'; // ERROR // After the fix: hint str 'string '' string'; // 'string '' string' <- valid string call compile str 'string '' string'; // OK   When used on object, object debug name is returned.", syntax: "str value", returns: "String", example: "// Before the fix: hint str 'string '' string'; // 'string ' string' <- invalid string call compile str 'string '' string'; // ERROR // After the fix: hint str 'string '' string'; // 'string '' string' <- valid string call compile str 'string '' string'; // OK", game: "Armed Assault", version: 1 },
    { id: 1880, name: "sunOrMoon", description: "Returns the sun to moon transition state in range 0...1", syntax: "sunOrMoon", returns: "null", example: "_transitionState = sunOrMoon;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1881, name: "supportInfo", description: "Creates a list of supported operators and type. Each field of array has the format: 'x:name' Where x can be: 't' - type 'n' - null operator 'u' - unary operator 'b' - binary operator.   'name' is the operator or type name (in case operator, type of input operands is included).  mask parameter can be an empty string, or one of field. In this case, function returns empty array, if operator is not included in the list. Limited wildcard support is available. Type x may be replaced with *, meaning all types. For the mask partial match may be used, like abc*, meaning any operators starting with 'abc' are reported, for example: *:name, t:*, t:name* or *:*.", syntax: "supportInfo mask", returns: "Array", example: "supportInfo 'b:select*';   //Returns ['b:ARRAY select SCALAR','b:ARRAY select BOOL','b:CONFIG select SCALAR']", game: "Armed Assault", version: 1 },
    { id: 1882, name: "suppressFor", description: "Force suppressive fire from the unit.", syntax: "unit suppressFor duration", returns: "duration: Number", example: "_soldier1 suppressFor 10", game: "Arma 2", version: 1.05 },
    { id: 1883, name: "surfaceIsWater", description: "Returns whether water is at given position.", syntax: "surfaceIsWater position", returns: "Boolean", example: "_isWater= surfaceIsWater [1000, 3000];", game: "Armed Assault", version: 1 },
    { id: 1884, name: "surfaceNormal", description: "Returns surface normal on given position.", syntax: "surfaceNormal position", returns: "Array - Example: [-0.102321,0.19977,0.974486]", example: "_normal = surfaceNormal [300, 500];", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 1885, name: "surfaceType", description: "Returns what surface type is at the given position.   See the spoiler for surface types:  Details anzeigen  A3 1.28:  '#GdtStratisConcrete' '#GdtStratisDryGrass' '#GdtStratisGreenGrass' '#GdtStratisRocky' '#GdtStratisForestPine' '#GdtStratisBeach' '#GdtStratisDirt' '#GdtVRsurface01' '#GdtDirt' '#GdtGrassGreen' '#GdtGrassDry' '#GdtSoil' '#GdtThorn' '#GdtStony' '#GdtConcrete' '#GdtMarsh' '#GdtBeach' '#GdtSeabed' '#GdtDead'  A3 1.66: '#Default' '#Water' '#SurfRoadDirt' '#SurfRoadConcrete' '#SurfRoadTarmac' '#SurfWood' '#SurfMetal' '#SurfRoofTin' '#SurfRoofTiles' '#SurfIntWood' '#SurfIntConcrete' '#SurfIntTiles' '#SurfIntMetal' '#SurfWater' '#TEST_SurfNormal' '#GdtStratisConcrete' '#GdtStratisBeach' '#GdtStratisDirt' '#GdtStratisSeabedCluttered' '#GdtStratisSeabed' '#GdtStratisDryGrass' '#GdtStratisGreenGrass' '#GdtStratisRocky' '#GdtStratisThistles' '#GdtStratisForestPine' '#GdtRubble' '#GdtForestPine' '#GdtConcrete' '#GdtSoil' '#GdtBeach' '#GdtRock' '#GdtDead' '#GdtDirt' '#GdtDesert' '#GdtGrassGreen' '#GdtGrassDry' '#GdtGrassWild' '#GdtWeed' '#GdtWildField' '#GdtThorn' '#GdtStony' '#GdtStonyThistle' '#GdtMud' '#GdtMarsh' '#GdtSeabed' '#concrete' '#concrete_out' '#concrete_inside' '#dirtrunway' '#road' '#floor' '#floor_inside' '#carpet_inside' '#carpet' '#mud' '#concrete_hall' '#stones' '#cardboard' '#lino' '#steel' '#trash' '#parquet' '#sand' '#metalPlate' '#woodenFloor' '#planks' '#planks_inside' '#grid' '#rubble' '#BuildingRubble' '#tiling' '#wavyMetal' '#GdtVRsurface01' '#surf_metal' '#surf_roadconcrete' '#surf_roaddirt' '#surf_roadtarmac' '#surf_rooftiles' '#surf_rooftin' '#surf_wood' '#surfint_concrete' '#surfint_metal' '#surfint_tiles' '#surfint_wood' '#road_exp' '#sand_exp' '#SurfRoadDirt_exp' '#SurfRoadConcrete_exp' '#SurfRoadTarmac_exp' '#SurfTrailDirt_exp' '#concrete_exp' '#concrete_in_exp' '#concrete_hall_exp' '#floor_exp' '#floor_in_exp' '#stones_exp' '#planks_in_exp' '#planks_exp' '#softwood_in_exp' '#steel_exp' '#metalPlate_exp' '#metalPlatePressed_exp' '#metalPlate_in_exp' '#grid_exp' '#wavyMetal_exp' '#carpet_exp' '#carpet_in_exp' '#mat_in_exp' '#mud_exp' '#straw_exp' '#cardboard_exp' '#lino_in_exp' '#lino_exp' '#roof_tiles_exp' '#trash_exp' '#rubble_exp' '#BuildingRubble_exp' '#GdtGrassShort' '#GdtGrassTall' '#GdtGrassLong' '#GdtVolcanoBeach' '#GdtRedDirt' '#GdtAsphalt' '#GdtField' '#GdtForest' '#GdtVolcano' '#GdtCliff'", syntax: "String = surfaceType position", returns: "String", example: "_surface = surfaceType [4500, 4500];", game: "Armed Assault", version: 1 },
    { id: 1886, name: "swimInDepth", description: "Sets the target depth level for swimming soldier.", syntax: "unit swimInDepth value", returns: "value: Number", example: "soldier swimInDepth -20", game: "Arma 3", version: 0.5 },
    { id: 1887, name: "switch", description: "Creates a switch type that can be used inside a switch do -block", syntax: "switch arg", returns: "Switch Type", example: "_mySwitch = switch 'Test'; _mySwitch do {/*Something*/};", game: "Armed Assault", version: 1 },
    { id: 1888, name: "switchableUnits", description: "Returns a list of units accessible through Team Switch. Command is relative to the client on which it is executed and will only show playable units for the same side as player's group + player himself. The playableUnits command on the other hand will show all playable units regardless of the side. Exception is SP, where playable units from all sides will be accessible via switchableUnits.   Dead units are automatically removed from the switchableUnits array. Playable units that are already occupied by other human players will also not show in switchableUnits array.", syntax: "switchableUnits", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 1889, name: "switchAction", description: "When used on a person, the given action is started immediately (there is no transition). Use switchmove '' to switch back to the default movement if there is no transition back, otherwise the person may be stuck.", syntax: "soldier switchAction action", returns: "action: String", example: "soldierOne switchAction 'SitDown'", game: "Arma 2", version: 1 },
    { id: 1890, name: "switchCamera", description: "Switch camera to given vehicle / camera. Mode is one of:   'INTERNAL': 1st person  'GUNNER': optics / sights  'EXTERNAL': 3rd person  'GROUP': group  'CARGO': same as 'INTERNAL'  If you switch to a unit in a vehicle, this command uses the correct turret. Control over the unit is not given to the player. Use selectPlayer or a combination of switchCamera and remoteControl to achieve this.", syntax: "target switchCamera mode", returns: "mode: String", example: "player switchCamera 'Gunner';", game: "Operation Flashpoint", version: 1 },
    { id: 1891, name: "switchGesture", description: "When used on a person,the given move is started immediately (there is no transition).", syntax: "soldier switchGesture moveName", returns: "moveName: String  -", example: "soldierOne switchGesture 'Wave';", game: "Arma 2", version: 1 },
    { id: 1892, name: "switchLight", description: "Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class 'StreetLamp' only.", syntax: "lamp switchLight mode", returns: "mode: String - Mode can be: 'ON', 'OFF' or 'AUTO' (Lamp is on only during nighttime , default)", example: "(object 12345) switchLight 'off'", game: "Operation Flashpoint", version: 1 },
    { id: 1893, name: "switchMove", description: "When used on a person, the given move is started immediately (there is no transition). Use switchmove '' to switch back to the default movement if there is no transition back, otherwise the person may be stuck.  List of moves in ArmA 2  List of moves in Armed Assault  List of moves in Operation Flashpoint: Resistance", syntax: "person switchmove movename", returns: "movename: String", example: "_loon1 switchMove 'FXStandDip'", game: "Operation Flashpoint", version: 1 },
    { id: 1894, name: "synchronizedObjects", description: "Return the list of objects synchronized with the given unit.", syntax: "synchronizedObjects unit", returns: "Array", example: "_objects = synchronizedObjects _logic;", game: "Arma 2", version: 1 },
    { id: 1895, name: "synchronizedTriggers", description: "Returns the list of triggers synchronized with a given waypoint.", syntax: "synchronizedTriggers waypoint", returns: "Array", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1896, name: "synchronizedWaypoints", description: "Returns the list of waypoints synchronized with a given trigger or waypoint.", syntax: "synchronizedWaypoints obj", returns: "Array", example: "null", game: "Arma 3", version: 0.5 },
    { id: 1897, name: "synchronizeObjectsAdd", description: "Add given objects to the unit's list of synchronized objects.", syntax: "unit synchronizeObjectsAdd [objects]", returns: "[objects]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1898, name: "synchronizeObjectsRemove", description: "Remove given objects from the unit's list of synchronized objects.", syntax: "unit synchronizeObjectsRemove [objects]", returns: "[objects]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 1899, name: "synchronizeTrigger", description: "Synchronizes the trigger with zero or more waypoints.", syntax: "trigger synchronizeTrigger [waypoint1, waypoint2, ...]", returns: "[waypoint1, waypoint2, ...]: Array of waypoints to synchronize with trigger. Array can be empty to unset.", example: "_trigger synchronizeTrigger []", game: "Arma 2", version: 1 },
    { id: 1900, name: "synchronizeWaypoint", description: "Synchronizes the waypoint with other waypoints. Each waypoint is given as an array [group, index].", syntax: "waypoint synchronizeWaypoint [waypoint1, waypoint2, ...]", returns: "[waypoint1, waypoint2, ...]: Array of waypoints", example: "[_group1, 2] synchronizeWaypoint [ [_group2, 3] ];", game: "Armed Assault", version: 1 },
    { id: 1901, name: "synchronizeWaypoint trigger", description: "Synchronizes a trigger with other waypoints. Each waypoint is given as an array [group, index].", syntax: "trigger synchronizeWaypoint [waypoint1, waypoint2, ...]", returns: "[waypoint1, waypoint2, ...]: Array of waypoints", example: "_myTrigger synchronizeWaypoint [ [_group2, 3] ];", game: "Armed Assault", version: 1 },
    { id: 1902, name: "systemChat", description: "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", syntax: "systemChat text", returns: "Nothing", example: "systemChat 'Hello world!';", game: "Arma 2: Operation Arrowhead", version: 1.63 },
    { id: 1903, name: "systemOfUnits", description: "Returns the currently selected system of units.  0: Metric  1: Mixed (ground vehicles use Metric / air vehicles use Imperial)  2: Imperial", syntax: "systemOfUnits", returns: "null", example: "_system = systemOfUnits;", game: "Take On Helicopters", version: 1 },
    { id: 1904, name: "tan", description: "Tangent of x, argument in Degrees.", syntax: "tan x", returns: "Number", example: "_tangent = tan 45", game: "Operation Flashpoint", version: 1 },
    { id: 1905, name: "targetKnowledge", description: "Returns unit's knowledge about target. The returned array includes information whether the target is   known by group  known by the unit  last time the target was seen by the unit  last time the target endangered the unit  target side  position error  target position", syntax: "unit targetKnowledge target", returns: "target: Object", example: "_allInfo = _soldierOne targetKnowledge _jeepOne;", game: "Arma 3", version: 1.5 },
    { id: 1906, name: "targets", description: "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.", syntax: "unit targets [enemyOnly, maxDistance, sides, maxAge, alternateCenter]", returns: "[enemyOnly, maxDistance, sides, maxAge, alternateCenter]: Array", example: "_targets = _unit targets [false, [east,sideEnemy], 300]; //all targets of east or renegade side in 300m", game: "Arma 3", version: 1.7 },
    { id: 1907, name: "targetsAggregate", description: "Aggregate candidates.", syntax: "[speaker, side, unit, place, time] targetsAggregate candidates", returns: "candidates: Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1908, name: "targetsQuery", description: "Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.", syntax: "enquirer targetsQuery [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]", returns: "[targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]: Array - Query", example: "_targets = player targetsQuery [objNull, sideUnknown, '', [], 0];", game: "Arma 2", version: 1 },
    { id: 1909, name: "taskAlwaysVisible", description: "Returns true if the task is flagged to be always visible or false if not.", syntax: "taskAlwaysVisible task", returns: "Bool", example: "_isAlwaysVisible = taskAlwaysVisible (currentTask player);", game: "Arma 3", version: 1.58 },
    { id: 1910, name: "taskChildren", description: "Return the child tasks of the specified task.", syntax: "taskChildren task", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1911, name: "taskCompleted", description: "Return if task is completed. (state Succeeded, Failed or Canceled)", syntax: "taskCompleted task", returns: "Boolean", example: "null", game: "Arma 2", version: 1 },
    { id: 1912, name: "taskCustomData", description: "Returns custom data attached to the local task or an empty array if there are no custom data attached.", syntax: "taskCustomData task", returns: "Array of string - iconPath, iconText, descriptionText", example: "null", game: "Arma 3", version: 1.58 },
    { id: 1913, name: "taskDescription", description: "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].", syntax: "taskDescription task", returns: "Array", example: "_taskDescArray = taskDescription _task;", game: "Arma 2", version: 1 },
    { id: 1914, name: "taskDestination", description: "Returns the position of the task (as specified by destination parameter in config).", syntax: "taskDestination task", returns: "Array (A3 1.28 Returns Nothing if identity is taskNull)", example: "if (!isNull currentTask player) then {taskDestination currentTask player}; //return Position (Array)", game: "Arma 2", version: 1 },
    { id: 1915, name: "taskHint", description: "Shows info about new, changed or failed task. The text can contain several lines. \n is used to indicate the end of a line.          To maintain Arma 3 visual style, it's recommended to use BIS_fnc_showNotification instead.", syntax: "taskHint [hintText, [r, g, b, a], icon]", returns: "hintText: String", example: "taskhint ['Task failed!\nBad job!', [1, 0, 0, 1], 'taskFailed']", game: "Arma 2", version: 1 },
    { id: 1916, name: "taskMarkerOffset", description: "Returns model space position for the task marker", syntax: "taskMarkerOffset unit", returns: "Array - x, y, z", example: "null", game: "Arma 3", version: 1.58 },
    { id: 1917, name: "taskNull", description: "A non-existing Task. To compare non-existent tasks use isNull or isEqualTo:  taskNull == taskNull; // false  isNull taskNull; // true  taskNull isEqualTo taskNull; // true", syntax: "taskNull", returns: "null", example: "!isNull taskNull; // false", game: "Arma 2", version: 1 },
    { id: 1918, name: "taskParent", description: "Return the parent task of the specified task.", syntax: "taskParent task", returns: "Task", example: "null", game: "Arma 2", version: 1 },
    { id: 1919, name: "taskResult", description: "Send a result of the task to the task sender.", syntax: "taskResult task", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1920, name: "taskState", description: "Returns the current state of a task.   Possible return values are:  None  Created  Assigned  Succeeded  Failed  Canceled", syntax: "String = taskState  task", returns: "String - current state of task", example: "tskSomeTask = player createSimpleTask ['NewTask']; hint format['Taskstate: %1', taskState tskSomeTask];", game: "Arma 2", version: 1 },
    { id: 1921, name: "taskType", description: "Returns the type of the given task", syntax: "taskType task", returns: "String", example: "_type = taskType (currentTask player);", game: "Arma 3", version: 1.58 },
    { id: 1922, name: "teamMember", description: "Return an agent for given person.", syntax: "teamMember person", returns: "Team Member", example: "_agent = teamMember player;", game: "Arma 2", version: 1 },
    { id: 1923, name: "teamMemberNull", description: "A non-existent Team Member. To compare non-existent team members use isNull or isEqualTo:  teamMemberNull == teamMemberNull; // false  isNull teamMemberNull; // true  teamMemberNull isEqualTo teamMemberNull; // true", syntax: "teamMemberNull", returns: "if (_teamMember isEqualTo teamMemberNull) then { 	hint 'is null member'; };", example: "!isNull teamMemberNull; // false", game: "Arma 2", version: 1 },
    { id: 1924, name: "teamName", description: "Return a name of given team.", syntax: "teamName team", returns: "String", example: "_name = teamName _team;", game: "Arma 2", version: 1 },
    { id: 1925, name: "teams", description: "Return a list of teams in the current mission.", syntax: "teams", returns: "null", example: "_teams = teams;", game: "Arma 2", version: 1 },
    { id: 1926, name: "teamSwitch", description: "Invoke the Team Switch dialog (force it even when conditions are not met). There has to be at least one playable unit for team switch to work, and for this command to work in MP, respawn type in description.ext should be 5 (SIDE)", syntax: "teamSwitch", returns: "null", example: "_unit enableAI 'TEAMSWITCH';", game: "Armed Assault", version: 1 },
    { id: 1927, name: "teamSwitchEnabled", description: "Check if Team Switch is currently enabled.  Team Switch is enabled by default.", syntax: "Boolean = teamSwitchEnabled", returns: "null", example: "null", game: "Armed Assault", version: 1 },
    { id: 1928, name: "teamType", description: "Returns a type of given team.", syntax: "teamType team", returns: "String", example: "_type = teamType _team;", game: "Arma 2", version: 1 },
    { id: 1929, name: "terminate", description: "Terminate (abort) spawned or execVM'd script. Note: The given script will not terminate immediately upon terminate command execution, it will do so the next time the script is processed by the scheduler.", syntax: "terminate scriptHandle", returns: "Nothing", example: "_script = [] execVM 'script.sqf'; sleep 5; terminate _script; hint ''script.sqf' has been terminated after 5 seconds';", game: "Armed Assault", version: 1 },
    { id: 1930, name: "terrainIntersect", description: "Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain. For ASL variant see terrainIntersectASL", syntax: "terrainIntersect [pos1, pos2]", returns: "pos1: Array - start position in format PositionAGL", example: "_intersects = terrainIntersect [getPos player, getPos chopper];", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1931, name: "terrainIntersectASL", description: "Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain. For AGL variant, see terrainIntersect", syntax: "terrainIntersectASL [pos1, pos2]", returns: "pos1: Array - start position in format PositionASL", example: "_intersects = terrainIntersectASL [getPosASL player, getPosASL chopper];", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 1932, name: "terrainIntersectAtASL", description: "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL, only returns intersect position instead of Boolean", syntax: "terrainIntersectAtASL [pos1, pos2]", returns: "pos1: Array - start position in format PositionASL", example: "_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];", game: "Arma 3", version: 1.68 },
    { id: 1933, name: "text", description: "Creates a structured text containing the given plain text if argument is String or returns location's text value if argument is Location (see Alt Syntax)", syntax: "text string", returns: "Structured Text", example: "_stxt2 = text 'Hello world.';", game: "Armed Assault", version: 1 },
    { id: 1934, name: "textLog", description: "Dump argument value to debugging output.           This command is non-functional in the retail version", syntax: "textLog anything", returns: "Nothing", example: "textLog player", game: "Operation Flashpoint", version: 1 },
    { id: 1935, name: "textLogFormat", description: "Debugging output.          This command is non-functional in the retail version", syntax: "textLogFormat [format, arg1, arg2, ...]", returns: "arg1: Any Value", example: "null", game: "Arma 2", version: 1.05 },
    { id: 1936, name: "tg", description: "Identical to tan", syntax: "tg x", returns: "Number", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1937, name: "then", description: "First or second element of array is executed depending on result of if condition. Result of the expression executed is returned as a result (result may be Nothing).", syntax: "if then else", returns: "else: Code or Array with 2 Code elements. See else.", example: "if (a > b) then { c = 1 };", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 1938, name: "throw", description: "Throws an exception. The exception is processed by first catch block. This command will terminate further execution of the code.    NOTE: Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the if statement before it, as shown in example 3.", syntax: "throw expression", returns: "Nothing", example: "try {throw 'invalid argument'} catch {hint str _exception};", game: "Armed Assault", version: 1 },
    { id: 1939, name: "time", description: "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime.", syntax: "time", returns: "Posted on January 5, 2007 - 12:24", example: "_future = time + 30; waitUntil {time >= _future};  /* continue after 30 seconds... */", game: "Operation Flashpoint", version: 1 },
    { id: 1940, name: "timeMultiplier", description: "Returns the value set with setTimeMultiplier.", syntax: "timeMultiplier", returns: "null", example: "_multiplier = timeMultiplier;", game: "Arma 3", version: 1.26 },
    { id: 1941, name: "titleCut", description: "this command was obsoleted, use cutText instead.", syntax: "titleCut [text, type, speed]", returns: "text: String", example: "titleCut ['Hello, how are you?','Plain Down',3];", game: "Operation Flashpoint", version: 1 },
    { id: 1942, name: "titleFadeOut", description: "Terminate the title effect and set duration of the fade out phase to the given time.", syntax: "titleFadeOut duration", returns: "Nothing", example: "titleText ['Hi', 'plain']; titleFadeOut 2", game: "Armed Assault", version: 1.05 },
    { id: 1943, name: "titleObj", description: "Shows object defined in global config in CfgTitles. Type may be one of:  'PLAIN'  'PLAIN DOWN'  'BLACK'  'BLACK FADED'  'BLACK OUT'  'BLACK IN'  'WHITE OUT'  'WHITE IN' See Title Effect Type for more information about these types.", syntax: "titleObj [class, type, speed, showOnMap]", returns: "class: String", example: "titleObj ['BISLogo', 'PLAIN']", game: "Operation Flashpoint", version: 1 },
    { id: 1944, name: "titleRsc", description: "Resource title - Resource can be defined in Description.ext Also see cutRsc, with these two commands you can show two different resources at once.", syntax: "titleRsc [text, type, speed]", returns: "text: String - the class name of the resource. ('Default' will remove the current resource.)", example: "null", game: "Operation Flashpoint", version: 1 },
    { id: 1945, name: "titleText", description: "Displays text across the screen. If used along with cutText two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using '\n' new line characters: titleText ['line1\nline2\nline3', 'PLAIN'];", syntax: "titleText [text, type, speed]", returns: "type: String- Possible Title Effect Types:  • 'PLAIN'  • 'PLAIN DOWN'  • 'BLACK'  • 'BLACK FADED'  • 'BLACK OUT'  • 'BLACK IN'  • 'WHITE OUT'  • 'WHITE IN'", example: "titleText ['Show this text', 'PLAIN']; titleText ['Your message', 'BLACK', 2];", game: "Operation Flashpoint", version: 1 },
    { id: 1946, name: "to", description: "Continue sequence of for var construct. It sets the end value of the index variable", syntax: "forType to b", returns: "b: Number", example: "for '_x' from 10 to 20 do {/* Do something*/}", game: "Armed Assault", version: 1 },
    { id: 1947, name: "toArray", description: "Converts the supplied String into an Array of Numbers.   The numbers in the created array are the decimal Unicode representations of characters.", syntax: "toArray string", returns: "Array", example: "hint format['%1',toArray('AaŒ')]", game: "Armed Assault", version: 1.09 },
    { id: 1948, name: "toFixed", description: "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()   NOTE: Converted number is never presented in scientific notation unlike with other number to string commands. Also Arma's default string conversion limits numbers to 6 significant figures, whereas with this command it is possible to preserve some extra precision. str (pi/100000); //'3.14159e-005' - scientific notation (pi/100000) toFixed 10; //'0.0000314159' - no scientific notation str pi; //'3.14159' - 6 significant figures (default) pi toFixed 6; //'3.141593' - forced to 7 significant figures pi toFixed 7; //'3.1415927' - forced to 8 significant figures", syntax: "number toFixed decimals", returns: "decimals: Number - number of decimals to display (range 0-20)", example: "str (pi/100000); //'3.14159e-005' - scientific notation (pi/100000) toFixed 10; //'0.0000314159' - no scientific notation str pi; //'3.14159' - 6 significant figures (default) pi toFixed 6; //'3.141593' - forced to 7 significant figures pi toFixed 7; //'3.1415927' - forced to 8 significant figures", game: "Arma 3", version: 1.66 },
    { id: 1949, name: "toLower", description: "Converts the supplied string to all lowercase characters.", syntax: "toLower string", returns: "String", example: "hint toLower('AaBb1')", game: "Armed Assault", version: 1.09 },
    { id: 1950, name: "toString", description: "Converts the supplied Array of Numbers into a String.   The numbers in the array to be converted are the decimal Unicode representations of characters.", syntax: "toString array", returns: "String", example: "hint toString [65,97,338];", game: "Armed Assault", version: 1.09 },
    { id: 1951, name: "toUpper", description: "Converts the supplied string to all uppercase characters.", syntax: "toUpper string", returns: "String", example: "hint toUpper('AaBb1')", game: "Armed Assault", version: 1.09 },
    { id: 1952, name: "triggerActivated", description: "Returns true if the trigger has been activated.  Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerActivated trigger", returns: "Boolean", example: "if (triggerActivated trg1) then {     // Code };", game: "Arma 2", version: 1 },
    { id: 1953, name: "triggerActivation", description: "Returns trigger activation in the form [by, type, repeating].   Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerActivation trigger", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1954, name: "triggerArea", description: "Returns currently monitored trigger area. The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.    NOTE: Since Arma 3 v1.59.135137, triggerArea returns 3rd dimension for the monitored area. If height is not set, the value for it would be -1;", syntax: "triggerArea trigger", returns: "Array in format [a, b, angle, isRectangle, c], where:  a - trigger area X size / 2  b - trigger area Y size / 2  angle  isRectangle  c - trigger area Z size / 2        (since Arma 3 v1.59.135137)", example: "_area = triggerArea sensor1; // result is [200, 120, 45, false]", game: "Arma 2", version: 1 },
    { id: 1955, name: "triggerAttachedVehicle", description: "Returns vehicle attached to the trigger (for example using triggerAttachVehicle).  Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerAttachedVehicle trigger", returns: "Object", example: "return = triggerAttachedVehicle triggerName;", game: "Arma 2", version: 1 },
    { id: 1956, name: "triggerAttachObject", description: "Assigns a static object to the trigger. The activation source is changed to 'STATIC'.", syntax: "triggerName triggerAttachObject objectId", returns: "objectId: Number", example: "_trigger triggerAttachObject 1234;", game: "Armed Assault", version: 1 },
    { id: 1957, name: "triggerAttachVehicle", description: "Specifies the entity which will activate the selected trigger.  If [] is given, the trigger is decoupled from the assigned vehicle (example 2). If the activation source is 'VEHICLE', 'GROUP', 'LEADER' or 'MEMBER', it's changed to 'NONE'.  If [vehicle] is given, the trigger is coupled to the vehicle or its group.  When the source is 'GROUP', 'LEADER' or 'MEMBER', it's coupled to the group, otherwise it's coupled to the vehicle and the source is changed to 'VEHICLE'.", syntax: "triggerName triggerAttachVehicle objects", returns: "objects: Array", example: "trigger triggerAttachVehicle [player];", game: "Armed Assault", version: 1 },
    { id: 1958, name: "triggerDynamicSimulation", description: "Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation. If false dynamically disabled entities will not be activated by unit presence", syntax: "unit triggerDynamicSimulation trigger", returns: "trigger: Boolean", example: "player triggerDynamicSimulation false;", game: "Arma 3", version: 1.68 },
    { id: 1959, name: "triggerStatements", description: "Returns trigger statements in the form [cond, activ, desactiv].   Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerStatements trigger", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1960, name: "triggerText", description: "Returns trigger text.  Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerText trigger", returns: "String", example: "result = triggerText triggerName;", game: "Arma 2", version: 1 },
    { id: 1961, name: "triggerTimeout", description: "Returns trigger timeout in the form [min, mid, max, interruptable].  Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerTimeout trigger", returns: "Array", example: "null", game: "Arma 2", version: 1 },
    { id: 1962, name: "triggerTimeoutCurrent", description: "Returns trigger timeout or -1 if countdown is not in progress.   Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerTimeoutCurrent trigger", returns: "Number - time remaining before trigger activation.", example: "_remaining = triggerTimeoutCurrent _trigger;", game: "Arma 3", version: 1.08 },
    { id: 1963, name: "triggerType", description: "Returns trigger type (see setTriggerType).   Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", syntax: "triggerType trigger", returns: "String", example: "_type = triggerType tr1;", game: "Arma 2", version: 1 },
    { id: 1964, name: "try", description: "Defines a try-catch structure. This sets up an exception handling block. Any thrown exception in a try block is caught in a catch block. The structured exception block has following form:  try //begin of try-catch block    { //block, that can throw exception }   catch   { //block, that process an exception. Exception is described in _exception variable };", syntax: "try code", returns: "Exception Type", example: "try //begin of try-catch block    { //block, that can throw exception }   catch   { //block, that process an exception. Exception is described in _exception variable };", game: "Armed Assault", version: 1 },
    { id: 1965, name: "turretLocal", description: "Checks if a turret is local.     Some info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle.", syntax: "vehicle turretLocal turretPath", returns: "turretPath: Array", example: "_isLocal = vehicle player turretLocal [0];", game: "Arma 3", version: 1.32 },
    { id: 1966, name: "turretOwner", description: "Returns id of the owner of the turret. On clients always returns 0.    Some info on turrets: A vehicle turret will change locality when player gunner gets in it, just like vehicle changes locality when player driver gets in it. Many commands for turrets work only where turret is local. When gunner leaves turret it is supposed to change locality to the locality of the vehicle. A vehicle can have one owner while turrets have different owners.", syntax: "vehicle turretOwner turretPath", returns: "turretPath: Array", example: "_ownerId = vehicle player turretOwner [0];", game: "Arma 3", version: 1.38 },
    { id: 1967, name: "turretUnit", description: "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57.135045", syntax: "vehicle turretUnit turretpath", returns: "turretpath: Array", example: "_vehicle turretUnit _thisTurret", game: "Arma 2", version: 1 },
    { id: 1968, name: "tvAdd", description: "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.", syntax: "tvAdd [idc, pathParent, text]", returns: "idc: Number", example: "_index = _ctrl tvAdd [[], 'Parent Item'];", game: "Arma 3", version: 0.74 },
    { id: 1969, name: "tvClear", description: "Removes all items from Tree View with given idc.", syntax: "tvClear idc", returns: "Nothing", example: "tvClear 101;", game: "Arma 3", version: 0.74 },
    { id: 1970, name: "tvCollapse", description: "Collapses tree item pointed to by the path. IDC means id of parent Tree View.", syntax: "tvCollapse [idc, path]", returns: "idc: Number", example: "tvCollapse [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1971, name: "tvCollapseAll", description: "Collapses all tree items for the given Tree View.", syntax: "tvCollapseAll idc", returns: "Nothing", example: "tvCollapseAll 101;", game: "Arma 3", version: 0.74 },
    { id: 1972, name: "tvCount", description: "Returns childrens count of item on given path. IDC means id of parent Tree View.", syntax: "tvCount [idc, [path]]", returns: "idc: Number", example: "tvCount [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1973, name: "tvCurSel", description: "Returns path to currently selected item. IDC means id of parent Tree View.", syntax: "tvCurSel idc", returns: "Array - Tree View Path of selected item", example: "tvCurSel 101;", game: "Arma 3", version: 0.74 },
    { id: 1974, name: "tvData", description: "Returns string data from item on given path. IDC means id of parent Tree View.", syntax: "tvData [idc, [path]]", returns: "idc: Number", example: "tvData [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1975, name: "tvDelete", description: "Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change.", syntax: "tvDelete [idc, path]", returns: "idc: Number", example: "tvDelete [101, [0, 0]];", game: "Arma 3", version: 0.74 },
    { id: 1976, name: "tvExpand", description: "Expands tree item pointed to by the path. IDC means id of parent Tree View.", syntax: "tvExpand [idc, path]", returns: "idc: Number", example: "tvExpand [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1977, name: "tvExpandAll", description: "Expands all tree items for the given Tree View.", syntax: "tvExpandAll idc", returns: "Nothing", example: "tvExpandAll 101;", game: "Arma 3", version: 0.74 },
    { id: 1978, name: "tvPicture", description: "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.", syntax: "tvPicture [idc, [path]]", returns: "idc: Number", example: "tvPicture [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1979, name: "tvSetColor", description: "Sets text color on given Tree View Item", syntax: "tvSetColor [idc, path, color]", returns: "idc: Number", example: "tvSetColor [101, [0,0], [1,0,0,1]];", game: "Arma 3", version: 0.74 },
    { id: 1980, name: "tvSetCurSel", description: "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)", syntax: "tvSetCurSel [idc, path]", returns: "idc: Number", example: "tvSetCurSel [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1981, name: "tvSetData", description: "Sets string data to item on given path. IDC means id of parent Tree View.", syntax: "tvSetData [idc, [path], data]", returns: "idc: Number", example: "tvSetData [101, [0], 'Test data'];", game: "Arma 3", version: 0.74 },
    { id: 1982, name: "tvSetPicture", description: "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.", syntax: "tvSetPicture [idc, path, name]", returns: "idc: Number", example: "tvSetPicture [101, [0], 'picture'];", game: "Arma 3", version: 0.74 },
    { id: 1983, name: "tvSetPictureColor", description: "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.", syntax: "tvSetPictureColor [idc, path, color]", returns: "path: Array - Array containing path numbers.", example: "tvSetPictureColor [101, [0,2], [1,0,1,1]];", game: "Arma 3", version: 0.74 },
    { id: 1984, name: "tvSetPictureColorDisabled", description: "Sets the color of left picture of a tree item defined by path when item is disabled", syntax: "control tvSetPictureColorDisabled [path, color]", returns: "[path, color]: Array", example: "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]", game: "Arma 3", version: 1.62 },
    { id: 1985, name: "tvSetPictureColorSelected", description: "Sets the color of the left picture of a tree item defined by path when item is selected", syntax: "control tvSetPictureColorSelected [path, color]", returns: "[path, color]: Array", example: "_control tvSetPictureColorSelected [[0], [1,0,1,1]]", game: "Arma 3", version: 1.62 },
    { id: 1986, name: "tvSetPictureRight", description: "Sets right picture on the tree view item defined by path", syntax: "tvSetPictureRight [idc, path, name]", returns: "idc: Number", example: "tvSetPictureRight [101, [0], 'picture'];", game: "Arma 3", version: 1.62 },
    { id: 1987, name: "tvSetPictureRightColor", description: "Sets color of the right picture on the tree view item defined by path", syntax: "tvSetPictureRightColor [idc, path, color]", returns: "idc: Number", example: "tvSetPictureRightColor [101, [0], [1,0,1,1]];", game: "Arma 3", version: 1.62 },
    { id: 1988, name: "tvSetPictureRightColorDisabled", description: "Sets the color of the right picture of a tree item defined by path when item is disabled", syntax: "control tvSetPictureRightColorDisabled [path, color]", returns: "[path, color]: Array", example: "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]", game: "Arma 3", version: 1.62 },
    { id: 1989, name: "tvSetPictureRightColorSelected", description: "Sets the color of the right picture of a tree item defined by path when item is selected", syntax: "control tvSetPictureRightColorSelected [path, color]", returns: "[path, color]: Array", example: "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]", game: "Arma 3", version: 1.62 },
    { id: 1990, name: "tvSetText", description: "Sets string text to item on given path. IDC means id of parent Tree View.", syntax: "tvSetText [idc, path, text]", returns: "idc: Number", example: "tvSetText [101, [0], 'Test data'];", game: "Arma 3", version: 1.56 },
    { id: 1991, name: "tvSetTooltip", description: "Sets the tooltip text associated with the specified tree view path.", syntax: "tvSetTooltip [idc, path, text]", returns: "idc: Number - IDC of the tree view control.", example: "tvSetTooltip [101, [0,2], 'This is a tooltip'];", game: "Arma 3", version: 0.74 },
    { id: 1992, name: "tvSetValue", description: "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer", syntax: "tvSetValue [idc, [path], val]", returns: "idc: Number", example: "tvSetValue [101, [0], 555];", game: "Arma 3", version: 0.74 },
    { id: 1993, name: "tvSort", description: "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.   Param reversed is optional.", syntax: "control tvSort [path, reversed]", returns: "[path, reversed]: Array", example: "control tvSort [[0], true];", game: "Arma 3", version: 0.74 },
    { id: 1994, name: "tvSortByValue", description: "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.", syntax: "control tvSortByValue [path, reversed]", returns: "[path, reversed]: Array", example: "control tvSortByValue [[0], false];", game: "Arma 3", version: 0.74 },
    { id: 1995, name: "tvText", description: "Returns shown text in the item on given path. IDC means id of parent Tree View.", syntax: "tvText [idc, path]", returns: "idc: Number", example: "tvText [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1996, name: "tvTooltip", description: "Gets the tooltip text associated with the specified tree view path.", syntax: "tvTooltip [idc, path]", returns: "idc: Number - IDC of the tree view control.", example: "_text = tvTooltip [101, [0,2]];", game: "Arma 3", version: 0.74 },
    { id: 1997, name: "tvValue", description: "Returns scalar data from item on given path. IDC means id of parent Tree View.", syntax: "tvValue [idc, [path]]", returns: "idc: Number", example: "tvValue [101, [0]];", game: "Arma 3", version: 0.74 },
    { id: 1998, name: "type", description: "Returns a string of a location's class name.", syntax: "type location", returns: "String", example: "null", game: "Armed Assault", version: 1.08 },
    { id: 1999, name: "typeName", description: "Returns the data type of an expression.   The type is returned as on of the following all-uppercase strings:  'ARRAY'  'BOOL'  'CODE'  'CONFIG'  'CONTROL'  'DISPLAY'  'GROUP'  'LOCATION'  'OBJECT'  'SCALAR'  'SCRIPT'  'SIDE'  'STRING'  'TEXT'  'TEAM_MEMBER'  'NAMESPACE' They represent the available data types in ArmA.", syntax: "typeName anything", returns: "String", example: "_msg = 'hello'; _result = typeName _msg;  //_result will be 'STRING'", game: "Armed Assault", version: 1 },
    { id: 2000, name: "typeOf", description: "Returns the config class name of given object or '' if object doesn't have config class.", syntax: "typeOf object", returns: "String", example: "if (typeOf vehicle player == 'B_Heli_Light_01_armed_F') then {hint 'Player is in AH-9 Pawnee'};", game: "Operation Flashpoint: Resistance", version: 1.9 },
    { id: 2001, name: "UAVControl", description: "Returns array with current operator of UAV and his vehicle role in UAV.", syntax: "UAVControl uav", returns: "Array - in format [unit, vehicleRole], where:  unit: Object - UAV operator  vehicleRole: String - vehicle role of the operator in UAV, for example: 'DRIVER' or 'GUNNER'", example: "UAVControl uav;", game: "Arma 3", version: 1 },
    { id: 2002, name: "uiNamespace", description: "Returns the global namespace attached to user interface.", syntax: "uiNamespace", returns: "^The same can be said with parsingNamespace.", example: "uiNamespace setVariable ['LIB_interruptDisplay', _display];", game: "Arma 2", version: 1 },
    { id: 2003, name: "uiSleep", description: "Suspend execution of script for given uitime.  uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.", syntax: "uiSleep delay", returns: "Nothing", example: "uiSleep 0.5", game: "Arma 2", version: 1.05 },
    { id: 2004, name: "unassignCurator", description: "Unassign curator (will destroy both sides of connection).", syntax: "unassignCurator curatorObj", returns: "Nothing", example: "unassignCurator myCurator;", game: "Arma 3", version: 1.16 },
    { id: 2005, name: "unassignItem", description: "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.", syntax: "unit unassignItem item", returns: "item: String", example: "bluforUnit unassignItem 'NVGoggles'; bluforUnit removeItem 'NVGoggles'; opforUnit unassignItem 'NVGoggles_OPFOR'; opforUnit removeItem 'NVGoggles_OPFOR'; independentUnit unassignItem 'NVGoggles_INDEP'; independentUnit removeItem 'NVGoggles_INDEP';", game: "Arma 3", version: 0.5 },
    { id: 2006, name: "unassignTeam", description: "Unassigns the unit (in the case of a vehicle its commander unit) from his team. This is equal to unit assignTeam 'MAIN'.", syntax: "unassignTeam vehicleName", returns: "Nothing", example: "null", game: "Armed Assault", version: 1 },
    { id: 2007, name: "unassignVehicle", description: "Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit. If the unit is currently in that vehicle, the group leader will issue an order to disembark.", syntax: "unassignVehicle unitName", returns: "Nothing", example: "unassignVehicle player;", game: "Operation Flashpoint", version: 1 },
    { id: 2008, name: "underwater", description: "Return whether object is fully underwater. From Arma 3 v1.66, this also works for units.", syntax: "underwater object", returns: "Boolean", example: "_isUnderwater = underwater player;", game: "Arma 3", version: 0.5 },
    { id: 2009, name: "uniform", description: "Returns name of uniform.", syntax: "uniform unit", returns: "String", example: "_uniform = uniform _unit", game: "Arma 3", version: 0.5 },
    { id: 2010, name: "uniformContainer", description: "Returns a cargo container of a unit's uniform.", syntax: "uniformContainer unit", returns: "Object - cargo container or <NULL-object>", example: "hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d", game: "Arma 3", version: 1.04 },
    { id: 2011, name: "uniformItems", description: "Get array with all items (of any kind, even weapons) from uniform.", syntax: "uniformItems unit", returns: "Array", example: "uniformItems player;", game: "Arma 3", version: 0.5 },
    { id: 2012, name: "uniformMagazines", description: "Get array with all magazines from uniform of the given unit.", syntax: "uniformMagazines unit", returns: "Array", example: "uniformMagazines player;", game: "Arma 3", version: 0.5 },
    { id: 2013, name: "unitAddons", description: "Returns list with addons the unit belongs to.", syntax: "unitAddons className", returns: "Array - addon names", example: "hint str unitAddons typeOf player; //['A3_Characters_F_BLUFOR']", game: "Arma 3", version: 1 },
    { id: 2014, name: "unitAimPosition", description: "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.", syntax: "unitAimPosition unit", returns: "Array - position in format PositionAGL", example: "unitAimPosition player;", game: "Arma 3", version: 1.64 },
    { id: 2015, name: "unitAimPositionVisual", description: "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.", syntax: "unitAimPositionVisual unit", returns: "Array - position in format PositionAGL", example: "unitAimPositionVisual player;", game: "Arma 3", version: 1.64 },
    { id: 2016, name: "unitBackpack", description: "Returns unit's backpack", syntax: "unitBackpack unit", returns: "Object", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.51 },
    { id: 2017, name: "unitIsUAV", description: "Returns true if the unit type is UAV - coresponding to transport param 'isUAV'", syntax: "unitIsUAV unit", returns: "Bool - true when UAV", example: "null", game: "Arma 3", version: 1.64 },
    { id: 2018, name: "unitPos", description: "Return the unit position rules.   The return value is always 'Auto' unless the unit has gotten a setUnitPos command. In that case the value is the last stance the unit was ordered to.  Available modes are listed at setUnitPos.", syntax: "unitPos unit", returns: "String", example: "hint str unitPos _unit;", game: "Armed Assault", version: 1 },
    { id: 2019, name: "unitReady", description: "Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished.", syntax: "Boolean = unitReady unitName", returns: "Boolean", example: "_it = unitReady _soldierOne;", game: "Operation Flashpoint", version: 1 },
    { id: 2020, name: "unitRecoilCoefficient", description: "Returns recoil coefficient of a soldier.", syntax: "unitRecoilCoefficient soldier", returns: "Number", example: "_myRecoil = unitRecoilCoefficient player", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 2021, name: "units", description: "Returns an array with all the units in the group or group of the unit. For a destroyed object an empty array is returned.", syntax: "units groupOrunit", returns: "Array of Objects", example: "_myUnitCount = count units group player;", game: "Operation Flashpoint", version: 1 },
    { id: 2022, name: "unitsBelowHeight", description: "Returns units in group/array below given height Above The Land (ATL). Current unit height ATL could be found with   _height = (getPosATL _unit) select 2;", syntax: "units unitsBelowHeight height", returns: "height: Number - height above terrain level (PositionATL)", example: "_allOnGroudUnits = group player unitsBelowHeight 10;", game: "Arma 2", version: 1.04 },
    { id: 2023, name: "unlinkItem", description: "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.", syntax: "unit unlinkItem item", returns: "item: String", example: "bluforUnit unlinkItem 'NVGoggles'; opforUnit unlinkItem 'NVGoggles_OPFOR'; independentUnit unlinkItem 'NVGoggles_INDEP';", game: "Arma 3", version: 1 },
    { id: 2024, name: "unlockAchievement", description: "Unlock the given achievement.", syntax: "unlockAchievement name", returns: "Boolean", example: "null", game: "Arma 2", version: 1 },
    { id: 2025, name: "unregisterTask", description: "Unregister a task type.", syntax: "teamMember unregisterTask name", returns: "name: String", example: "player unregisterTask taskName;", game: "Arma 2", version: 1 },
    { id: 2026, name: "updateDrawIcon", description: "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.", syntax: "map updateDrawIcon [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]", returns: "[object,string identifier,color,offset,width,height,maintain size?,angle,shadow]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 2027, name: "updateMenuItem", description: "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.", syntax: "map updateMenuItem [menu item index,text,command]", returns: "[menu item index,text,command]: Array -", example: "null", game: "Arma 2", version: 1 },
    { id: 2028, name: "updateObjectTree", description: "Update the editor object tree.", syntax: "updateObjectTree map", returns: "Nothing", example: "null", game: "Arma 2", version: 1 },
    { id: 2029, name: "useAISteeringComponent", description: "Enable the new AI driving, used to test the old and new AI driving.", syntax: "useAISteeringComponent  state", returns: "Nothing", example: "useAISteeringComponent true", game: "Arma 3", version: 1.6 },
    { id: 2030, name: "useAudioTimeForMoves", description: "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.", syntax: "soldier useAudioTimeForMoves toggle", returns: "toggle: Boolean", example: "player useAudioTimeForMoves true", game: "Arma 2", version: 1 },
    { id: 2031, name: "valuea plus valueb", description: "valuea and valueb are concatenated", syntax: "valuea + valueb", returns: "valueb: String or Array", example: "String concatentation - 'I' + ' am' + ' blind'", game: "Operation Flashpoint", version: 1 },
    { id: 2032, name: "vectorAdd", description: "Adds two 3D vectors.", syntax: "vector1 vectorAdd vector2", returns: "vector2: Array", example: "hint str (velocity unit1 vectorAdd velocity unit2);", game: "Arma 3", version: 1.22 },
    { id: 2033, name: "vectorCos", description: "Cosine of angle between two 3D vectors.", syntax: "vector1 vectorCos vector2", returns: "vector2: Array", example: "_cos = getPos player vectorCos [0,0,2];", game: "Arma 3", version: 1.22 },
    { id: 2034, name: "vectorCrossProduct", description: "Cross product of two 3D vectors.   In layman's terms, if you have a polygon (surface) defined by 3 points, you can find a normal to it (just like terrain surfaceNormal). To invert direction of the normal, swap arguments around.", syntax: "vector1 vectorCrossProduct vector2", returns: "vector2:  Array - in form [x, y, z]", example: "_vector = [1,1,1] vectorCrossProduct [2,2,2];", game: "Arma 3", version: 1.22 },
    { id: 2035, name: "vectorDiff", description: "Subtracts one 3D vector from another. (vector1 - vector2)", syntax: "vector1 vectorDiff vector2", returns: "vector2: Array", example: "hint str (velocity car vectorDiff velocity bike);", game: "Arma 3", version: 1.22 },
    { id: 2036, name: "vectorDir", description: "Return object's normalized direction vector in world space ([x,y,z]).   A unit facing North would return [0,1,0]  A unit facing East would return [1,0,0]  A unit facing South would return [0,-1,0]  A unit facing West would return [-1,0,0]", syntax: "vectorDir objectName", returns: "Array - format Vector3D", example: "_dirVector = vectorDir _unit;", game: "Armed Assault", version: 1 },
    { id: 2037, name: "vectorDirVisual", description: "Return object's normalized direction vector in world space ([x,y,z]) in render time scope.   A unit facing North would return [0,1,0]  A unit facing East would return [1,0,0]  A unit facing South would return [0,-1,0]  A unit facing West would return [-1,0,0]", syntax: "vectorDirVisual objectName", returns: "Array - format Vector3D", example: "_dirVector = vectorDirVisual _unit;", game: "Arma 3", version: 1.32 },
    { id: 2038, name: "vectorDistance", description: "Distance between two 3D vectors.", syntax: "vector1 vectorDistance vector2", returns: "vector2: Array", example: "_euclideanDist = getPosASL player vectorDistance [0,0,0];", game: "Arma 3", version: 1.22 },
    { id: 2039, name: "vectorDistanceSqr", description: "Squared distance between two 3D vectors.", syntax: "vector1 vectorDistanceSqr vector2", returns: "vector2: Array", example: "_distSqr = getPos player vectorDistanceSqr [0,0,2];", game: "Arma 3", version: 1.22 },
    { id: 2040, name: "vectorDotProduct", description: "Dot product of two 3D vectors.", syntax: "vector1 vectorDotProduct vector2", returns: "vector2: Array", example: "_dot = [1,0,1] vectorDotProduct [0,0,2];", game: "Arma 3", version: 1.22 },
    { id: 2041, name: "vectorFromTo", description: "Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized between given 2 points. To get a normal vector use vectorDiff.", syntax: "vector1 vectorFromTo vector2", returns: "vector2: Array", example: "[1,2,3] vectorFromTo [4,5,6]; //[0.57735,0.57735,0.57735]  //is the same as  vectorNormalized ([4,5,6] vectorDiff [1,2,3]); //[0.57735,0.57735,0.57735]", game: "Arma 3", version: 1.26 },
    { id: 2042, name: "vectorMagnitude", description: "Magnitude of a 3D vector.", syntax: "vectorMagnitude vector", returns: "Number", example: "_size = vectorMagnitude [0,3,4]; //5", game: "Arma 3", version: 1.22 },
    { id: 2043, name: "vectorMagnitudeSqr", description: "Squared magnitude of a 3D vector.", syntax: "vectorMagnitudeSqr vector", returns: "Number", example: "_sizeSqr = vectorMagnitudeSqr [0,3,4]; //25", game: "Arma 3", version: 1.22 },
    { id: 2044, name: "vectorMultiply", description: "Multiplies 3D vector by a scalar.", syntax: "vector vectorMultiply scalar", returns: "scalar: Number", example: "_newVector = [1,2,3] vectorMultiply 3; //[3,6,9]", game: "Arma 3", version: 1.22 },
    { id: 2045, name: "vectorNormalized", description: "Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well.", syntax: "vectorNormalized vector", returns: "Array", example: "vectorNormalized [12345,7890,38383]; //[0.300481,0.192045,0.934254] vectorMagnitude [0.300481,0.192045,0.934254]; //1", game: "Arma 3", version: 1.26 },
    { id: 2046, name: "vectorUp", description: "Return object's up vector in world Position coordinates ( [x, y, z] ).", syntax: "Array = vectorUp objectName", returns: "Array - format Position", example: "objVector = vectorUp myObject;", game: "Armed Assault", version: 1 },
    { id: 2047, name: "vectorUpVisual", description: "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.", syntax: "vectorUpVisual objectName", returns: "Array - format Position", example: "_vUp = vectorUpVisual vehicle player;", game: "Arma 3", version: 1.32 },
    { id: 2048, name: "vehicle", description: "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use objectParent", syntax: "vehicle unitName", returns: "Object", example: "? vehicle player != player : hint 'Player is in a vehicle'", game: "Operation Flashpoint", version: 1 },
    { id: 2049, name: "vehicleCargoEnabled", description: "Check if the vehicle has enabled transporting other vehicles or not.", syntax: "vehicleCargoEnabled vehicle", returns: "Boolean - returns true if the vehicle has enabled transporting other vehicles, and false if the vehicle has not enabled transporting other vehicles", example: "_canTransportVehicles = vehicleCargoEnabled blackfish; //returns true", game: "Arma 3", version: 1.62 },
    { id: 2050, name: "vehicleChat", description: "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)    Note: Object parameter must be a vehicle, not a player.  Note: If you are in a crew seat (i.e. driver, gunner or commander), then it will include that role in the chat name output (Eg: Driver (you_name): 'Message').", syntax: "vehicleName vehicleChat chatText", returns: "chatText: String - message to transmit", example: "vehicle player vehicleChat 'Show this text';", game: "Operation Flashpoint", version: 1.34 },
    { id: 2051, name: "vehicleRadio", description: "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).   Note:  When transmitting unit gets killed, transmission will be interrupted, however when receiving unit gets killed, the transmission continues to play.", syntax: "unit vehicleRadio radioName", returns: "radioName: String - class name from CfgRadio", example: "_soldierOne vehicleRadio 'messageOne';", game: "Operation Flashpoint", version: 1 },
    { id: 2052, name: "vehicleReceiveRemoteTargets", description: "Gets whether the vehicle can acquire targets via datalink from the Side center.", syntax: "vehicleReceiveRemoteTargets vehicle", returns: "Bool", example: "vehicleReceiveRemoteTargets (vehicle player);", game: "Arma 3", version: 1.7 },
    { id: 2053, name: "vehicleReportOwnPosition", description: "Gets whether the vehicle shares its own position via datalink with the Side center.", syntax: "vehicleReportOwnPosition vehicle", returns: "Bool", example: "vehicleReportOwnPosition (vehicle player);", game: "Arma 3", version: 1.7 },
    { id: 2054, name: "vehicleReportRemoteTargets", description: "Gets whether the vehicle shares acquired targets via datalink with the Side center.", syntax: "vehicleReportRemoteTargets vehicle", returns: "Bool", example: "vehicleReportRemoteTargets (vehicle player);", game: "Arma 3", version: 1.7 },
    { id: 2055, name: "vehicles", description: "Returns a list of all vehicles.", syntax: "vehicles", returns: "Posted on July 15, 2011", example: "_vehicles = vehicles;", game: "Armed Assault", version: 1 },
    { id: 2056, name: "vehicleVarName", description: "Returns the name of the variable which contains a primary editor reference to this object. This is the variable given in the Insert Unit dialog / name field, in the editor. It can be changed using setVehicleVarName.   If object refers to a vehicle that wasn't given a name in the editor, the return value is an empty string, ''.  Since it is possible to setVehicleVarName individually on each PC, the value of vehicleVarName returned will be local to the PC on which command is executed.", syntax: "vehicleVarName object", returns: "String", example: "hint vehicleVarName player;", game: "Armed Assault", version: 1 },
    { id: 2057, name: "velocity", description: "Return velocity (speed vector) of Unit as an array with format [x, y, z].  Units are in metres per second.", syntax: "velocity vehicleName", returns: "Array", example: "_vector = velocity jeep;", game: "Operation Flashpoint: Resistance", version: 1.8 },
    { id: 2058, name: "velocityModelSpace", description: "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.", syntax: "velocityModelSpace vehicle", returns: "Array", example: "velocityModelSpace _chopper; comment 'Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]';", game: "Arma 3", version: 0.5 },
    { id: 2059, name: "verifySignature", description: "Check if file is signed by any key present in game keys folders. Note: On client, it does not check against the keys accepted by server.", syntax: "Boolean = verifySignature filename", returns: "Boolean", example: "verifySignature '@MyAddon\Addons\SomeAddon.pbo';", game: "Armed Assault", version: 1 },
    { id: 2060, name: "vest", description: "Returns name of vest.", syntax: "vest unit", returns: "String", example: "_myVest = vest player;", game: "Arma 3", version: 0.5 },
    { id: 2061, name: "vestContainer", description: "Returns a cargo container of a unit's vest.", syntax: "vestContainer unit", returns: "Object - cargo container or <NULL-object>", example: "hint str vestContainer player; //2df7d600# 163942: dummyweapon.p3d", game: "Arma 3", version: 1.04 },
    { id: 2062, name: "vestItems", description: "Get array with all items (of any kind, even weapons) from vest.", syntax: "vestItems unit", returns: "Array", example: "vestItems player;", game: "Arma 3", version: 0.5 },
    { id: 2063, name: "vestMagazines", description: "Get array with all magazines from vest of the given unit.", syntax: "vestMagazines unit", returns: "Array", example: "vestMagazines player;", game: "Arma 3", version: 0.5 },
    { id: 2064, name: "viewDistance", description: "Returns the rendering distance.", syntax: "viewDistance", returns: "null", example: "hint ('my view distance is ' + str viewDistance + ' meters');", game: "Arma 2", version: 1 },
    { id: 2065, name: "visibleCompass", description: "Checks if the player has compass opened and visible", syntax: "visibleCompass", returns: "null", example: "if (visibleCompass) then {hint 'Compass is visible'};", game: "Arma 3", version: 1.22 },
    { id: 2066, name: "visibleGPS", description: "Checks if the player has GPS receiver opened and visible", syntax: "visibleGPS", returns: "null", example: "if (visibleGPS) then {hint 'GPS is visible'};", game: "Arma 3", version: 1.22 },
    { id: 2067, name: "visibleMap", description: "Return true if the main map is shown (active).", syntax: "visibleMap", returns: "null", example: "if (visibleMap) then {hint 'You're showing the map !'}", game: "Arma 2", version: 1 },
    { id: 2068, name: "visiblePosition", description: "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual", syntax: "visiblePosition object", returns: "Array - format PositionAGLS", example: "null", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 2069, name: "visiblePositionASL", description: "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope.", syntax: "visiblePositionASL object", returns: "Array - format PositionASL", example: "playerRenderedPosASL = visiblePositionASL player;", game: "Arma 2: Operation Arrowhead", version: 1.62 },
    { id: 2070, name: "visibleScoretable", description: "Checks whether the score table is visible.", syntax: "visibleScoretable", returns: "null", example: "_visible = visibleScoretable;", game: "Arma 3", version: 1.64 },
    { id: 2071, name: "visibleWatch", description: "Checks if the player has watch opened and visible", syntax: "visibleWatch", returns: "null", example: "if (visibleWatch) then {hint 'Watch is visible'};", game: "Arma 3", version: 1.22 },
    { id: 2072, name: "waitUntil", description: "Suspends execution of function or SQF based script until given condition is satisfied. This command will loop and call the code inside {} mostly every frame (depends on complexity of condition and overall engine load) until the code returns true. The execution of the rest of the script therefore will be suspended until waitUntil  completes.    If the very first execution of the code returns true the command will exit immediately, therefore it will not produce any 'Suspending not allowed in this context' error when used inside non-scheduled script. For all other uses it must be executed in environment that allows suspension (canSuspend), such as spawned or execVMed code.", syntax: "waitUntil condition", returns: "Nothing", example: "waitUntil { not alive player };", game: "Armed Assault", version: 1 },
    { id: 2073, name: "waves", description: "Return waves value.", syntax: "waves", returns: "null", example: "waveIntensity = waves;", game: "Arma 3", version: 0.5 },
    { id: 2074, name: "waypointAttachedObject", description: "Gets the object attached to the waypoint.", syntax: "waypointAttachedObject waypoint", returns: "Object", example: "waypointAttachedObject [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2075, name: "waypointAttachedVehicle", description: "Gets the vehicle attached to the waypoint.  A vehicle can be attached to a waypoint by creating the waypoint on top of the vehicle (in the editor) using waypointAttachVehicle", syntax: "waypointAttachedVehicle waypoint", returns: "Object", example: "waypointAttachedVehicle [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2076, name: "waypointAttachObject", description: "Attaches a static object via it's numeric ID to the given waypoint.  The alternative syntax is (at least) available since Arma 2.", syntax: "waypoint waypointAttachObject objectID", returns: "objectID: Number", example: "[_grp, 2] waypointAttachObject 1234", game: "Armed Assault", version: 1 },
    { id: 2077, name: "waypointAttachVehicle", description: "Attaches a Unit to the given Waypoint.", syntax: "waypoint waypointAttachVehicle vehicleName", returns: "vehicleName: Object", example: "[_grp, 2] waypointAttachVehicle vehicle player", game: "Armed Assault", version: 1 },
    { id: 2078, name: "waypointBehaviour", description: "Gets the waypoint behavior.", syntax: "waypointBehaviour waypoint", returns: "String", example: "waypointBehaviour [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2079, name: "waypointCombatMode", description: "Gets the waypoint combat mode.", syntax: "waypointCombatMode waypoint", returns: "String", example: "waypointCombatMode [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2080, name: "waypointCompletionRadius", description: "Gets the radius around the waypoint where the waypoint is completed.", syntax: "waypointCompletionRadius waypoint", returns: "Number", example: "_radius = waypointCompletionRadius [groupOne, 1];", game: "Arma 2", version: 1 },
    { id: 2081, name: "waypointDescription", description: "Gets the waypoint description.", syntax: "waypointDescription waypoint", returns: "String", example: "waypointDescription [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2082, name: "waypointForceBehaviour", description: "Returns true if the waypoint behavior is forced.", syntax: "waypointForceBehaviour waypoint;", returns: "Boolean - is forced", example: "_isForced = waypointForceBehaviour [groupOne, 1];", game: "Arma 3", version: 1.58 },
    { id: 2083, name: "waypointFormation", description: "Gets the waypoint formation.  Possible values are:   'NO CHANGE'  'COLUMN'  'STAG COLUMN'  'WEDGE'  'ECH LEFT'  'ECH RIGHT'  'VEE'  'LINE'  'FILE'  'DIAMOND'", syntax: "waypointFormation waypoint", returns: "String", example: "waypointFormation [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2084, name: "waypointHousePosition", description: "Gets the house position assigned to the waypoint.", syntax: "waypointHousePosition waypoint", returns: "Number", example: "waypointHousePosition [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2085, name: "waypointLoiterRadius", description: "Gets the waypoint loiter radius. Waypoint uses format Waypoint.", syntax: "waypointLoiterRadius Waypoint", returns: "Number", example: "_radius = waypointLoiterRadius [groupOne, 1];", game: "Arma 3", version: 1 },
    { id: 2086, name: "waypointLoiterType", description: "Gets the waypoint loiter type. Waypoint uses format Waypoint.", syntax: "waypointLoiterType Waypoint", returns: "String", example: "_type = waypointLoiterType [groupOne, 1]", game: "Arma 3", version: 1 },
    { id: 2087, name: "waypointName", description: "Gets the waypoint name.", syntax: "waypointName waypoint", returns: "String", example: "null", game: "Arma 3", version: 0.5 },
    { id: 2088, name: "waypointPosition", description: "Get Waypoint's  Position.  Note: This function is identical to getWPPos.", syntax: "Array = waypointPosition waypoint", returns: "Array - format Position", example: "_wPos = waypointPosition [_groupOne, 1];", game: "Operation Flashpoint", version: 1.5 },
    { id: 2089, name: "waypoints", description: "Returns an array of waypoints for the specified unit/group.", syntax: "Array = waypoints groupName", returns: "Array of waypoints each in format Waypoint", example: "waypoints player;", game: "Armed Assault", version: 1.05 },
    { id: 2090, name: "waypointScript", description: "Gets the waypoint script.", syntax: "waypointScript waypoint", returns: "String", example: "waypointScript [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2091, name: "waypointsEnabledUAV", description: "Checks if the UAV has waypoints enabled.", syntax: "waypointsEnabledUAV uav", returns: "Boolean", example: "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", game: "Arma 3", version: 1.4 },
    { id: 2092, name: "waypointShow", description: "Gets the waypoint show/hide status.   Possible values are:  'NEVER' - never show it  'EASY' - show only in cadet mode  'ALWAYS' - always show it  'ERROR' - when set to any different string", syntax: "waypointShow waypoint", returns: "String - see description", example: "_wpShow = waypointShow [groupOne,1];", game: "Arma 2", version: 1 },
    { id: 2093, name: "waypointSpeed", description: "Gets the waypoint speed.  Possible values are:  'UNCHANGED'  'LIMITED'  'NORMAL'  'FULL'", syntax: "waypointSpeed waypoint", returns: "String - see description", example: "_speed = waypointSpeed [groupOne,1];", game: "Arma 2", version: 1 },
    { id: 2094, name: "waypointStatements", description: "Gets the waypoint statements.", syntax: "waypointStatements waypoint", returns: "Array", example: "waypointStatements [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2095, name: "waypointTimeout", description: "Gets the waypoint timeout values.", syntax: "waypointTimeout waypoint", returns: "Array", example: "waypointTimeout [groupOne,1]", game: "Arma 2", version: 1 },
    { id: 2096, name: "waypointTimeoutCurrent", description: "Gets the current waypoint timeout or -1 if countdown is not in progress.", syntax: "waypointTimeoutCurrent waypoint", returns: "Number", example: "_timeout = waypointTimeoutCurrent groupOne;", game: "Arma 3", version: 1.08 },
    { id: 2097, name: "waypointType", description: "Gets the waypoint type.  Type can be:  'MOVE'  'DESTROY'  'GETIN'  'SAD'  'JOIN'  'LEADER'  'GETOUT'  'CYCLE'  'LOAD'  'UNLOAD'  'TR UNLOAD'  'HOLD'  'SENTRY'  'GUARD'  'TALK'  'SCRIPTED'  'SUPPORT'  'GETIN NEAREST'  'DISMISS'  'AND'  'OR'  More details at Waypoint types.", syntax: "waypointType waypoint", returns: "String", example: "waypointType [groupOne,1],", game: "Arma 2", version: 1 },
    { id: 2098, name: "waypointVisible", description: "Returns the visibility of the waypoint.  Returns 0 (Number) for a non valid waypoint.", syntax: "waypointVisible waypoint", returns: "Boolean", example: "_visible = waypointVisible [groupOne, 1];", game: "Arma 2: Operation Arrowhead", version: 1.55 },
    { id: 2099, name: "weaponAccessories", description: "Get array with all items linked to a given weapon.", syntax: "unit weaponAccessories weapon", returns: "weapon: String - primary, secondary or handgun", example: "player weaponAccessories primaryWeapon player; ['','acc_pointer_IR','optic_Aco','']", game: "Arma 3", version: 0.5 },
    { id: 2100, name: "weaponAccessoriesCargo", description: "Returns array with all items assigned to the given weapon in given cargo container.", syntax: "container weaponAccessoriesCargo [weaponId, creatorId]", returns: "[weaponId, creatorId]: Array", example: "null", game: "Arma 3", version: 1.22 },
    { id: 2101, name: "weaponCargo", description: "Get array with weapons from ammo box (or any general weapon holder container).", syntax: "weaponCargo box", returns: "Array - Format: ['WeaponType1', 'WeaponType1', 'WeaponType2'...]", example: "hint str weaponCargo backpackContainer player;", game: "Arma 3", version: 0.5 },
    { id: 2102, name: "weaponDirection", description: "Returns the direction that the vehicle weapon is aiming in.  For addons the weapon name must be an entry in CfgWeapons.  Returns an array in format [x, y, z]", syntax: "vehicleName weaponDirection weaponName", returns: "weaponName: String", example: "_weaponVectorDir = player weaponDirection currentWeapon player;", game: "Armed Assault", version: 1 },
    { id: 2103, name: "weaponInertia", description: "Returns current rate of how much the weapon view is distorted because of quick aiming", syntax: "weaponInertia unit", returns: "Array", example: "null", game: "Arma 3", version: 1.48 },
    { id: 2104, name: "weaponLowered", description: "True if given soldier's weapon is lowered.", syntax: "weaponLowered unit", returns: "Boolean", example: "isWeaponLowered = weaponLowered player;", game: "Arma 3", version: 0.5 },
    { id: 2105, name: "weapons", description: "Returns array of names of all Unit's weapons.", syntax: "Array = weapons vehicleName", returns: "Array of weapon names.", example: "_wArray = weapons player;", game: "Operation Flashpoint: Resistance", version: 1.75 },
    { id: 2106, name: "weaponsItems", description: "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.  Since Arma 3 v1.21.124406 it is possible to query weapon holders and ammo crates with this command. If weapon has no magazine, an empty array [] is returned instead of magazine info.", syntax: "weaponsItems vehicle", returns: "Array", example: "hint str weaponsItems player;", game: "Arma 3", version: 0.76 },
    { id: 2107, name: "weaponsItemsCargo", description: "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info.", syntax: "weaponsItemsCargo vehicle", returns: "Array", example: "weaponsItemsCargo vehicle player;", game: "Arma 3", version: 1.22 },
    { id: 2108, name: "weaponState", description: "Returns the currently selected weapon state for unit or vehicle.    Since Arma 3 v1.69.140397 this command has been improved and extended:  It is now possible to query any weapon of a vehicle without the need to place a weapon operator first, provided the weapon or muzzle is specified in optional param. By default a vehicle has no weapons selected, so querying currently selected weapon returns no weapon, unless weapon is specified.  Driver turret can now be accessed as well with turret path [-1].  Muzzle name is supported as well as weapon name. Weapon search gets priority, but if there is no weapon with given name, the muzzles will be searched.", syntax: "weaponState unit", returns: "Array - in format [weapon, muzzle, firemode, magazine, ammoCount], where:  weapon: String  muzzle: String  firemode: String  magazine: String  ammoCount: Number", example: "_wsPlayer = weaponState player; // ['arifle_MXC_ACO_F','arifle_MXC_ACO_F','Single','30Rnd_65x39_caseless_mag',30]", game: "Arma 2: Operation Arrowhead", version: 1.6 },
    { id: 2109, name: "weaponsTurret", description: "Returns all weapons of given turret. Use turret path [-1] for driver's turret.", syntax: "vehicle weaponsTurret turretPath", returns: "turretPath: Array", example: "_weapons = vehicle player weaponsTurret [0,0]", game: "Arma 2: Operation Arrowhead", version: 1.52 },
    { id: 2110, name: "weightRTD", description: "Returns weight of RTD helicopter.", syntax: "weightRTD helicopter", returns: "Array -  [fuselage weight, crew weight, fuel weight, custom weight, weapons weight] (kilograms)", example: "_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]", game: "Arma 3", version: 1.34 },
    { id: 2111, name: "west", description: "West side.", syntax: "west", returns: "null", example: "?((side _unit) == west) : hint 'This is a western unit!'", game: "Operation Flashpoint", version: 1 },
    { id: 2112, name: "WFSideText", description: "Returns the unlocalized text value of an object's side / a group's side or a side as:   east, opfor - 'East'   west, blufor - 'West'  resistance, independent - 'Resistance'  civilian - 'Civilian'  sideUnknown - 'Unknown'  sideEnemy - 'Unknown'  sideFriendly - 'Unknown'  sideLogic - 'Unknown'  sideEmpty - 'Unknown'  sideAmbientLife - 'Unknown'", syntax: "WFSideText param", returns: "String - unlocalized side text value", example: "WFSideText player;", game: "Arma 2", version: 1.04 },
    { id: 2113, name: "while", description: "Repeats Code while condition is true. A part of while do construct.", syntax: "while condition", returns: "While Type", example: "while {a < b} do {a = a + 1};", game: "Operation Flashpoint: Resistance", version: 1.85 },
    { id: 2114, name: "wind", description: "Returns the current wind vector (in m/s) as array [x, z, y].", syntax: "wind", returns: "null", example: "_windarray = wind;", game: "Armed Assault", version: 1 },
    { id: 2115, name: "windDir", description: "Returns the current wind azimuth.", syntax: "windDir", returns: "null", example: "if (windDir < 45 || windDir > 315) then {     hint 'I feel a northern wind'; };", game: "Arma 3", version: 0.5 },
    { id: 2116, name: "windStr", description: "Returns the current wind strength.", syntax: "windStr", returns: "null", example: "10 setWindStr (0.5 * windStr);", game: "Arma 3", version: 0.5 },
    { id: 2117, name: "wingsForcesRTD", description: "Returns force produced by wings.", syntax: "wingsForcesRTD RTD_helicopter", returns: "Array", example: "_wingForce = wingsForcesRTD _rtdHelo", game: "Take On Helicopters", version: 1 },
    { id: 2118, name: "with", description: "Creates a With Type that is used inside a do construct in order to execute code inside a given namespace.           when used in a do-construct in scripts with allowed suspension, an unexpected namespace switch could happen (see note below)  NOTE for the reasons unknown, namespace switching might unexpectedly occur inside some scopes (for, if, try, call) started in scheduled scripts (canSuspend true) after small suspension if with was not the main scope. For example:  [] spawn { 	with uiNamespace do  	{ 		for '_i' from 1 to 1 do  		{ 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [true, false] 			sleep 0.05; //<-- small suspension 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [false, true] <-- switching 		}; 	}; }; However if with used in parent scope, everything works correctly: with uiNamespace do { 	[] spawn  	{ 		for '_i' from 1 to 1 do  		{ 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [true, false] 			sleep 0.05; //<-- small suspension 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [true, false] <-- NO switching 		}; 	}; }; To eliminate possibility of error you can also use setVariable or getVariable with desired Namespace, which is also scheduled environment save.", syntax: "with namespace", returns: "With Type", example: "[] spawn { 	with uiNamespace do  	{ 		for '_i' from 1 to 1 do  		{ 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [true, false] 			sleep 0.05; //<-- small suspension 			systemChat str [ 				currentNamespace isEqualTo uiNamespace,  				currentNamespace isEqualTo missionNamespace 			];  			// result [false, true] <-- switching 		}; 	}; };", game: "Arma 2", version: 1 },
    { id: 2119, name: "worldName", description: "Return the name of the currently loaded world.", syntax: "worldName", returns: "null", example: "_name = worldName;", game: "Armed Assault", version: 1 },
    { id: 2120, name: "worldSize", description: "Returns config size of the current world.", syntax: "worldSize", returns: "null", example: "_size = worldSize; //8192", game: "Arma 3", version: 1.48 },
    { id: 2121, name: "worldToModel", description: "Converts position from world space to object model space.", syntax: "model worldToModel position", returns: "position: Array - world position, format PositionAGL or Position2D", example: "_relPos = myObject worldToModel [0,0,0];", game: "Armed Assault", version: 1 },
    { id: 2122, name: "worldToModelVisual", description: "Converts position from world space to object model space in render time scope.", syntax: "object worldToModelVisual worldPosition", returns: "worldPosition: Array - format PositionAGL or Position2D", example: "_relPos = myObject worldToModelVisual [0,0,0];", game: "Arma 3", version: 1.32 },
    { id: 2123, name: "worldToScreen", description: "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.", syntax: "worldToScreen position", returns: "Array - Screen position [x,y] (see SafeZone for more info)", example: "_screenPos = worldToScreen getPos soldier1;", game: "Arma 2", version: 1 },
    { id: 2124, name: "FALSE", description: "Always false.", syntax: "FALSE", returns: "null", example: "_var = false; systemChat str _var;  //false", game: "Operation Flashpoint", version: 1 },
    { id: 2125, name: "TRUE", description: "Always true", syntax: "TRUE", returns: "null", example: "_var = true; systemChat str _var;  //true", game: "Operation Flashpoint", version: 1 }
]

// export { ALLITEMS };
// module.exports = ALLITEMS;
